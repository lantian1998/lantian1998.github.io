<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lantian.pub</id>
    <title>Lan Tian @ Blog</title>
    <updated>2025-10-25T23:46:30.206Z</updated>
    <generator>Astro v5.15.1</generator>
    <author>
        <name>Lan Tian</name>
        <uri>https://lantian.pub</uri>
    </author>
    <link rel="alternate" href="https://lantian.pub"/>
    <link rel="self" href="https://lantian.pub/feed.xml"/>
    <subtitle>Lan Tian @ Blog</subtitle>
    <icon>https://lantian.pub/favicon.ico</icon>
    <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    <entry>
        <title type="html"><![CDATA[Legal LTE Network at Home with Open5GS]]></title>
        <id>https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-with-open5gs.lantian/</id>
        <link href="https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-with-open5gs.lantian/"/>
        <updated>2025-07-20T12:38:31.000Z</updated>
        <content type="html"><![CDATA[<p>In my <a href="https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/">previous post</a>, I built a legal LTE network using the US CBRS band and <a href="https://magmacore.org/" rel="noopener noreferrer" target="_blank">Magma LTE core network software</a>.</p>
<blockquote>
<p>Regarding "legal": I am not a lawyer or a wireless expert. Based on my research into the relevant policies and regulations, my entire setup should be legal. However, I take no responsibility if you encounter any legal issues after following the instructions in this post.</p>
</blockquote>
<p>I chose Magma at the time because the CBRS LTE base station I bought was originally used for the Helium Mobile network, and <a href="https://github.com/helium/HIP/blob/main/0139-phase-out-cbrs.md#what-to-do-with-cbrs-radios" rel="noopener noreferrer" target="_blank">Nova Labs/Helium Mobile uses Magma for its CBRS core network</a>. This ensured that Magma was compatible with my base station. However, from the perspective of building a self-hosted core network in a Homelab, Magma has these issues:</p>
<ul>
<li>Magma's core network relies on Docker or Kubernetes for deployment, making it difficult to deploy outside of containers using conventional methods (e.g., systemd services). As a NixOS user, I prefer to avoid bloated Docker containers and manage services on the system using systemd.</li>
<li>Magma's Access Gateway can only be installed on Ubuntu 20.04, which has a completely different system management approach from my usual NixOS. This means I would need to manually manage the Access Gateway machine's configuration and system upgrades, without being able to reuse my existing NixOS configuration.</li>
<li>Magma sometimes has strange issues, such as:
<ul>
<li>Android phones always failing to connect to the base station while iPhones work fine;</li>
<li>Phones unable to properly obtain the network name, always displaying MCC/MNC <code>315 010</code> instead of the actual configured network name <code>Lan Tian Mobile</code>;</li>
<li>The Access Gateway connected to the core network and synchronized configurations normally, but the core network management interface showed that the Access Gateway had not been connected for a long time.</li>
</ul>
</li>
</ul>
<p>Therefore, after finishing the previous post and confirming the feasibility of building a self-hosted LTE network, I began trying to replace Magma with another open-source LTE core network software, <a href="https://open5gs.org/" rel="noopener noreferrer" target="_blank">Open5GS</a>.</p>
<p>Compared to Magma, Open5GS has these advantages:</p>
<ul>
<li>Open5GS does not distinguish between core network and Access Gateway components; it can be fully deployed on a single machine.</li>
<li>Open5GS packages are already available in Nixpkgs (<code>pkgs.open5gs</code>), so I can install and use it directly on NixOS without needing to package it myself, and without Docker or Ubuntu.</li>
<li>Open5GS does not have the strange issues that Magma has; once set up, it is quite stable.</li>
</ul>
<p>This post documents the process of setting up a core network with Open5GS on NixOS, and connecting a FreedomFi/Sercomm SCE4255W base station to the core network to transmit LTE signals.</p>
<h1 id="installing-open5gs">Installing Open5GS</h1>
<blockquote>
<p>I referenced the following materials during the configuration process:</p>
<ul>
<li><a href="https://open5gs.org/open5gs/docs/" rel="noopener noreferrer" target="_blank">Open5GS official documentation</a></li>
<li>A set of Open5GS (and some add-ons) configurations packaged as ready-to-use Docker containers: <a href="https://github.com/herlesupreeth/docker_open5gs" rel="noopener noreferrer" target="_blank">herlesupreeth/docker_open5gs</a></li>
</ul>
</blockquote>
<h2 id="preparation">Preparation</h2>
<p>This post assumes you have prepared the following hardware or software configurations as described in my <a href="https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/">previous post</a>. If you have not completed these configurations, you can refer to the corresponding sections in the previous post to configure the software or purchase the hardware:</p>
<ul>
<li>A FreedomFi/Sercomm SCE4255W base station with the web management interface unlocked.</li>
<li>The base station is already registered with the CBRS SAS.</li>
<li>A SIM card programmedwith authentication information (KI, OPC, etc.), and you have recorded this authentication information (for later registration with Open5GS).</li>
</ul>
<p>This post will use NixOS for all configurations, but I also provides some commands for Ubuntu, which users of other Linux distributions can use as a reference.</p>
<h2 id="understanding-open5gs-components">Understanding Open5GS Components</h2>
<p>Open5GS, as its name suggests, is primarily a software that implements a 5G core network (as well as a LTE core network). Since the core network protocols and structure in the 5G era are significantly different from the 4G era, especially for standalone 5G SA networks, Open5GS can roughly be seen as a set of LTE/5G NSA core network software, plus a set of 5G SA core network software, with a small portion of components shared between them.</p>
<p>The LTE/5G NSA part of Open5GS consists of the following components:</p>
<ul>
<li>MME - Mobility Management Entity</li>
<li>HSS - Home Subscriber Server</li>
<li>PCRF - Policy and Charging Rules Function</li>
<li>SGWC - Serving Gateway Control Plane</li>
<li>SGWU - Serving Gateway User Plane</li>
<li>SMF - Session Management Function
<ul>
<li>SMF itself is a 5G core network component, but Open5GS SMF also implements the Packet Gateway Control Plane in the 4G core network structure.</li>
</ul>
</li>
<li>UPF - User Plane Function
<ul>
<li>UPF itself is a 5G core network component, but Open5GS UPF also implements the Packet Gateway User Plane in the 4G core network structure.</li>
</ul>
</li>
<li>SCP - <del>Secure, Contain, Protect</del> Service Communication Proxy
<ul>
<li>SCP itself is a 5G core network component, but SMF depends on it.</li>
</ul>
</li>
<li>NRF - NF Repository Function
<ul>
<li>NRF itself is a 5G core network component, but SCP depends on it.</li>
</ul>
</li>
</ul>
<p>And the 5G SA part consists of the following components:</p>
<ul>
<li>NRF - NF Repository Function</li>
<li>SCP - Service Communication Proxy</li>
<li>SEPP - Security Edge Protection Proxy</li>
<li>AMF - Access and Mobility Management Function</li>
<li>SMF - Session Management Function</li>
<li>UPF - User Plane Function</li>
<li>AUSF - Authentication Server Function</li>
<li>UDM - Unified Data Management</li>
<li>UDR - Unified Data Repository</li>
<li>PCF - Policy and Charging Function</li>
<li>NSSF - Network Slice Selection Function</li>
<li>BSF - Binding Support Function</li>
</ul>
<p>These components communicate with each other in the following structure:</p>
<p><picture><source srcset="/usr/uploads/202507/Open5GS_CUPS-01.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202507/Open5GS_CUPS-01.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202507/Open5GS_CUPS-01.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/Open5GS_CUPS-01.jpg" alt="Open5GS Component Architecture Diagram"></picture></p>
<p>(Image source: <a href="https://open5gs.org/open5gs/docs/guide/01-quickstart/" rel="noopener noreferrer" target="_blank">Open5GS official documentation</a>)</p>
<p>The communication between various components of the 4G/5G core network uses the standardized <a href="https://en.wikipedia.org/wiki/Diameter_(protocol)" rel="noopener noreferrer" target="_blank">Diameter protocol</a>, which is based on TCP or <a href="https://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol" rel="noopener noreferrer" target="_blank">SCTP</a> protocol, exchanging data between various components of the 4G/5G core network. This also means that hardware and software from different vendors, as long as they support the Diameter protocol, can join the same core network and jointly provide services to mobile users.</p>
<p>However, in this post, I will only use Open5GS components, and will not add other components to the core network for now.</p>
<h2 id="installing-open5gs-package">Installing Open5GS Package</h2>
<p>If you are using Ubuntu, you can refer to the <a href="https://open5gs.org/open5gs/docs/guide/01-quickstart/" rel="noopener noreferrer" target="_blank">Open5GS official installation tutorial</a>:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Install MongoDB</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">curl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -fsSL</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://pgp.mongodb.com/server-8.0.asc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> gpg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -o</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /usr/share/keyrings/mongodb-server-8.0.gpg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --dearmor</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/sources.list.d/mongodb-org-8.0.list</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> mongodb-org</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Install Open5GS</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> add-apt-repository</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ppa:open5gs/latest</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs</span></span></code></pre>
<p>During this process, in addition to installing the Open5GS binaries, a set of systemd services corresponding to each Open5GS component is created, and the default Open5GS configuration is copied to <code>/etc</code>.</p>
<p>Since NixOS only has the Open5GS package (<code>pkgs.open5gs</code>) and no corresponding NixOS module, we need to manually create systemd services for Open5GS, mimicking the installation process on other systems like Ubuntu:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, ... }:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Since we are only building a 4G core network, only enable the services required for 4G core network</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "hss"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "mme"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "nrf"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "pcrf"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "scp"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "sgwc"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "sgwu"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "smf"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "upf"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Enable MongoDB, HSS, PCF, PCRF components need MongoDB to save configurations</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">mongodb</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    enable</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">true</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    bind_ip</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"127.0.0.1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    package</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mongodb-ce</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Create systemd services for each Open5GS component</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">listToAttrs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">map</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs-</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">d"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Open5GS </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">toUpper</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> Daemon"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        wantedBy</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"multi-user.target"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        requires</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        serviceConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">          # The configuration file in the open5gs folder pointed to here will be created in the next step</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          ExecStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/open5gs-</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">d -c </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.yaml"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          ExecReload</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">coreutils</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/kill -HUP $MAINPID"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          LogsDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          User</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          Group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          Restart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"always"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          RestartSec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          RestartPreventExitStatus</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    }) </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">services</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Create a separate user and group for Open5GS</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  users</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">users</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    isSystemUser</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">true</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  users</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">groups</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = { };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Create a TUN interface named ogstun for communication with LTE devices</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">network</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">netdevs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    netdevConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Kind</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"tun"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ogstun"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">network</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">networks</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # The IP addresses used here are the same as in the default Open5GS configuration</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    address</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "10.45.0.1/16"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "2001:db8:cafe::1/48"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    linkConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      MTUBytes</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1400</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      RequiredForOnline</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    matchConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">Name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ogstun"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="creating-open5gs-configuration-files">Creating Open5GS Configuration Files</h2>
<p>If you are using Ubuntu, the above installation process should have automatically installed the default configuration files to <code>/etc/freeDiameter</code> and <code>/etc/open5gs</code>. However, in NixOS, this process is not automatic, and we need to manually copy the configuration files or manually specify their paths.</p>
<p>Since the Nixpkgs Open5GS package already comes with a set of default configurations, we can directly copy the default configuration files from this package. First, build the package:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nix</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> nixpkgs#open5gs</span></span></code></pre>
<p>If all goes well, Nix will download the pre-compiled Open5GS from the Binary Cache and symlink it to the <code>result</code> directory. At this point, we can see the default configuration files in the <code>result/etc</code> folder:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">ls</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> result/etc</span></span></code></pre>
<p>Then we can copy them to our NixOS configuration for later modification:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -r</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> result/etc/freeDiameter</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/freeDiameter</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -r</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> result/etc/open5gs</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/open5gs</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Files copied from Nix store are read-only by default, add write permissions to them</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">chmod</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -R</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> +w</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/freeDiameter</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/open5gs</span></span></code></pre>
<p>For files in the <code>freeDiameter</code> folder, we need to place them under <code>/etc/freeDiameter</code>:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  environment</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">etc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"freeDiameter"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./freeDiameter</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>For files in the <code>open5gs</code> folder, you can directly specify the configuration file path using the <code>-c</code> parameter when starting Open5GS:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    ExecStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/open5gs-</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">d -c </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.yaml"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>Not placing them in <code>/etc</code> ensures that Open5GS services will automatically restart after modifying the configuration files.</p>
<h2 id="fixing-paths-in-open5gs-configuration-files-under-nixos">Fixing Paths in Open5GS Configuration Files under NixOS</h2>
<p>Since Open5GS packaged in Nixpkgs is installed by default under a path in <code>/nix/store</code>, its configuration files also references many paths under <code>/nix/store</code> by default.</p>
<p>First, get the actual installation path of Open5GS:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nix</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> nixpkgs#open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --print-out-paths</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --no-link</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Output similar to:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># /nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/</span></span></code></pre>
<p>Then search for this path in the copied configuration files. You will see many places containing the full path:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">grep</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Referencing TLS certificates generated by default during Open5GS build</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter/hss.conf:TLS_Cred = "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/hss.crt", "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/hss.key";</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Referencing freeDiameter Extension</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter/hss.conf:LoadExtension = "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/lib/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Default log path is placed in Nix store</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># open5gs/hss.yaml:    path: /nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/var/log/open5gs/hss.log</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter configuration file path is set in Nix store</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># open5gs/hss.yaml:  freeDiameter: /nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/freeDiameter/hss.conf</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span></code></pre>
<p>Once the Open5GS package or its dependencies are updated, the path of Open5GS in the Nix store will change, causing files specified by absolute paths to become invalid, and preventing Open5GS from starting. Therefore, we need to keep these paths synchronized with the Open5GS path, or point them outside the Nix store, to prevent future issues.</p>
<p>My workaround is to first link a copy of the <code>pkgs.open5gs</code> package to <code>/etc</code>:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  environment</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">etc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs-pkg"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>Then modify the above paths:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># TLS certificates point to /etc/open5gs-pkg. Although this certificate is downloaded from Nixpkgs Binary Cache and the private key can be considered public, we are deploying on a single machine, and communication does not go through external networks, so proper encryption is not necessary.</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/#/etc/open5gs-pkg/etc/open5gs/tls/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter Extension points to /etc/open5gs-pkg</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/lib/freeDiameter/#/etc/open5gs-pkg/lib/freeDiameter/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Paths in /var point to the actual /var</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/var/#/var/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter configuration file points to /etc/freeDiameter</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/freeDiameter/#/etc/freeDiameter/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span></code></pre>
<p>After the modification, we will be able to upgrade Open5GS without issues in the future, and our configuration files placed in <code>/etc</code> will take effect normally.</p>
<h2 id="optional-regenerate-diameter-tls-certificates">(Optional) Regenerate Diameter TLS Certificates</h2>
<p>Open5GS packaged in Nixpkgs comes with a TLS certificate generated during the build process. If your Open5GS is downloaded from the Binary Cache instead of being compiled locally, you will be using the same TLS key  others can download from the Binary Cache.</p>
<p>If you deploy on a single machine according to this tutorial, since all communication is local and does not go through external networks, encryption and private key leakage have little impact on security.</p>
<p>However, if you plan to place some components on other machines, or if you do not want to use this leaked key, you can generate a new one using the following script:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs-certs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    wantedBy</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"multi-user.target"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    path</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">openssl</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    script</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      mkdir -p demoCA</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      if [ ! -f "demoCA/serial" ]; then</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        echo 01 > demoCA/serial</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      fi</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      touch demoCA/index.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      # CA self certificate</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      if [ ! -f "ca.crt" ]; then</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        openssl req -new -x509 -days 3650 -newkey rsa:2048 -nodes -keyout ca.key -out ca.crt \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          -subj /CN=ca.epc.mnc010.mcc315.3gppnetwork.org/C=KO/ST=Seoul/O=NeoPlane</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      for i in amf ausf bsf hss mme nrf scp sepp1 sepp2 sepp3 nssf pcf pcrf smf udm udr</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      do</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        if [ ! -f "$i.crt" ]; then</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -out $i.key</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          openssl req -new -key $i.key -out $i.csr \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -subj /CN=$i.epc.mnc010.mcc315.3gppnetwork.org/C=KO/ST=Seoul/O=NeoPlane</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          openssl ca -batch -notext -days 3650 \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -keyfile ca.key -cert ca.crt \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -in $i.csr -out $i.crt -outdir .</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        fi</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      done</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    serviceConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"oneshot"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      User</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      StateDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs-certs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      WorkingDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"/var/lib/open5gs-certs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>When you run <code>systemctl start open5gs-certs.service</code>, this service will automatically generate missing keys in <code>/var/lib/open5gs-certs</code>.</p>
<p>Then you can modify the Open5GS configuration file to point the TLS key path to <code>/var/lib/open5gs-certs</code>:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If you did not replace the TLS key path in the previous step</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/#/var/lib/open5gs-certs/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If you have already replaced the TLS key path in the previous step</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/etc/open5gs-pkg/etc/open5gs/tls/#/var/lib/open5gs-certs/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span></code></pre>
<p>You can also add <code>open5gs-certs.service</code> to the <code>After</code> and <code>Requires</code> of each Open5GS systemd service to ensure that the keys are generated before Open5GS starts.</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "open5gs-certs.service"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    requires</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "open5gs-certs.service"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="installing-open5gs-web-management-ui">Installing Open5GS Web Management UI</h2>
<p>The above steps configured the Open5GS core network itself, but we also need to install the web management UI to manage SIM card related information registered with Open5GS.</p>
<p>If you are using Ubuntu, you can use the official installation script:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Download Nodesource GPG key</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -y</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ca-certificates</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> curl</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> gnupg</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/keyrings</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">curl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -fsSL</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> gpg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --dearmor</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -o</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/keyrings/nodesource.gpg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Add NodeJS package repository</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">NODE_MAJOR</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">20</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$NODE_MAJOR</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.x nodistro main"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/sources.list.d/nodesource.list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Install NodeJS</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> nodejs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Install Open5GS WebUI</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">curl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -fsSL</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://open5gs.org/open5gs/assets/webui/install</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -E</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -</span></span></code></pre>
<p>If you are using NixOS, you can install it with the following configuration:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  config</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs-webui</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Open5GS WebUI"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    wantedBy</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"multi-user.target"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    requires</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    path</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      bash</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      nodejs</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      rsync</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    environment</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      HOSTNAME</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"0.0.0.0"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      PORT</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"9999"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    preStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      export HOME=$(pwd)</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      rsync -r --chmod=D755,F755 </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/webui/ .</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      npm install</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      npm run build</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    serviceConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      ExecStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">nodejs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/npm run start"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      CacheDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      WorkingDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"/var/cache/open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      User</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Restart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"always"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      RestartSec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="starting-open5gs">Starting Open5GS</h2>
<p>Deploy the above configuration to your NixOS machine, and if everything goes well, these services should start normally without issues.</p>
<p>If you are using Ubuntu, all 4G/5G services should have automatically started when you installed the <code>open5gs</code> package. You can disable the 5G SA related services that we don't need, or you can ignore them; they will not affect subsequent configurations.</p>
<h2 id="creating-default-administrator-for-management-panel">Creating Default Administrator for Management Panel</h2>
<p>Open5GS does not automatically create a default administrator user when it starts, so after the deployment is complete and MongoDB has started, we need to manually run the following command to create an administrator:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cat</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;&#x3C;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mongosh</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">db = db.getSiblingDB('open5gs')</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">cursor = db.accounts.find()</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">if ( cursor.count() == 0 ) {</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    db.accounts.insertOne({ salt: 'f5c15fa72622d62b6b790aa8569b9339729801ab8bda5d13997b5db6bfc1d997', hash: '402223057db5194899d2e082aeb0802f6794622e1cbc47529c419e5a603f2cc592074b4f3323b239ffa594c8b756d5c70a4e1f6ecd3f9f0d2d7328c4cf8b1b766514effff0350a90b89e21eac54cd4497a169c0c7554a0e2cd9b672e5414c323f76b8559bc768cba11cad2ea3ae704fb36abc8abc2619231ff84ded60063c6e1554a9777a4a464ef9cfdfa90ecfdacc9844e0e3b2f91b59d9ff024aec4ea1f51b703a31cda9afb1cc2c719a09cee4f9852ba3cf9f07159b1ccf8133924f74df770b1a391c19e8d67ffdcbbef4084a3277e93f55ac60d80338172b2a7b3f29cfe8a36738681794f7ccbe9bc98f8cdeded02f8a4cd0d4b54e1d6ba3d11792ee0ae8801213691848e9c5338e39485816bb0f734b775ac89f454ef90992003511aa8cceed58a3ac2c3814f14afaaed39cbaf4e2719d7213f81665564eec02f60ede838212555873ef742f6666cc66883dcb8281715d5c762fb236d72b770257e7e8d86c122bb69028a34cf1ed93bb973b440fa89a23604cd3fefe85fbd7f55c9b71acf6ad167228c79513f5cfe899a2e2cc498feb6d2d2f07354a17ba74cecfbda3e87d57b147e17dcc7f4c52b802a8e77f28d255a6712dcdc1519e6ac9ec593270bfcf4c395e2531a271a841b1adefb8516a07136b0de47c7fd534601b16f0f7a98f1dbd31795feb97da59e1d23c08461cf37d6f2877d0f2e437f07e25015960f63', username: 'admin', roles: [ 'admin' ], "__v" : 0})</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">}</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span></span></code></pre>
<p>(Source: <a href="https://github.com/open5gs/open5gs/blob/main/docs/assets/webui/mongo-init.js" rel="noopener noreferrer" target="_blank">https://github.com/open5gs/open5gs/blob/main/docs/assets/webui/mongo-init.js</a>)</p>
<p>The above command will create an administrator user with username <code>admin</code> and password <code>1423</code>.</p>
<p>Open <code>http://[Open5GS machine's IP address]:9999</code> in your browser, and log in to the management panel with the above username and password.</p>
<h1 id="modifying-open5gs-configuration-files">Modifying Open5GS Configuration Files</h1>
<p>After Open5GS is installed, you will need to modify the configuration files to match the parameters of our CBRS LTE network. We only need to make the following changes:</p>
<ul>
<li>Change MCC/MNC from the default 999/70 to CBRS's 315/010.</li>
</ul>
<p>Simply search globally for <code>mcc: 999</code> and <code>mnc: 70</code>, and replace them with <code>mcc: 315</code> and <code>mnc: 010</code> respectively:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#mcc: 999#mcc: 315#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#mnc: 70#mnc: 010#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span></code></pre>
<ul>
<li>Make the MME component listen on <code>eth0</code> (or your actual network card name) interface instead of <code>127.0.0.2</code>, otherwise the base station cannot connect to the core network.</li>
</ul>
<p>Modify <code>open5gs/mme.yaml</code>, change the original configuration under <code>s1ap</code>:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">mme</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  s1ap</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">    server</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      - </span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">address</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">127.0.0.2</span></span></code></pre>
<p>To:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">mme</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  s1ap</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">    server</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      - </span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">dev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">eth0</span><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Or your actual network card name</span></span></code></pre>
<ul>
<li>(Optional) Customize the network name broadcast by MME.</li>
</ul>
<p>Modify <code>open5gs/mme.yaml</code>, find <code>network_name</code>:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">network_name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  full</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">Open5GS</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  short</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">Next</span></span></code></pre>
<p>Change it to your desired network name, for example:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">network_name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  full</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">Lan Tian Mobile</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  short</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">LTMobile</span></span></code></pre>
<p>Finally, restart all Open5GS related services:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">systemctl</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> restart</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs-</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\*</span></span></code></pre>
<h1 id="connecting-freedomfisercomm-base-station-to-open5gs">Connecting FreedomFi/Sercomm Base Station to Open5GS</h1>
<p>First, please ensure that you can log in to the FreedomFi/Sercomm SCE4255 base station's web management panel via IP address. If you cannot access the base station's web management panel, please refer to the <a href="https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/#unlocking-the-management-interface-of-the-indoor-base-station">section on enabling the management panel in my previous post</a>.</p>
<h2 id="disabling-tr-069-remote-management">Disabling TR-069 Remote Management</h2>
<p>FreedomFi's Sercomm base stations by default connect to <code>acs.freedomfi.com</code>, a TR-069 server, to automatically obtain configurations. Although this remote management server was shut down when Helium Mobile discontinued its CBRS network, our base station will still continuously try to connect to this server. When using Magma to build the core network, since the Magma core network itself has TR-069 server functionality, we can keep remote management enabled and simply hijack remote management requests to our TR-069 server. However, Open5GS does not have TR-069 functionality, so we need to disable the base station's TR-069 remote management to avoid unnecessary requests, and prevent the base station's configuration from being accidentally overwritten.</p>
<p>Click <code>TR098</code> at the top of the management interface, then switch to the <code>MgntServer</code> tab to switch to the base station's TR-069 remote management settings page:</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-tr069.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-tr069.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-tr069.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-tr069.png" alt="Sercomm Base Station TR-069 Settings Page"></picture></p>
<p>Uncheck <code>EnableCWMP</code>, then click the <code>Save</code> button to save the settings.</p>
<p>Since the Sercomm base station management panel has some bugs, it is recommended to restart the base station here to ensure the settings take effect. The base station may automatically restart when saving settings, but if it does not, you can manually restart it by clicking the power button in the upper right corner of the management interface, or by manually power cycling it. After restarting, please return to this page and ensure <code>EnableCWMP</code> is unchecked.</p>
<p>At this point, the base station's TR-069 remote management function is disabled, and we can modify settings without fear of being overwritten by remote management.</p>
<h2 id="modifying-base-station-cbrs-sas-connection-configuration">Modifying Base Station CBRS SAS Connection Configuration</h2>
<p>The next step is to connect the base station to the CBRS SAS server to obtain spectrum allocation, thereby avoiding conflicts with other base stations or operator signals, and preventing the FCC from SWATting you. When using the Magma core network, the CBRS SAS connection is automatically configured by Magma's TR-069 server, but since Open5GS does not have TR-069 functionality, this needs to be done manually.</p>
<p>First, ensure your base station is registered with the SAS. You can refer to the <a href="https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/#connecting-the-base-station-to-sas">section on connecting to SAS in my previous post</a>.</p>
<p>Then, click <code>Manage</code> at the top of the base station management interface, then switch to the <code>SAS Configuration</code> tab:</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-sas.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-sas.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-sas.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-sas.png" alt="Sercomm Base Station SAS Settings Page"></picture></p>
<ul>
<li>Check the <code>Enable</code> option.</li>
<li>Enter <code>0</code> for the <code>Method</code> option.</li>
<li>Select <code>Commercial-Google</code> for <code>Server</code>, corresponding to Google SAS. At this point, <code>Server Url</code> should be automatically populated.</li>
<li>Enter your Google Cloud Project ID for <code>UserID</code>, which can be found on the console homepage: <a href="https://console.cloud.google.com" rel="noopener noreferrer" target="_blank">https://console.cloud.google.com</a></li>
<li>Select <code>A</code> for <code>Category</code>, corresponding to indoor base stations.</li>
<li>Select <code>GAA</code> for <code>ChannelType</code>, corresponding to the lowest priority of the three types of CBRS users.</li>
<li>Enter <code>/C=TW/O=Sercomm/OU=WInnForum CBSD Certificate/CN=P27-SCE4255W:%s</code> for <code>CertSubject</code>.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202507/sercomm-sas-location.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-sas-location.png" alt="Sercomm Base Station SAS Location Settings Page"></picture></p>
<ul>
<li>Select <code>indoor</code> for <code>Location</code>, corresponding to indoor deployment.</li>
<li>If your base station's location has good GPS signal, <code>Location Source</code> can be set to <code>GPS</code>. However, if the GPS signal is poor, the base station will need to wait for GPS positioning to complete before connecting to CBRS SAS and starting to transmit signals after restarting. In this case, you can select <code>Manual</code> and manually enter the base station's latitude and longitude.</li>
<li><code>Latitude</code> is latitude, with positive values for north of equator, and negative values for south of equator. Note that the unit for Sercomm base station's latitude and longitude is microdegrees (i.e., one millionth of a degree), so if you want to set 40 degrees north of equator, please enter <code>40000000</code>.</li>
<li><code>Longitude</code> is longitude, with positive values for east of meridian, and negative values for west of meridian. Note that the unit for Sercomm base station's latitude and longitude is microdegrees (i.e., one millionth of a degree), so if you want to set 80 degrees west of meridian, please enter <code>-80000000</code>.
<ul>
<li>Please obtain the latitude and longitude using your mobile phone or other devices for actual positioning. The base station's location needs to be relatively precise, otherwise it will affect the CBRS SAS spectrum allocation. This latitude and longitude should also be consistent with the latitude and longitude set on the CBRS SAS platform.</li>
</ul>
</li>
<li>Select <code>AMSL</code> for <code>HeightType</code>, which means height above mean sea level.</li>
<li>Enter the base station's altitude for <code>Elevation</code>, in millimeters, so if you want to set 40 meters above sea level, please enter <code>40000</code>.</li>
</ul>
<p>Save the settings. You don't need to restart the base station yet; you can wait until configuring the base station's connection to the Open5GS core network in the next step.</p>
<h2 id="modifying-base-station-core-network-connection-configuration">Modifying Base Station Core Network Connection Configuration</h2>
<p>The next step is to connect the base station to the Open5GS core network to transmit user information and data traffic.</p>
<p>Click <code>Manage</code> at the top of the base station management interface, then switch to the <code>LTE Basic Setting</code> tab:</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-sas-location.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-sas-location.png" alt="Sercomm Base Station LTE Settings Page"></picture></p>
<ul>
<li>
<p>Under <code>Cell Configuration</code>:</p>
<ul>
<li>Check the <code>AdminStats</code> option, which means enabling signal transmission.</li>
<li>Select <code>1</code> for <code>Carrier Number</code>.
<ul>
<li>If you select <code>2</code> and adjust the settings below accordingly, you can enable carrier aggregation to double the bandwidth, but Sercomm's CBRS SAS implementation has some issues that may randomly cause signal transmission interruptions.</li>
</ul>
</li>
<li>Do not check the <code>Carrier Aggregation</code> option.
<ul>
<li>If you want to enable carrier aggregation, check this box.</li>
</ul>
</li>
<li>Select <code>20</code> for <code>BandWidth</code> to maximize bandwidth for highest speed.</li>
<li>Enter <code>0</code> for <code>CellIDentity</code>. If you have multiple base stations, you can enter <code>1</code>, <code>2</code>, etc., sequentially, ensuring no duplication between base stations.
<ul>
<li>If you want to enable carrier aggregation, enter <code>0,1</code>, which means two different IDs separated by a comma.</li>
</ul>
</li>
<li>Enter <code>100</code> for <code>PCI</code>. If you have multiple base stations, you can enter <code>101</code>, <code>102</code>, etc., sequentially, ensuring no duplication between base stations.
<ul>
<li>If you want to enable carrier aggregation, enter <code>100,101</code>, which means two different IDs separated by a comma.</li>
</ul>
</li>
<li>Enter <code>24</code> for <code>TxPower</code>.</li>
</ul>
</li>
<li>
<p>Under <code>S1 Configuration</code>:</p>
<ul>
<li>Select IPv4 for <code>Tunnel Type</code>. At this point, data between the base station and the core network is transmitted in plain text.
<ul>
<li>Since our base station and core network are on the same local area network and are physically controlled by us, the security risk here is small. However, if your base station needs to connect to the core network over Internet, you should try using the <code>IPSEC</code> option, but you will need to additionally configure IPSec tunnel related settings.</li>
</ul>
</li>
<li>Enter the IP address of the <code>Open5GS</code> core network machine for <code>MME IP Address</code>.
<ul>
<li>If different components of your <code>Open5GS</code> core network are installed on different machines, enter the IP address of the machine running the MME component here.</li>
</ul>
</li>
<li>Enter <code>315010</code> for <code>PLMNID</code>, corresponding to CBRS's MCC/MNC.</li>
<li>Enter <code>1</code> for <code>TAC</code>.</li>
</ul>
</li>
<li>
<p>If your base station's location has good GPS signal, <code>Sync Source</code> can be set to <code>GPS</code>. However, if the GPS signal is poor, the base station will need to wait for GPS positioning to complete before starting to transmit signals after restarting. In this case, you can select <code>FREE_RUNNING</code>.</p>
</li>
</ul>
<p>Save the settings. It is recommended to restart the base station once here to ensure the settings take effect. The base station may automatically restart when saving settings, but if it does not, you can manually restart it by clicking the power button in the upper right corner of the management interface, or by manually power cycling it.</p>
<p>After restarting, wait a moment and check the base station's indicator lights; the leftmost LTE status indicator light should be a steady blue, indicating that it's now transmitting LTE signals. This completes the base station configuration.</p>
<p>Take out your phone, select any SIM card, turn off the "Automatic Network Selection" option, and the phone will automatically search for nearby mobile networks. If your phone supports LTE band 48,  you should see a network named <code>Lan Tian Mobile</code> (or your own configured network name), which is the signal transmitted by your base station.</p>
<p>The base station management panel should also display <code>henb running</code>, indicating that the base station is running normally:</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-status.png" alt="Sercomm Base Station Status Page"></picture></p>
<h1 id="registering-sim-card-information-with-open5gs">Registering SIM Card Information with Open5GS</h1>
<p>After the core network and base station are running normally, you can register SIM cards with the core network to allow phones and other devices using these SIM cards to connect to the LTE network.</p>
<p>Prepare a few programmable SIM cards and program authentication information to your SIM cards according to the <a href="https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/#programming-sim-cards">SIM card programming tutorial in the previous post</a>. Record the SIM card's IMSI/KI/OPC information.</p>
<p>Log in to Open5GS's web management panel, then click <code>Add a subscriber</code>:</p>
<p><picture><source srcset="/usr/uploads/202507/open5gs-add-subscriber.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/open5gs-add-subscriber.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/open5gs-add-subscriber.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/open5gs-add-subscriber.png" alt="Open5GS Add SIM Card Interface"></picture></p>
<ul>
<li>Enter the SIM card's corresponding IMSI information for <code>IMSI</code>.</li>
<li>Enter the SIM card's <code>KI</code> for <code>Subscriber Key</code>.</li>
<li>Enter the SIM card's <code>OPC</code> for <code>Operator Key</code>.</li>
</ul>
<p>Keep all other options at their defaults and click Save.</p>
<p>Insert the SIM card into your phone, wait a moment, and your phone should be able to connect to your mobile network.</p>
<h1 id="summary">Summary</h1>
<p>This post mainly records the steps that differ from the Magma core network when setting up Open5GS, as well as some issues specific to setting it up on NixOS. Compared to Magma, Open5GS has a simpler installation process and does not rely on containerization management tools like Docker. If you are using Ubuntu, most of the above process is actually automatically completed during <code>apt install</code>.</p>
<p>From the perspective of LTE terminal devices (e.g., mobile phones), there is no difference in using these two core network software. Both have similar latency and network bandwidth, mainly limited by LTE communication itself. (Except for the strange bug I encountered with Magma where Android phones could not authenticate properly.)</p>
<p>I switched to Open5GS for the management convenience mentioned at the beginning. You can choose either Open5GS or Magma based on your preference.</p>]]></content>
        <published>2025-07-20T12:38:31.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 Open5GS 搭建合法的 LTE 网络]]></title>
        <id>https://lantian.pub/article/modify-computer/legal-lte-network-at-home-with-open5gs.lantian/</id>
        <link href="https://lantian.pub/article/modify-computer/legal-lte-network-at-home-with-open5gs.lantian/"/>
        <updated>2025-07-20T12:38:31.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://lantian.pub/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/">在上一篇文章中</a>，我用美国的 CBRS 频段和 <a href="https://magmacore.org/" rel="noopener noreferrer" target="_blank">Magma LTE 核心网软件</a>搭建了一套合法的 LTE 网络。</p>
<blockquote>
<p>关于「合法」：我不是律师或者无线电专家。根据我对相关政策法规的研究，我的整套配置应当是合法的。但如果你按照本文操作后遇到了法律问题，我不负任何责任。</p>
</blockquote>
<p>我当时选择 Magma，是因为我买的 CBRS LTE 基站原本用于 Helium Mobile 网络，而 <a href="https://github.com/helium/HIP/blob/main/0139-phase-out-cbrs.md#what-to-do-with-cbrs-radios" rel="noopener noreferrer" target="_blank">Nova Labs/Helium Mobile 使用的 CBRS 核心网就是 Magma</a>。这保证了 Magma 一定兼容我手上的基站。但是，从在 Homelab 里自建核心网的角度来考虑，Magma 存在这些问题：</p>
<ul>
<li>Magma 的核心网依赖 Docker 或者 Kubernetes 进行部署，难以用常规的方式（例如 systemd 服务）在容器外部署。而我是 NixOS 用户，希望尽量避免臃肿的 Docker 容器，而是用 systemd 服务管理系统上的服务。</li>
<li>Magma 的访问网关（Access Gateway）只能安装在 Ubuntu 20.04 系统上，系统管理方式与我常用的 NixOS 完全不同。这意味着我需要手工管理访问网关机器的配置以及系统升级，无法复用我现有的 NixOS 配置。</li>
<li>Magma 有时会出一些奇怪的问题，例如：
<ul>
<li>Android 手机死活连不上基站但 iPhone 没问题；</li>
<li>手机无法正常获取网络名称，网络名称总是显示为 MCC/MNC <code>315 010</code> 而不是我配置的网络名 <code>Lan Tian Mobile</code>；</li>
<li>访问网关明明连上了核心网并且正常同步配置，但核心网管理界面中显示访问网关已经很久没连上了。</li>
</ul>
</li>
</ul>
<p>因此，在上一篇文章完成，确定自建 LTE 网络可行后，我就开始尝试用另一款开源 LTE 核心网软件 <a href="https://open5gs.org/" rel="noopener noreferrer" target="_blank">Open5GS</a> 替换 Magma。</p>
<p>相比 Magma，Open5GS 有这些优点：</p>
<ul>
<li>Open5GS 不区分核心网和访问网关两套组件，只需要一台机器就可以完整部署。</li>
<li>Nixpkgs 中已经有了 Open5GS 软件包（<code>pkgs.open5gs</code>），我不用自己打包就能直接在 NixOS 上安装使用，不需要 Docker 或者 Ubuntu。</li>
<li>Open5GS 没有 Magma 那些奇怪的问题，一旦搭建完成就可以稳定运行。</li>
</ul>
<p>本文记录我在 NixOS 系统上用 Open5GS 搭建核心网，并且用 FreedomFi/Sercomm 的 SCE4255W 基站连接核心网、发射 LTE 信号的过程。</p>
<h1 id="安装-open5gs">安装 Open5GS</h1>
<blockquote>
<p>配置过程参考了以下资料：</p>
<ul>
<li><a href="https://open5gs.org/open5gs/docs/" rel="noopener noreferrer" target="_blank">Open5GS 的官方文档</a></li>
<li>一套打包成开箱即用 Docker 容器的 Open5GS（以及一些附加组件）配置：<a href="https://github.com/herlesupreeth/docker_open5gs" rel="noopener noreferrer" target="_blank">herlesupreeth/docker_open5gs</a></li>
</ul>
</blockquote>
<h2 id="准备工作">准备工作</h2>
<p>本文假定你已经按照我的<a href="https://lantian.pub/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/">上一篇文章</a>准备好了这些硬件或软件配置。如果你没有完成这些配置，可以参考上一篇文章中的对应教程配置软件或者购买硬件：</p>
<ul>
<li>一台 FreedomFi/Sercomm 的 SCE4255W 基站，已经解锁 Web 管理界面</li>
<li>基站已经注册到 CBRS SAS 上</li>
<li>一张已经写好认证信息（KI，OPC 等值）的 SIM 卡，并且你记录了这些认证信息（以便稍后注册到 Open5GS）</li>
</ul>
<p>本文基于 NixOS 进行所有配置，但也提供了一些 Ubuntu 相关的命令，以便其它 Linux 发行版的用户参考。</p>
<h2 id="了解-open5gs-的组件">了解 Open5GS 的组件</h2>
<p>Open5GS 如其名，是一套主要实现 5G 核心网（但也实现了 LTE 核心网）的软件。由于 5G 时代的核心网协议和结构与 4G 时代相比有了较大不同，尤其是独立组网的 5G SA 网络，因此 Open5GS 大致上可以看作是一套 LTE/5G NSA 核心网软件，加上一套 5G SA 核心网软件，两者之间共享一小部分组件。</p>
<p>Open5GS 的 LTE/5G NSA 部分由如下组件组成：</p>
<ul>
<li>MME - Mobility Management Entity</li>
<li>HSS - Home Subscriber Server</li>
<li>PCRF - Policy and Charging Rules Function</li>
<li>SGWC - Serving Gateway Control Plane</li>
<li>SGWU - Serving Gateway User Plane</li>
<li>SMF - Session Management Function
<ul>
<li>SMF 本身是 5G 核心网的组件，但 Open5GS SMF 也实现了 4G 核心网结构中的 Packet Gateway Control Plane</li>
</ul>
</li>
<li>UPF - User Plane Function
<ul>
<li>UPF 本身是 5G 核心网的组件，但 Open5GS UPF 也实现了 4G 核心网结构中的 Packet Gateway User Plane</li>
</ul>
</li>
<li>NRF - NF Repository Function
<ul>
<li>NRF 本身是 5G 核心网的组件，但是 SCP 依赖它</li>
</ul>
</li>
<li>SCP - <del>Secure, Contain, Protect</del> Service Communication Proxy
<ul>
<li>SCP 本身是 5G 核心网的组件，但是 SMF 依赖它</li>
</ul>
</li>
</ul>
<p>而 5G SA 部分由如下组件组成：</p>
<ul>
<li>NRF - NF Repository Function</li>
<li>SCP - Service Communication Proxy</li>
<li>SEPP - Security Edge Protection Proxy</li>
<li>AMF - Access and Mobility Management Function</li>
<li>SMF - Session Management Function</li>
<li>UPF - User Plane Function</li>
<li>AUSF - Authentication Server Function</li>
<li>UDM - Unified Data Management</li>
<li>UDR - Unified Data Repository</li>
<li>PCF - Policy and Charging Function</li>
<li>NSSF - Network Slice Selection Function</li>
<li>BSF - Binding Support Function</li>
</ul>
<p>这些组件之间以如下的结构互相通信：</p>
<p><picture><source srcset="/usr/uploads/202507/Open5GS_CUPS-01.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202507/Open5GS_CUPS-01.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202507/Open5GS_CUPS-01.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/Open5GS_CUPS-01.jpg" alt="Open5GS 组件结构图"></picture></p>
<p>（图源：<a href="https://open5gs.org/open5gs/docs/guide/01-quickstart/" rel="noopener noreferrer" target="_blank">Open5GS 官方文档</a>）</p>
<p>4G/5G 核心网的各个组件之间通信走的是标准化的 <a href="https://en.wikipedia.org/wiki/Diameter_(protocol)" rel="noopener noreferrer" target="_blank">Diameter 协议</a>，它基于 TCP 或者 <a href="https://zh.wikipedia.org/wiki/%E6%B5%81%E6%8E%A7%E5%88%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" rel="noopener noreferrer" target="_blank">SCTP</a> 协议，在 4G/5G 核心网的各个组件之间交换数据。这也意味着来自不同厂商的软硬件，只要支持 Diameter 协议，就都可以加入同一个核心网中，共同为移动用户提供服务。</p>
<p>但本文中我将全程使用 Open5GS 的组件，暂时不将别的组件加入核心网。</p>
<h2 id="安装-open5gs-软件包">安装 Open5GS 软件包</h2>
<p>如果你用的是 Ubuntu，可以参考 <a href="https://open5gs.org/open5gs/docs/guide/01-quickstart/" rel="noopener noreferrer" target="_blank">Open5GS 的官方安装教程</a>：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 安装 MongoDB</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">curl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -fsSL</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://pgp.mongodb.com/server-8.0.asc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> gpg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -o</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /usr/share/keyrings/mongodb-server-8.0.gpg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --dearmor</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/sources.list.d/mongodb-org-8.0.list</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> mongodb-org</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 安装 Open5GS</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> add-apt-repository</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ppa:open5gs/latest</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs</span></span></code></pre>
<p>这个过程中除了安装了 Open5GS 的二进制文件，还创建了一组 systemd 服务对应 Open5GS 的各个组件，以及将 Open5GS 的默认配置复制到了 <code>/etc</code> 下。</p>
<p>由于 NixOS 中只有 Open5GS 的软件包，没有对应的 NixOS 模块，因此我们需要模仿在 Ubuntu 等其它系统上安装的过程，手动为 Open5GS 创建 systemd 服务：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, ... }:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 由于我们只搭建 4G 核心网，只开启 4G 核心网需要的服务</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "hss"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "mme"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "nrf"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "pcrf"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "scp"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "sgwc"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "sgwu"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "smf"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "upf"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 开启 MongoDB，HSS、PCF、PCRF 组件需要用 MongoDB 保存配置</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">mongodb</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    enable</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">true</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    bind_ip</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"127.0.0.1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    package</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mongodb-ce</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 创建 Open5GS 各组件的 systemd 服务</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">listToAttrs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">map</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs-</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">d"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Open5GS </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">toUpper</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> Daemon"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        wantedBy</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"multi-user.target"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        requires</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">        serviceConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">          # 这里指向的 open5gs 文件夹下的配置文件我们下一步再创建</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          ExecStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/open5gs-</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">d -c </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.yaml"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          ExecReload</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">coreutils</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/kill -HUP $MAINPID"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          LogsDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          User</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          Group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          Restart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"always"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          RestartSec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          RestartPreventExitStatus</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    }) </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">services</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 创建一个单独的用户和组给 Open5GS</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  users</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">users</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    isSystemUser</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">true</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  users</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">groups</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = { };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 创建一个名为 ogstun 的 TUN 接口，用于与 LTE 设备通信</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">network</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">netdevs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    netdevConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Kind</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"tun"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ogstun"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">network</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">networks</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # 这里用的 IP 地址和 Open5GS 默认配置中的相同</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    address</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "10.45.0.1/16"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "2001:db8:cafe::1/48"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    linkConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      MTUBytes</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1400</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      RequiredForOnline</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    matchConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">Name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ogstun"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="创建-open5gs-配置文件">创建 Open5GS 配置文件</h2>
<p>如果你用的是 Ubuntu，上面的安装过程应该已经自动将默认配置文件安装到了 <code>/etc/freeDiameter</code> 和 <code>/etc/open5gs</code> 下。但在 NixOS 中，这个过程不会自动完成，我们需要手动复制配置文件，或者手动指定配置文件的路径。</p>
<p>由于 Nixpkgs 的 Open5GS 软件包已经自带了一组默认配置，我们可以直接从这个包里复制默认配置文件。首先构建软件包：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nix</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> nixpkgs#open5gs</span></span></code></pre>
<p>不出意外，Nix 会从 Binary Cache 里下载预先编译好的 Open5GS，并且把它软链接到 <code>result</code> 目录下。此时我们在 <code>result/etc</code> 文件夹下就可以看到默认的配置文件了：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">ls</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> result/etc</span></span></code></pre>
<p>然后我们就可以把它们复制到自己的 NixOS 配置中，以便后续修改：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -r</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> result/etc/freeDiameter</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/freeDiameter</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -r</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> result/etc/open5gs</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/open5gs</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 从 Nix store 中复制出的文件默认是只读的，给它们加上写权限</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">chmod</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -R</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> +w</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/freeDiameter</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /path/to/your/nixos-config/open5gs</span></span></code></pre>
<p>对于 <code>freeDiameter</code> 文件夹中的文件，我们需要把它们放到 <code>/etc/freeDiameter</code> 下：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  environment</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">etc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"freeDiameter"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./freeDiameter</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>对于 <code>open5gs</code> 文件夹中的文件，可以在启动 Open5GS 时使用 <code>-c</code> 参数直接指定配置文件的为止：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    ExecStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/open5gs-</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">d -c </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">svc</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.yaml"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>不把它们放到 <code>/etc</code> 中，是为了保证修改配置文件后，Open5GS 服务会自动重启。</p>
<h2 id="修复-nixos-下-open5gs-配置文件中的路径">修复 NixOS 下 Open5GS 配置文件中的路径</h2>
<p>由于 Nixpkgs 中打包的 Open5GS 默认安装到 <code>/nix/store</code> 中的一个路径下，因此它的配置文件中也默认包含了很多 <code>/nix/store</code> 下的路径。</p>
<p>首先获取 Open5GS 的实际安装路径：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nix</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> nixpkgs#open5gs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --print-out-paths</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --no-link</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 输出类似：</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># /nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/</span></span></code></pre>
<p>然后在复制出来的配置文件中搜索这个路径，可以看到有很多处包含了完整的路径：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">grep</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 引用 Open5GS 构建过程中默认生成的 TLS 证书</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter/hss.conf:TLS_Cred = "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/hss.crt", "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/hss.key";</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 引用 freeDiameter 的 Extension</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter/hss.conf:LoadExtension = "/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/lib/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 默认日志路径被放到了 Nix store 中</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># open5gs/hss.yaml:    path: /nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/var/log/open5gs/hss.log</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter 的配置文件路径被设置到了 Nix store 中</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># open5gs/hss.yaml:  freeDiameter: /nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/freeDiameter/hss.conf</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># ...</span></span></code></pre>
<p>一旦 Open5GS 软件包或者它的依赖更新，Open5GS 在 Nix store 中的路径就会发生变动，导致以绝对路径指定的文件失效，从而导致 Open5GS 无法启动。因此，我们需要让这些路径和 Open5GS 的路径保持同步，或者指向 Nix store 之外，以防止未来出现问题。</p>
<p>我用的方法是，首先把 <code>pkgs.open5gs</code> 软件包链接一份到 <code>/etc</code> 里：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  environment</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">etc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs-pkg"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>然后修改上述路径：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># TLS 证书指向 /etc/open5gs-pkg。虽然这个证书是从 Nixpkgs Binary Cache 下载的，私钥可以视为公开，但我们单机部署，通信不经过外部网络，因此加密无关紧要</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/#/etc/open5gs-pkg/etc/open5gs/tls/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter Extension 指向 /etc/open5gs-pkg</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/lib/freeDiameter/#/etc/open5gs-pkg/lib/freeDiameter/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># /var 中的路径指向实际的 /var</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/var/#/var/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># freeDiameter 配置文件指向 /etc/freeDiameter</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/freeDiameter/#/etc/freeDiameter/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span></code></pre>
<p>修改完成后，就可以保证 Open5GS 未来升级时不会出现问题，同时我们放在 <code>/etc</code> 的配置文件可以正常生效。</p>
<h2 id="可选重新生成-diameter-的-tls-证书">（可选）重新生成 Diameter 的 TLS 证书</h2>
<p>Nixpkgs 中打包的 Open5GS 自带了一份在构建过程中生成的 TLS 证书。如果你的 Open5GS 是从 Binary Cache 下载的，而不是本地编译的，那么其他人也可以从 Binary Cache 上下载到同一份密钥。</p>
<p>如果你按照本教程的流程单机部署，因为所有的通信都在本地，不会经过外部网络，所以有没有加密、私钥是否泄露对安全性没什么影响。</p>
<p>但如果你准备将一部分组件放到别的机器上，或者你不想使用这份已经泄露的密钥，你也可以用如下的脚本生成一份新的：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs-certs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    wantedBy</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"multi-user.target"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    path</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">openssl</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    script</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      mkdir -p demoCA</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      if [ ! -f "demoCA/serial" ]; then</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        echo 01 > demoCA/serial</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      fi</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      touch demoCA/index.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      # CA self certificate</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      if [ ! -f "ca.crt" ]; then</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        openssl req -new -x509 -days 3650 -newkey rsa:2048 -nodes -keyout ca.key -out ca.crt \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          -subj /CN=ca.epc.mnc010.mcc315.3gppnetwork.org/C=KO/ST=Seoul/O=NeoPlane</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      for i in amf ausf bsf hss mme nrf scp sepp1 sepp2 sepp3 nssf pcf pcrf smf udm udr</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      do</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        if [ ! -f "$i.crt" ]; then</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -out $i.key</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          openssl req -new -key $i.key -out $i.csr \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -subj /CN=$i.epc.mnc010.mcc315.3gppnetwork.org/C=KO/ST=Seoul/O=NeoPlane</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">          openssl ca -batch -notext -days 3650 \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -keyfile ca.key -cert ca.crt \</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">              -in $i.csr -out $i.crt -outdir .</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        fi</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      done</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    serviceConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"oneshot"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      User</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      StateDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs-certs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      WorkingDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"/var/lib/open5gs-certs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>当运行 <code>systemctl start open5gs-certs.service</code> 时，这个服务就会自动在 <code>/var/lib/open5gs-certs</code> 中生成缺失的密钥。</p>
<p>然后你就可以修改 Open5GS 的配置文件，将 TLS 密钥路径指向 <code>/var/lib/open5gs-certs</code>：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果你在上一步没有替换 TLS 密钥的路径</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/nix/store/vbb0aa2mkjbfay7gdgaw5r23g0ss6kyz-open5gs-v2.7.6/etc/open5gs/tls/#/var/lib/open5gs-certs/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果你在上一步已经替换了 TLS 密钥的路径</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#/etc/open5gs-pkg/etc/open5gs/tls/#/var/lib/open5gs-certs/#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> freeDiameter/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span></code></pre>
<p>你也可以把 <code>open5gs-certs.service</code> 加到 Open5GS 各个 systemd 服务的 <code>After</code> 和 <code>Requires</code> 里，从而保证 Open5GS 启动时密钥已经生成完毕。</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "open5gs-certs.service"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    requires</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "open5gs-certs.service"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="安装-open5gs-的-web-管理面板">安装 Open5GS 的 Web 管理面板</h2>
<p>上面的步骤配置了 Open5GS 核心网本身，但我们还需要安装管理面板 WebUI，以管理注册到 Open5GS 的 SIM 卡相关信息。</p>
<p>如果你用的是 Ubuntu，可以使用 Open5GS 官方的一键安装脚本：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 下载 Nodesource 的 GPG 密钥</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -y</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ca-certificates</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> curl</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> gnupg</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/keyrings</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">curl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -fsSL</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> gpg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --dearmor</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -o</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/keyrings/nodesource.gpg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 添加 NodeJS 软件包仓库</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">NODE_MAJOR</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">20</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$NODE_MAJOR</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.x nodistro main"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/apt/sources.list.d/nodesource.list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 安装 NodeJS</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> install</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> nodejs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 安装 Open5GS WebUI</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">curl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -fsSL</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://open5gs.org/open5gs/assets/webui/install</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -E</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -</span></span></code></pre>
<p>如果你用的是 NixOS，可以用以下配置安装：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  config</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  systemd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">services</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">open5gs-webui</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Open5GS WebUI"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    wantedBy</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"multi-user.target"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    requires</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "network.target"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      "mongodb.service"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    path</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      bash</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      nodejs</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      rsync</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    environment</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      HOSTNAME</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"0.0.0.0"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      PORT</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"9999"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    preStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      export HOME=$(pwd)</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      rsync -r --chmod=D755,F755 </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">open5gs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/webui/ .</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      npm install</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      npm run build</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    serviceConfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      ExecStart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">nodejs</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/bin/npm run start"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      CacheDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      WorkingDirectory</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"/var/cache/open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      User</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Group</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"open5gs"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      Restart</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"always"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      RestartSec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="启动-open5gs">启动 Open5GS</h2>
<p>将上面的配置部署到你的 NixOS 机器上，不出意外这些服务都应该正常启动。</p>
<p>如果你用的是 Ubuntu，那么在安装 <code>open5gs</code> 软件包时，4G/5G 的所有服务都应该已经自动启动了。你可以禁用掉我们用不到的 5G SA 相关的服务，也可以不管它们，它们对后续配置没有任何影响。</p>
<h2 id="创建管理面板的默认管理员">创建管理面板的默认管理员</h2>
<p>Open5GS 启动时并不会自动创建默认的管理员用户，所以在配置部署完成，MongoDB 已经启动之后，我们需要手动运行下面的命令来创建管理员：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cat</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;&#x3C;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mongosh</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">db = db.getSiblingDB('open5gs')</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">cursor = db.accounts.find()</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">if ( cursor.count() == 0 ) {</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    db.accounts.insertOne({ salt: 'f5c15fa72622d62b6b790aa8569b9339729801ab8bda5d13997b5db6bfc1d997', hash: '402223057db5194899d2e082aeb0802f6794622e1cbc47529c419e5a603f2cc592074b4f3323b239ffa594c8b756d5c70a4e1f6ecd3f9f0d2d7328c4cf8b1b766514effff0350a90b89e21eac54cd4497a169c0c7554a0e2cd9b672e5414c323f76b8559bc768cba11cad2ea3ae704fb36abc8abc2619231ff84ded60063c6e1554a9777a4a464ef9cfdfa90ecfdacc9844e0e3b2f91b59d9ff024aec4ea1f51b703a31cda9afb1cc2c719a09cee4f9852ba3cf9f07159b1ccf8133924f74df770b1a391c19e8d67ffdcbbef4084a3277e93f55ac60d80338172b2a7b3f29cfe8a36738681794f7ccbe9bc98f8cdeded02f8a4cd0d4b54e1d6ba3d11792ee0ae8801213691848e9c5338e39485816bb0f734b775ac89f454ef90992003511aa8cceed58a3ac2c3814f14afaaed39cbaf4e2719d7213f81665564eec02f60ede838212555873ef742f6666cc66883dcb8281715d5c762fb236d72b770257e7e8d86c122bb69028a34cf1ed93bb973b440fa89a23604cd3fefe85fbd7f55c9b71acf6ad167228c79513f5cfe899a2e2cc498feb6d2d2f07354a17ba74cecfbda3e87d57b147e17dcc7f4c52b802a8e77f28d255a6712dcdc1519e6ac9ec593270bfcf4c395e2531a271a841b1adefb8516a07136b0de47c7fd534601b16f0f7a98f1dbd31795feb97da59e1d23c08461cf37d6f2877d0f2e437f07e25015960f63', username: 'admin', roles: [ 'admin' ], "__v" : 0})</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">}</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span></span></code></pre>
<p>（来源：<a href="https://github.com/open5gs/open5gs/blob/main/docs/assets/webui/mongo-init.js" rel="noopener noreferrer" target="_blank">https://github.com/open5gs/open5gs/blob/main/docs/assets/webui/mongo-init.js</a>）</p>
<p>以上命令会创建一个用户名为 <code>admin</code>，密码为 <code>1423</code> 的管理员用户。</p>
<p>用浏览器打开 <code>http://[Open5GS 机器的 IP 地址]:9999</code>，就可以用上述用户名密码登录管理面板。</p>
<h1 id="修改-open5gs-的配置文件">修改 Open5GS 的配置文件</h1>
<p>Open5GS 安装完成后，就可以修改配置文件，使其符合我们的 CBRS LTE 网络的参数。我们只需要做如下修改：</p>
<ul>
<li>将 MCC/MNC 从默认的 999/70 修改成 CBRS 的 315/010</li>
</ul>
<p>直接全局搜索 <code>mcc: 999</code> 和 <code>mnc: 70</code>，然后将它们替换成 <code>mcc: 315</code> 和 <code>mnc: 010</code> 即可：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#mcc: 999#mcc: 315#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sed</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "s#mnc: 70#mnc: 010#g"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs/</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span></span></code></pre>
<ul>
<li>让 MME 组件在 <code>eth0</code>（或者你的实际网卡名）接口上监听，而不是 <code>127.0.0.2</code>，否则基站无法连上核心网</li>
</ul>
<p>修改 <code>open5gs/mme.yaml</code>，将 <code>s1ap</code> 下原本的配置：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">mme</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  s1ap</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">    server</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      - </span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">address</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">127.0.0.2</span></span></code></pre>
<p>修改成：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">mme</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  s1ap</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">    server</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      - </span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">dev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">eth0</span><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 或者你的实际网卡名</span></span></code></pre>
<ul>
<li>（可选）自定义 MME 广播的网络名。</li>
</ul>
<p>修改 <code>open5gs/mme.yaml</code>，找到 <code>network_name</code>：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">network_name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  full</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">Open5GS</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  short</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">Next</span></span></code></pre>
<p>改成你想要的网络名即可，例如：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">network_name</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  full</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">Lan Tian Mobile</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  short</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">LTMobile</span></span></code></pre>
<p>最后，重启所有 Open5GS 相关的服务：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">systemctl</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> restart</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> open5gs-</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\*</span></span></code></pre>
<h1 id="将-freedomfisercomm-基站连上-open5gs">将 FreedomFi/Sercomm 基站连上 Open5GS</h1>
<p>首先，请确保你可以通过 IP 地址登录 FreedomFi/Sercomm SCE4255 基站的 Web 管理面板。如果无法访问基站的 Web 管理面板，请参考<a href="https://lantian.pub/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/#%E8%A7%A3%E9%94%81%E5%AE%A4%E5%86%85%E5%9F%BA%E7%AB%99%E7%9A%84%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2">我的上一篇文章</a>开启管理面板。</p>
<h2 id="关闭-tr-069-远程管理">关闭 TR-069 远程管理</h2>
<p>FreedomFi 出售的 Sercomm 基站默认会连接 <code>acs.freedomfi.com</code> 这个 TR-069 服务器，从 TR-069 服务器自动获取配置。虽然这个远程管理服务器随着 Helium Mobile 停用 CBRS 网络而关闭，但我们的基站仍然会不停尝试连接远程管理。在用 Magma 搭建核心网时，由于 Magma 核心网自带 TR-069 服务器的功能，所以我们可以保持远程管理开启，只需要将远程管理劫持到我们的 TR-069 服务器即可。但 Open5GS 没有 TR-069 的功能，所以我们要关闭基站的 TR-069 远程管理，避免不必要的请求，并防止基站的配置被意外覆盖。</p>
<p>在管理界面的顶部点击 <code>TR098</code>，然后点击 <code>MgntServer</code> 标签页，切换到基站的 TR-069 远程管理设置页面：</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-tr069.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-tr069.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-tr069.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-tr069.png" alt="Sercomm 基站的 TR-069 设置页面"></picture></p>
<p>取消勾选 <code>EnableCWMP</code>，然后点击 <code>Save</code> 按钮保存设置。</p>
<p>由于 Sercomm 基站管理面板的 Bug 有点多，所以这里建议重启一次基站以保证设置生效。保存设置时基站可能会自动重启，但如果基站没有重启，可以点击管理界面右上角的电源按钮手动重启一次，或者手动断电重启。重启完后请再次回到此页面并保证 <code>EnableCWMP</code> 是关闭状态。</p>
<p>此时，基站的 TR-069 远程管理功能就关闭了，我们就可以随意修改设置，不怕被远程管理覆盖了。</p>
<h2 id="修改基站的-cbrs-sas-连接配置">修改基站的 CBRS SAS 连接配置</h2>
<p>下一步是让基站连接 CBRS SAS 服务器，获取频段分配，从而避免和其它基站或者运营商的信号发生冲突，以及避免 FCC 上门和你玩彩虹六号。在使用 Magma 核心网时，CBRS SAS 的连接配置由 Magma 的 TR-069 服务器自动下发，但由于 Open5GS 没有 TR-069 的功能，这部分就需要我们手动设置了。</p>
<p>首先确保你的基站已经注册到了 SAS 上，可以参考<a href="https://lantian.pub/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/#%E5%9F%BA%E7%AB%99%E8%BF%9E%E6%8E%A5-sas">我的上一篇文章中，连接 SAS 的部分</a>。</p>
<p>然后，在基站管理界面的顶部点击 <code>Manage</code>，然后点击 <code>SAS Configuration</code> 标签页：</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-sas.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-sas.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-sas.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-sas.png" alt="Sercomm 基站的 SAS 设置页面"></picture></p>
<ul>
<li><code>Enable</code> 选项打勾。</li>
<li><code>Method</code> 选项输入 0。</li>
<li><code>Server</code> 选择 <code>Commercial-Google</code>，对应 Google SAS。此时 <code>Server Url</code> 应该会自动填充。</li>
<li><code>UserID</code> 输入你的 Google Cloud Project ID，可以在控制台主页看到：<a href="https://console.cloud.google.com" rel="noopener noreferrer" target="_blank">https://console.cloud.google.com</a></li>
<li><code>Category</code> 选择 <code>A</code>，对应室内基站。</li>
<li><code>ChannelType</code> 选择 <code>GAA</code>，对应 CBRS 三类用户中优先级最低的一类。</li>
<li><code>CertSubject</code> 输入 <code>/C=TW/O=Sercomm/OU=WInnForum CBSD Certificate/CN=P27-SCE4255W:%s</code></li>
</ul>
<p><picture><source srcset="/usr/uploads/202507/sercomm-sas-location.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-sas-location.png" alt="Sercomm 基站的 SAS 位置设置页面"></picture></p>
<ul>
<li><code>Location</code> 选择 <code>indoor</code>，对应室内部署。</li>
<li>如果你的基站所在位置 GPS 信号良好，<code>Location Source</code> 可以选择 <code>GPS</code>。但如果 GPS 信号差，基站重启后需要等待 GPS 定位完成后才会连接 CBRS SAS 并开始发送信号。此时你可以选择 <code>Manual</code> 并手动输入基站的经纬度。</li>
<li><code>Latitude</code> 是纬度，正数为北纬，负数为南纬。注意 Sercomm 基站的经纬度单位是微度（即百万分之一度），所以如果你要设置北纬 40 度，请输入 <code>40000000</code>.</li>
<li><code>Longitude</code> 是经度，正数为东经，负数为西经。注意 Sercomm 基站的经纬度单位是微度（即百万分之一度），所以如果你要设置西经 80 度，请输入 <code>-80000000</code>.
<ul>
<li>经纬度请用你的手机等设备实际定位得到，基站的位置需要比较精确，否则会影响到 CBRS SAS 的频段分配。同时这个经纬度应该和 CBRS SAS 平台上设置的经纬度一致。</li>
</ul>
</li>
<li><code>HeightType</code> 选择 <code>AMSL</code>，即相对海平面的高度。</li>
<li><code>Elevation</code> 输入基站的海拔高度，单位是毫米，所以如果你要设置海平面以上 40 米，请输入 <code>40000</code>。</li>
</ul>
<p>保存设置。暂时不用重启基站，下一步配置完基站到 Open5GS 核心网的连接后再一起重启。</p>
<h2 id="修改基站的核心网连接配置">修改基站的核心网连接配置</h2>
<p>下一步是让基站连接 Open5GS 核心网，从而传输用户信息和数据流量。</p>
<p>在基站管理界面的顶部点击 <code>Manage</code>，然后点击 <code>LTE Basic Setting</code> 标签页：</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-sas-location.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-sas-location.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-sas-location.png" alt="Sercomm 基站的 LTE 设置页面"></picture></p>
<ul>
<li>
<p><code>Cell Configuration</code> 下：</p>
<ul>
<li><code>AdminStats</code> 选项打勾，代表启用信号发射。</li>
<li><code>Carrier Number</code> 选择 1。
<ul>
<li>如果选择 2 并相应调整下面的设置，可以启用载波聚合，让带宽翻倍，但是这种情况下 Sercomm 的 CBRS SAS 实现有点问题，可能会随机导致信号发射中断。</li>
</ul>
</li>
<li><code>Carrier Aggregation</code> 选项不要打勾。
<ul>
<li>如果你想开载波聚合，此处打勾。</li>
</ul>
</li>
<li><code>BandWidth</code> 选择 20，把带宽拉满获得最高速度。</li>
<li><code>CellIDentity</code> 输入 <code>0</code>。如果你有多个基站，可以依次输入 <code>1</code>，<code>2</code> 等等，基站之间不要重复。
<ul>
<li>如果你想开载波聚合，输入 <code>0,1</code>，即逗号分隔的两个不同的 ID。</li>
</ul>
</li>
<li><code>PCI</code> 输入 <code>100</code>。如果你有多个基站，可以依次输入 <code>101</code>，<code>102</code> 等等，基站之间不要重复。
<ul>
<li>如果你想开载波聚合，输入 <code>100,101</code>，即逗号分隔的两个不同的 ID。</li>
</ul>
</li>
<li><code>TxPower</code> 输入 <code>24</code>。</li>
</ul>
</li>
<li>
<p><code>S1 Configuration</code> 下：</p>
<ul>
<li><code>Tunnel Type</code> 选择 IPv4。此时基站到核心网之间的数据是明文传输。
<ul>
<li>由于我们的基站和核心网在同一个局域网下，都由我们物理控制，所以这里的安全风险不大。但如果你的基站需要通过互联网连接到核心网，你应该尝试使用 <code>IPSEC</code> 选项，但相应的你需要额外配置 IPSec 隧道的相关设置。</li>
</ul>
</li>
<li><code>MME IP Address</code> 输入 <code>Open5GS</code> 核心网机器的 IP 地址。
<ul>
<li>如果你的 <code>Open5GS</code> 核心网的不同组件安装在不同机器上，此处输入运行 MME 组件机器的 IP 地址。</li>
</ul>
</li>
<li><code>PLMNID</code> 输入 <code>315010</code>，对应 CBRS 的 MCC/MNC。</li>
<li><code>TAC</code> 输入 <code>1</code>。</li>
</ul>
</li>
<li>
<p>如果你的基站所在位置 GPS 信号良好，<code>Sync Source</code> 可以选择 <code>GPS</code>。但如果 GPS 信号差，基站重启后需要等待 GPS 定位完成后才会开始发送信号。此时你可以选择 <code>FREE_RUNNING</code>。</p>
</li>
</ul>
<p>保存设置，这里建议重启一次基站以保证设置生效。保存设置时基站可能会自动重启，但如果基站没有重启，可以点击管理界面右上角的电源按钮手动重启一次，或者手动断电重启。</p>
<p>重启完成后，稍等片刻，看一下基站的指示灯，最左侧的 LTE 状态指示灯应该是蓝灯常亮，代表此时已经在发射 LTE 信号。到这里，基站的配置就全部完成了。</p>
<p>拿出你的手机，随便选择一张 SIM 卡，关闭「自动选择网络」选项，手机就会自动搜索附近的移动网络。如果你的手机支持 LTE 48 频段，你应该就能看到一个名为 <code>Lan Tian Mobile</code>（或者你自己配置的网络名称）的网络，这就是你的基站发射的信号。</p>
<p>基站管理面板上也应该显示 <code>henb running</code>，代表基站运行正常：</p>
<p><picture><source srcset="/usr/uploads/202507/sercomm-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/sercomm-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/sercomm-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/sercomm-status.png" alt="Sercomm 基站状态页面"></picture></p>
<h1 id="将-sim-卡信息注册到-open5gs-上">将 SIM 卡信息注册到 Open5GS 上</h1>
<p>核心网和基站正常运行后，就可以将 SIM 卡注册到核心网上，让使用这些 SIM 卡的手机等设备连接 LTE 网络了。</p>
<p>准备几张可编程 SIM 卡，按照<a href="https://lantian.pub/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/#%E5%86%99-sim-%E5%8D%A1">上一篇文章中的写 SIM 卡教程</a>给你的 SIM 卡写入认证信息。记录下 SIM 卡的 IMSI/KI/OPC 信息。</p>
<p>登录 Open5GS 的 Web 管理面板，然后点击 <code>Add a subscriber</code>：</p>
<p><picture><source srcset="/usr/uploads/202507/open5gs-add-subscriber.png.webp" type="image/webp"><source srcset="/usr/uploads/202507/open5gs-add-subscriber.png.avif" type="image/avif"><source srcset="/usr/uploads/202507/open5gs-add-subscriber.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202507/open5gs-add-subscriber.png" alt="Open5GS 添加 SIM 卡界面"></picture></p>
<ul>
<li><code>IMSI</code> 输入 SIM 卡对应的 IMSI 信息。</li>
<li><code>Subscriber Key</code> 输入 SIM 卡的 <code>KI</code>。</li>
<li><code>Operator Key</code> 输入 SIM 卡的 <code>OPC</code>。</li>
</ul>
<p>其它选项全部保持默认，点击 Save 保存。</p>
<p>把 SIM 卡插到你的手机上，稍等片刻，手机就应该可以连上你的移动网络了。</p>
<h1 id="总结">总结</h1>
<p>本文主要记录搭建 Open5GS 时与 Magma 核心网不同的步骤，以及在 NixOS 上搭建时特有的一些问题。相比 Magma，Open5GS 的安装流程更加简单，而且不依赖 Docker 等容器化管理工具。如果你用的是 Ubuntu，上面的大部分流程其实在 <code>apt install</code> 时就已经自动完成。</p>
<p>从 LTE 终端设备（例如手机）的角度来看，使用这两款核心网软件并没有什么区别，两者的延迟、网络带宽都没有大的差别，主要还是受到 LTE 通信本身的限制。（除了我使用 Magma 时遇到的，Android 手机无法正常认证的奇怪 Bug）</p>
<p>我切换到 Open5GS，也是为了开头提到的管理上的便利。你可以根据自己的喜好，选择 Open5GS 或者 Magma 之一。</p>]]></content>
        <published>2025-07-20T12:38:31.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using SideStore without StosVPN across your LAN]]></title>
        <id>https://lantian.pub/en/article/modify-computer/sidestore-without-stosvpn-across-lan.lantian/</id>
        <link href="https://lantian.pub/en/article/modify-computer/sidestore-without-stosvpn-across-lan.lantian/"/>
        <updated>2025-06-27T00:47:31.000Z</updated>
        <content type="html"><![CDATA[<h2 id="foreword">Foreword</h2>
<p><a href="https://github.com/SideStore/SideStore" rel="noopener noreferrer" target="_blank">SideStore</a> is a commonly used iOS app sideloading tool that allows you to install third-party apps bypassing the App Store. It works by using your Apple ID to obtain a free Apple developer certificate, which is then used to sign the app you want to install, allowing it to run normally on your iOS device.</p>
<p>However, to maintain control over the iOS ecosystem, Apple prevents third-party app stores from using developer certificates to bypass restrictions on a large scale, setting a 7-day expiration period for developer certificates. Users need to regularly obtain new developer certificates and re-sign their apps to continue using the third-party apps they have installed.</p>
<p>Traditional sideloading tools, such as AltStore, rely on software like iTunes on a computer for the re-signing process. But unlike other sideloading tools, SideStore only requires computer assistance for the initial installation. After installation, SideStore can simulate a computer with iTunes installed, allowing the iOS system to communicate with it through a virtual network, thus achieving the effect of re-signing apps and even installing new third-party apps without a computer.</p>
<p>SideStore's virtual network can generally be implemented in the following two ways:</p>
<ul>
<li>WireGuard: SideStore can create a WireGuard server on the device itself. Users can install a WireGuard client and connect to this server, allowing the iOS system to communicate with the simulated computer over the network.
<ul>
<li>The disadvantage of this method is that due to iOS system limitations, when the iPhone/iPad is using cellular data, the WireGuard client cannot connect to the WireGuard server created locally by SideStore. Therefore, SideStore only works properly when the device is connected to Wi-Fi.</li>
<li>Also, since the iOS system only supports connecting to one VPN at a time, if the user needs to use another VPN software, they have to manually switch between VPNs, which is quite troublesome.</li>
</ul>
</li>
<li><a href="https://github.com/SideStore/StosVPN" rel="noopener noreferrer" target="_blank">StosVPN</a>: A dedicated VPN client developed by the SideStore team that works exclusively for SideStore.
<ul>
<li>Compared to WireGuard, StosVPN is not affected by iOS restrictions and can work normally when the device is using cellular data. However, after trying it out, I found that StosVPN often disconnects automatically and cannot stay in the background for a long time. If the iOS device is not used for a while and StosVPN disconnects, and SideStore and other third-party apps fail to renew in time, you will have to find a computer to sign these apps again.</li>
<li>Also, since StosVPN is also a VPN, it is also subject to the iOS's limitation of only supporting one VPN connection at a time.</li>
</ul>
</li>
</ul>
<p>So I wanted to try to analyze the working principles of SideStore/StosVPN to see if I could integrate them into my home network or ZeroTier SDN network, allowing SideStore to refresh normally without extra VPN configuration.</p>
<h2 id="how-stosvpn-works">How StosVPN Works</h2>
<p>According to <a href="https://github.com/SideStore/StosVPN/blob/main/TunnelProv/PacketTunnelProvider.swift" rel="noopener noreferrer" target="_blank">StosVPN's packet processing logic</a>, StosVPN roughly does the following:</p>
<ul>
<li>Assigns IP address <code>10.7.0.0</code> to the iOS device, and configure iOS to send packets for <code>10.7.0.0/24</code> to StosVPN.</li>
<li>Defines an IP address <code>10.7.0.1</code>, where StosVPN will simulate a computer with iTunes installed.</li>
<li>For each packet:
<ul>
<li>If the packet is sent from <code>10.7.0.0</code> to <code>10.7.0.1</code>, swap the source and destination IP addresses, to send the packet back to the iOS device.</li>
</ul>
</li>
</ul>
<p>This logic is quite simple. SideStore essentially opens some ports locally on the iOS device, simulating a computer with iTunes installed. Suppose iOS creates a connection like this when trying to connect to the simulated computer:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.0:12345</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.1:54321</span></span></code></pre>
<p>Then WireGuard or StosVPN will swap the source and destination IP addresses (but not the port numbers), rewrite the packet as follows, and send it back to the iOS device:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.1:12345</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.0:54321</span></span></code></pre>
<p>From the iOS device's perspective, this is a new TCP connection from <code>10.7.0.1</code>, unrelated to the previous connection sent to the computer. Since the port iOS is trying to connect to (<code>54321</code> in this case) should be an iTunes port, and SideStore simulates iTunes locally, SideStore should be listening on port <code>54321</code> at this time and receiving the data.</p>
<p>After SideStore's simulated iTunes logic processes the data and generates a reply:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.0:54321</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.1:12345</span></span></code></pre>
<p>WireGuard or StosVPN will again swap the source and destination IP addresses:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.1:54321</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.0:12345</span></span></code></pre>
<p>This reply packet matches the initial connection sent to the simulated computer. iOS therefore believes it has received a reply from iTunes on the computer, and thus continues updating the developer certificate.</p>
<h2 id="simulating-stosvpns-working-logic-with-nftables">Simulating StosVPN's Working Logic with Nftables</h2>
<p>Now understanding how StosVPN works, we just need to mimic its logic in our own network.</p>
<p>If you only have a few iOS devices, and they are all assigned static IP addresses, and you have a router running OpenWrt or another Linux system, you can simply use the following Nftables rules:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">table</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> inet</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> sidestore</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> {</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">  chain</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> RAW_PREROUTING</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> {</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">    type</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> filter</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> hook</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> prerouting</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> priority</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> raw</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">policy</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> accept</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # Replace 192.168.0.xxx here with your iOS device's IP address</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">    ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.123</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.123</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> notrack</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">    ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.234</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.234</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> notrack</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # Add more rules as needed</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  }</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>The purpose of the above rules is that if a packet is received from your iOS device (<code>192.168.0.123</code> or <code>192.168.0.234</code>) destined for <code>10.7.0.1</code> (the virtual computer), it changes the packet's source IP to <code>10.7.0.1</code> (the virtual computer) and the destination IP to your iOS device (<code>192.168.0.123</code> or <code>192.168.0.234</code>), and then sends it out. The <code>notrack</code> here disables connection tracking, which prevents Linux from matching these packets to previously received packets and connection tracking entries, which could make the rules ineffective.</p>
<p>Since Nftables does not support using packet source/destination IP addresses as variables, it's not possible to achieve the purpose of "swapping source and destination addresses" with a single set of rules. Therefore, we need to add a rule for each iOS device. If you have a small number of iOS devices, you can write a separate rule for each device's IP address. However, if you have many devices, or if they don't have static IP addresses, you will need to write a rule for every IP address in your home network segment, which can be very troublesome. Also, if your router does not support Nftables or similar firewall functions and cannot rewrite packets in a similar way, you cannot achieve this functionality.</p>
<h2 id="sidestore-vpn-tool">SideStore VPN Tool</h2>
<p>If you cannot use the above method, I have also written a small program that implements the above logic: <a href="https://github.com/xddxdd/sidestore-vpn" rel="noopener noreferrer" target="_blank">SideStore VPN Tool</a>. It can create a TUN interface on a Linux device, listen for packets destined for <code>10.7.0.1</code>, and process these packets with the same logic as StosVPN.</p>
<p>To use this tool in your network, you need a device running Linux (such as a Raspberry Pi or a virtual machine), connect it to the same LAN as your iOS devices, and set a static IP address. Since the packets rewritten by the tool can be seen as a new connection from this Linux device to the iOS device, there should be no firewall or NAT between the iOS device and this Linux device, otherwise this new connection will be blocked, preventing SideStore's simulated computer from receiving requests normally.</p>
<p>Then, perform the following steps:</p>
<ol>
<li>Enable IP Forwarding on the Linux device:</li>
</ol>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "net.ipv4.ip_forward=1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/sysctl.conf</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> sysctl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span></span></code></pre>
<ol start="2">
<li>
<p>Install Rust and Cargo on the device.</p>
</li>
<li>
<p>Run the following commands to install and start the SideStore VPN Tool:</p>
</li>
</ol>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">git</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> clone</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://github.com/xddxdd/sidestore-vpn.git</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> sidestore-vpn</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cargo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --release</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> target/release/sidestore-vpn</span></span></code></pre>
<p>The SideStore VPN Tool will create a TUN device called <code>sidestore</code> and set up system routes to send all traffic destined for <code>10.7.0.1</code> to the tool for processing.</p>
<ol start="4">
<li>Add a static route on your main router:</li>
</ol>
<pre><code>Route: 10.7.0.1/32
Subnet Mask (if needed): 255.255.255.255
Gateway: The IP address of the Linux device mentioned earlier.
</code></pre>
<p>To minimize IP conflicts, this static route only affects a single IP address, <code>10.7.0.1</code>. However, if your router does not support creating /32 routes, you can adjust the subnet mask to expand the scope of this routing rule, as long as it does not conflict with other devices:</p>
<pre><code>Route: 10.7.0.0/24
Subnet Mask (if needed): 255.255.255.0
Gateway: The IP address of the Linux device mentioned earlier.
</code></pre>
<ol start="5">
<li>
<p>Ping <code>10.7.0.1</code> from any device on the LAN. It should now be reachable.</p>
</li>
<li>
<p>Disconnect WireGuard or StosVPN on your iOS device, and then try refreshing apps with SideStore. SideStore should now be able to refresh certificates normally even without a VPN.</p>
</li>
</ol>]]></content>
        <published>2025-06-27T00:47:31.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[在内网中免 StosVPN 使用 SideStore]]></title>
        <id>https://lantian.pub/article/modify-computer/sidestore-without-stosvpn-across-lan.lantian/</id>
        <link href="https://lantian.pub/article/modify-computer/sidestore-without-stosvpn-across-lan.lantian/"/>
        <updated>2025-06-27T00:47:31.000Z</updated>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p><a href="https://github.com/SideStore/SideStore" rel="noopener noreferrer" target="_blank">SideStore</a> 是一款常用的 iOS 应用侧载工具，可以绕过 App Store 安装第三方应用。它的工作原理是用你的 Apple ID 获取免费的苹果开发者证书，给你要安装的应用签名，从而让应用可以在 iOS 设备上正常运行。</p>
<p>然而，苹果为了维护其对 iOS 生态系统的控制，阻止第三方应用商店使用开发者证书大规模地绕过限制，对开发者证书设置了 7 天的过期时间。用户需要定期获取新的开发者证书，重新给应用签名，才能一直使用自己安装的第三方应用。</p>
<p>传统的侧载工具，例如 AltStore，都依赖电脑上的 iTunes 等软件进行重新签名的操作。但 SideStore 与其它侧载工具不同，它只有首次安装时需要电脑辅助。安装完成后，SideStore 可以自己模拟一台安装了 iTunes 的电脑，让 iOS 系统通过虚拟网络与其通信，从而实现无需电脑就能给应用重新签名，甚至安装新的第三方应用的效果。</p>
<p>SideStore 的虚拟网络一般可以用下面两种方式实现：</p>
<ul>
<li>WireGuard：SideStore 可以在本机上创建一个 WireGuard 服务器。用户可以自行安装 WireGuard 客户端，并连接到这个服务器上，从而让 iOS 系统可以通过网络和模拟出的电脑通信。
<ul>
<li>这种方法的缺点是，受到 iOS 系统限制，当 iPhone/iPad 通过移动网络上网时，WireGuard 客户端是连不上 SideStore 本地创建的 WireGuard 服务器的。因此，SideStore 只有在设备连接到 Wi-Fi 时才能正常工作。</li>
<li>同时，由于 iOS 系统只支持同时连接一个 VPN，如果用户需要使用别的 VPN 软件，就只能手动切换 VPN，操作比较麻烦。</li>
</ul>
</li>
<li><a href="https://github.com/SideStore/StosVPN" rel="noopener noreferrer" target="_blank">StosVPN</a>：是 SideStore 团队开发的专用 VPN 客户端，只能用于 SideStore。
<ul>
<li>相比于 WireGuard，StosVPN 不会受到 iOS 的限制，可以在设备通过移动网络上网时正常工作。但是我试用后发现，StosVPN 无法长时间保持在后台运行，经常会自动断开。如果有一段时间没有使用 iOS 设备，同时 StosVPN 断开了连接，SideStore 以及其它第三方应用没能及时续期，就只能重新连接电脑，给这些应用签名了。</li>
<li>同时，由于 StosVPN 也是 VPN，它同样受到 iOS 系统只支持同时连接一个 VPN 的限制。</li>
</ul>
</li>
</ul>
<p>于是我就想尝试分析 SideStore/StosVPN 的工作原理，看看能不能把它们集成到我的家庭网络或者 ZeroTier SDN 网络里，让 SideStore 无需额外的 VPN 配置就能正常刷新。</p>
<h2 id="stosvpn-的工作原理">StosVPN 的工作原理</h2>
<p>根据 <a href="https://github.com/SideStore/StosVPN/blob/main/TunnelProv/PacketTunnelProvider.swift" rel="noopener noreferrer" target="_blank">StosVPN 的关键数据包处理逻辑</a>，StosVPN 大致做了以下几件事：</p>
<ul>
<li>给 iOS 设备分配 IP <code>10.7.0.0</code>，让 iOS 把 <code>10.7.0.0/24</code> 这个网段的数据包发送到 StosVPN。</li>
<li>定义了一个 IP <code>10.7.0.1</code>，StosVPN 将在这个 IP 上模拟装了 iTunes 的电脑。</li>
<li>对于每个数据包：
<ul>
<li>如果数据包是从 <code>10.7.0.0</code> 发给 <code>10.7.0.1</code> 的，就交换数据包的来源和目标 IP，从而把数据包发回给 iOS 设备。</li>
</ul>
</li>
</ul>
<p>这个逻辑看起来很简单，实际上也一点都不复杂。实际上，SideStore 就是在 iOS 设备本地打开了一系列端口，模拟安装了 iTunes 的电脑。假设 iOS 在尝试连接模拟出的电脑时创建了这样一条连接：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.0:12345</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.1:54321</span></span></code></pre>
<p>那么 WireGuard 或者 StosVPN 就会交换来源和目标 IP（但不交换端口号），将数据包改写成以下的样子并发回 iOS 设备：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.1:12345</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.0:54321</span></span></code></pre>
<p>从 iOS 设备看来，这是一条从 <code>10.7.0.1</code> 发来的新 TCP 连接，与上一条发往电脑的连接没什么关系。由于 iOS 尝试连接到的端口（此处以 <code>54321</code> 示例）应当是 iTunes 的端口，而 SideStore 又在本地模拟了 iTunes，所以 SideStore 此时也应在监听 <code>54321</code> 端口，并收到了数据。</p>
<p>SideStore 模拟 iTunes 的逻辑处理完数据，并生成一个回复：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.0:54321</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.1:12345</span></span></code></pre>
<p>WireGuard 或者 StosVPN 又会交换来源和目标 IP：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">TCP</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> 10.7.0.1:54321</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">10.7.0.0:12345</span></span></code></pre>
<p>这一个回复数据包就对上了最开始发往电脑的连接。iOS 因此认为自己收到了电脑上 iTunes 的回复，从而继续更新开发者证书。</p>
<h2 id="用-nftables-模拟-stosvpn-的工作逻辑">用 Nftables 模拟 StosVPN 的工作逻辑</h2>
<p>了解了 StosVPN 的工作原理，我们只需要在自己的网络里模仿它的工作逻辑就可以了。</p>
<p>如果你只有少量的 iOS 设备，并且给它们都分配了固定 IP，而且有一台运行 OpenWrt 或其它 Linux 系统的路由器，你直接用以下 Nftables 规则就可以了：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">table</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> inet</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> sidestore</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> {</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">  chain</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> RAW_PREROUTING</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> {</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">    type</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> filter</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> hook</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> prerouting</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> priority</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> raw</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">policy</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> accept</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # 此处 192.168.0.xxx 改成你的 iOS 设备的 IP</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">    ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.123</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.123</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> notrack</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">    ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.234</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> saddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10.7.0.1</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ip</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> daddr</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> set</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 192.168.0.234</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> notrack</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # 可以按需添加更多的规则</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  }</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>上述规则的用途是，如果收到了来自你的 iOS 设备（<code>192.168.0.123</code> 或 <code>192.168.0.234</code>）发往 <code>10.7.0.1</code>（虚拟电脑）的数据包，就把数据包的源 IP 改成 <code>10.7.0.1</code>（虚拟电脑），目标 IP 改成你的 iOS 设备（<code>192.168.0.123</code> 或 <code>192.168.0.234</code>），然后发送出去。此处的 <code>notrack</code> 是关闭连接跟踪，防止 Linux 用这些数据包去匹配之前收到的数据包和连接跟踪条目，导致规则不生效。</p>
<p>由于 Nftables 不支持将数据包的来源/目标 IP 等信息用作变量，无法用一组规则实现「交换来源和目标地址」的目的，所以我们需要给每台 iOS 设备都添加一条规则。如果你的 iOS 设备比较少，可以给每个设备的 IP 都单独写一条规则。但如果你的设备很多，或者没有固定 IP，你就需要给家庭网段内的每一个 IP 都写一条规则，非常麻烦。同时，如果你的路由器不支持 Nftables 或类似的防火墙功能，无法用类似的方式改写数据包，也无法实现这样的功能。</p>
<h2 id="sidestore-vpn-工具">SideStore VPN 工具</h2>
<p>如果你无法使用上面的方法，我也写了一个实现上述逻辑的小工具：<a href="https://github.com/xddxdd/sidestore-vpn" rel="noopener noreferrer" target="_blank">SideStore VPN 工具</a>。它可以在 Linux 设备上创建一个 TUN 接口，监听发往 <code>10.7.0.1</code> 的数据包，并用和 StosVPN 相同的逻辑处理这些数据包。</p>
<p>要在你的网络内使用这个工具，你需要准备一台运行 Linux 的设备（例如树莓派或者虚拟机），将它连接到 iOS 设备所在的同一个内网中，并设置一个固定 IP。由于工具改写后的数据包可以看作是从这个 Linux 设备向 iOS 设备的一条新连接，所以 iOS 设备和这个 Linux 设备之间不能有防火墙或者 NAT，否则这条新连接会被拦截，导致 SideStore 的模拟电脑无法正常收到请求。</p>
<p>然后，执行以下操作：</p>
<ol>
<li>在 Linux 设备上开启 IP 转发（IP Forwarding）：</li>
</ol>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "net.ipv4.ip_forward=1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/sysctl.conf</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> sysctl</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span></span></code></pre>
<ol start="2">
<li>
<p>在设备上安装 Rust 和 Cargo。</p>
</li>
<li>
<p>运行以下命令，安装并启动 SideStore VPN 工具：</p>
</li>
</ol>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">git</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> clone</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://github.com/xddxdd/sidestore-vpn.git</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> sidestore-vpn</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cargo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --release</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> target/release/sidestore-vpn</span></span></code></pre>
<p>SideStore VPN 工具会创建一个名为 <code>sidestore</code> 的 TUN 设备，并设置系统路由将发往 <code>10.7.0.1</code> 的流量全部交给工具处理。</p>
<ol start="4">
<li>在你的主路由器上添加一条静态路由：</li>
</ol>
<pre><code>路由: 10.7.0.1/32
子网掩码 (如果需要): 255.255.255.255
网关: 前文中 Linux 设备的 IP 地址。
</code></pre>
<p>为了最大限度地避免 IP 冲突，这条静态路由只影响 <code>10.7.0.1</code> 一个 IP 地址。但如果你的路由器不支持创建 /32 路由，你可以调整子网掩码，扩大这条路由规则的影响范围，只要不与其他设备冲突即可：</p>
<pre><code>路由: 10.7.0.0/24
子网掩码 (如果需要): 255.255.255.0
网关: 前文中 Linux 设备的 IP 地址。
</code></pre>
<ol start="5">
<li>
<p>用内网中的任何一个设备 Ping <code>10.7.0.1</code>，此时应该可以 Ping 通。</p>
</li>
<li>
<p>在你的 iOS 设备上断开 WireGuard 或者 StosVPN，然后用 SideStore 尝试刷新应用。现在即使不开 VPN，SideStore 应该也可以正常刷新证书了。</p>
</li>
</ol>]]></content>
        <published>2025-06-27T00:47:31.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nix Logarithmic Math Library from Ground Zero]]></title>
        <id>https://lantian.pub/en/article/modify-computer/nix-logarithmetic-math-library-from-zero.lantian/</id>
        <link href="https://lantian.pub/en/article/modify-computer/nix-logarithmetic-math-library-from-zero.lantian/"/>
        <link rel="enclosure" href="https://lantian.pub/usr/uploads/202505/logarithm.png" type="image/png"/>
        <updated>2025-05-19T23:02:28.000Z</updated>
        <content type="html"><![CDATA[<p>(Cover image from:
<a href="https://en.wikipedia.org/wiki/Logarithm" rel="noopener noreferrer" target="_blank">Wikipedia - Logarithm</a>)</p>
<h2 id="origin">Origin</h2>
<p>Due to a somewhat absurd reason (calculating the physical distance between VPS
to estimate network latency), I
<a href="https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/">implemented a somewhat absurd trigonometric function library using Nix</a>.
After I
<a href="https://github.com/xddxdd/nix-math" rel="noopener noreferrer" target="_blank">published the trigonometric function library on GitHub</a>,
I found that someone actually used it! It seems my needs weren't too absurd
after all.</p>
<p>In the repository's Issues,
<a href="https://github.com/xddxdd/nix-math/issues/1" rel="noopener noreferrer" target="_blank">a user suggested that I add some exponential/logarithmic function support to this math library</a>,
such as <code>exp</code>, <code>ln</code>, <code>pow</code>, and <code>log</code>.</p>
<p>Since implementing these basic functions from scratch is also quite interesting,
I took some time to research it. Among these four functions, <code>exp</code> and <code>ln</code> are
somewhat difficult. <code>pow</code> and <code>log</code> can both be derived from the other two
functions:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>n</mi></msub><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi></mrow><mrow><mi>ln</mi><mo>⁡</mo><mi>n</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>p</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mi>n</mi></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\log_n x &#x26;= \frac{\ln x}{\ln n} \\
pow(x, n) = x^n &#x26;= \exp (n * \ln x)
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.8574em;vertical-align:-1.6787em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1787em;"><span style="top:-4.1787em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0573em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-2.3527em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6787em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1787em;"><span style="top:-4.1787em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3527em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6787em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<h2 id="logarithmic-function-ln">Logarithmic Function ln</h2>
<p>As we learned in math classes, when <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&#x3C;</mo><mi>x</mi><mo>≤</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">0 &#x3C; x \le 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>, the natural logarithm
function <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\ln x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span></span> can be obtained using the following Taylor series:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>n</mi></msup></mrow><mi>n</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></mfrac><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>3</mn></msup></mrow><mn>3</mn></mfrac><mo>−</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\ln x &#x26;= \sum_{n=1}^\infty (-1)^{n+1} \frac{(x-1)^n}{n} \\
&#x26;= \frac{x-1}{1} - \frac{(x-1)^2}{2} + \frac{(x-1)^3}{3} - ...
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.6956em;vertical-align:-2.5978em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>When I implemented the trigonometric function last time, I wrote code to
calculate the result of the <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mop">sin</span></span></span></span> function based on the Taylor series.
Therefore, we only need to copy the code and change the formula for calculating
a term in the series.</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Precision limit, stop calculation when the Taylor expansion term is less than this value</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  epsilon</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pow</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">10</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Absolute value function abs and alias fabs</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  abs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    then</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  fabs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">abs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Helper function to calculate the product of all terms in a list</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  multiply</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">foldl'</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mul</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Integer power calculation function, which is the `pow` function from the previous article, renamed to avoid conflict with the floating-point power function</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  _pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> == </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      1</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> / (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">))</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      multiply</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">replicate</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Natural logarithm function, currently only handles 0 &#x3C; x &#x3C;= 2</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Calculate the i-th term in the series, where i starts from 1</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      step</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)) * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) / </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Same as the `sin` function, calculate the Taylor series until the next term is less than epsilon (1e-10)</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # tmp is used for accumulation, i is the index of the Taylor expansion term</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">        tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">step</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        in</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Stop calculation if the absolute value of the current term is less than epsilon, otherwise continue to the next step</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fabs</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) &#x3C; </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">epsilon</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> tmp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> else</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      helper</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 0</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>(Formula from:
<a href="https://en.wikipedia.org/wiki/Logarithm#Taylor_series" rel="noopener noreferrer" target="_blank">Wikipedia</a>)</p>
<p>Although this Taylor series can handle the range <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&#x3C;</mo><mi>x</mi><mo>≤</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">0 &#x3C; x \le 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>, after testing,
when <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> is close to the ends of the range, the number of terms to be calculated
becomes too large, causing Nix to report a stack overflow error:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">error:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> stack</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> overflow</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">max-call-depth</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> exceeded</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">at</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /nix/store/qhnbm9x3zs2y55nyx1gxqf801gmjdjfc-source/default.nix:163:61:</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">   162</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">|     </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">let</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">   163</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">|       </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">step</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> =</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> i:</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (_pow_int (0 </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">-</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)) * (</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (1.0 </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> x</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1.0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) i) / i;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      |                                                             </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">^</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">   164</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">|       </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">helper</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> =</span></span></code></pre>
<p>After testing, the number of terms is acceptable when <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>1.9</mn></mrow><annotation encoding="application/x-tex">0.1 \le x \le 1.9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.9</span></span></span></span>, so I
only use the Taylor series for calculation within this range.</p>
<p>For inputs outside this range, it needs to be converted to this range before
calculation:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>≤</mo><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mi>I</mi><mi>n</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>d</mi><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>&#x3C;</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mfrac><mn>1</mn><mi>x</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>></mo><mn>1.9</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mo>∗</mo><mi>ln</mi><mo>⁡</mo><msqrt><mi>x</mi></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
x \le 0,&#x26; \ln x = Invalid Value \\
x &#x3C; 1,&#x26; \ln x = -\ln \frac{1}{x} \\
x > 1.9,&#x26; \ln (x) = 2 * \ln \sqrt x \\
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.3166em;vertical-align:-2.4083em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9083em;"><span style="top:-5.3897em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-3.4083em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-1.5731em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1.9</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4083em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9083em;"><span style="top:-5.3897em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span></span></span><span style="top:-3.4083em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5731em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8492em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="padding-left:0.833em;">x</span></span><span style="top:-2.8092em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1908em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4083em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>Since the calculation method <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mfrac><mn>1</mn><mi>x</mi></mfrac></mrow><annotation encoding="application/x-tex">\ln x = -\ln \frac{1}{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> is applicable to the
entire <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&#x3C;</mo><mi>x</mi><mo>&#x3C;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 &#x3C; x &#x3C; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> range, to maintain consistency in the calculation method, I
used this method for all inputs in this range.</p>
<p>Next, we only need to implement the logic to use different algorithms based on
the input range:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      step</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)) * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) / </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">        tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">step</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fabs</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) &#x3C; </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">epsilon</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> tmp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> else</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;= </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">      throw</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "ln(x&#x3C;=0) returns invalid value"</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      -</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> / </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> > </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">9</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">sqrt</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">))</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      helper</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 0</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>With the natural logarithm function <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\ln</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span></span></span></span>, we can implement the generic
logarithm function <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\log_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0573em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span></span></span></span> with any base:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  log</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">base</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) / (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> base</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  log2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">log</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  log10</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">log</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="natural-exponential-function-exp">Natural Exponential Function exp</h2>
<p>With the logarithm function in place, we still need another piece of the puzzle:
the natural exponential function <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">\exp x = e^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span>. The Taylor expansion of the
natural exponential function is:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><msup><mi>x</mi><mi>n</mi></msup><mi>n</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mrow><mn>3</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\exp x &#x26;= \sum_{n=0}^\infty \frac{x^n}{n} \\
&#x26;= 1 + x + \frac{x^2}{2!} + \frac{x^3}{3!} + ...
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.6956em;vertical-align:-2.5978em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>Obviously, this Taylor expansion never converges, so we cannot calculate the
result term by term and then sum them up. Therefore, we can use the same method
as calculating <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>arctan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\arctan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">arctan</span></span></span></span> in the previous article, using polynomial regression to
fit the curve of the natural exponential function.</p>
<p>So which segment should we fit? When <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≤</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x \le 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>, we can directly calculate the
reciprocal of the absolute value exponent <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7027em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>. And since we
already have the function <code>_pow_int</code> for calculating integer powers, when
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x \ge 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>, we can split <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> into integer and decimal parts and calculate them
separately:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>≤</mo><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>exp</mi><mo>⁡</mo><mo>−</mo><mi>x</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>></mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mo fence="true">⌊</mo><mi>x</mi><mo fence="true">⌋</mo></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>x</mi><mo>−</mo><mrow><mo fence="true">⌊</mo><mi>x</mi><mo fence="true">⌋</mo></mrow></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
x \le 0,&#x26; \exp x = \frac{1}{\exp -x} \\
x > 1,&#x26; \exp x = (e^{\left \lfloor{x}\right \rfloor}) (e^{x - \left \lfloor{x}\right \rfloor}) \\
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.0999em;vertical-align:-1.7999em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2999em;"><span style="top:-4.2999em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-2.1815em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7999em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2999em;"><span style="top:-4.2999em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.1815em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">⌊</span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">⌋</span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">⌊</span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">⌋</span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7999em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>Therefore, we only need to fit the natural exponential function on <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>.</p>
<p>Since we don't know how many terms to use in polynomial regression to get the
best result, I wrote a simple script using Python and Numpy to try from 1 term
to 100 terms and then select the fitting result with the smallest error:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> json</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">from</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> typing </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> Callable, Iterable, List, Optional, Tuple</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> numpy </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">as</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> np</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">from</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> numpy.polynomial.polynomial </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> Polynomial</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EPSILON = </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1e-10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">class</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99"> Approximate</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> __init__</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fn</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: Callable[[Iterable[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]], Iterable[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]], </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">linspace</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: Tuple[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">], </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">max_poly_degrees</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: Optional[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">] = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">None</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">):</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.fn = fn</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Range for polynomial regression, in np.linspace format</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace = linspace</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input = np.linspace(*linspace)</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Calculate standard results using the standard function fn</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected = fn(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input)</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Maximum number of terms to search</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.max_poly_degrees = max_poly_degrees</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> _fit</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">deg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) -> Tuple[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, Polynomial]:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Perform regression using Numpy's Polynomial regression class</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        fit: Polynomial = Polynomial.fit(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input, </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected, deg, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">domain</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">], </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]), </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">window</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">], </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]))</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Calculate results using the regressed polynomial function</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        result = fit(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input)</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Calculate error</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        error_percent = np.fabs((result - </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected) / </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected)</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        max_error_percent = np.max(error_percent[error_percent &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1e308</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">] * </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">100</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        return</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> max_error_percent, fit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> run</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) -> Tuple[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, Polynomial]:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Search for the fitting result with the minimum error from 1 to max_poly_degrees terms</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        error, poly = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">._fit(</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        for</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> deg </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">in</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> range</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.max_poly_degrees+</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">):</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">            _error, _poly = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">._fit(deg)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">            if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> _error &#x3C; error:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">                error = _error</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">                poly = _poly</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        return</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> error, poly</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> explain</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) -> Polynomial:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # Output results, where the JSON of Coefficients output can be directly copied into Nix code</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        error, poly = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.run()</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">        print</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">f</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Degree: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">{</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">poly.degree()</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">        print</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">f</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Error %: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">{</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">error</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">        print</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">f</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Coefficients: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">{</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">json.dumps(json.dumps(</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">list</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(poly.coef)))</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        return</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> poly</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">Approximate(np.exp, (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">10000</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">), </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">max_poly_degrees</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">100</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">).explain()</span></span></code></pre>
<p>By comparing with the <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>arctan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\arctan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">arctan</span></span></span></span> function, which is also based on polynomial
regression, we can implement the <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>exp</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\exp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mop">exp</span></span></span></span> function:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Integer function</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">floor</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  exp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Extract the integer part of the input</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      x_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Extract the decimal part of the input</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      x_decimal</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Polynomial coefficients calculated using Python and Numpy</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      decimal_poly</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fromJSON</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "[0.9999999999999997, 0.9999999999999494, 0.5000000000013429, 0.16666666664916754, 0.04166666680065545, 0.008333332669176907, 0.001388891142716621, 0.00019840730702746657, 2.481076351588151e-05, 2.744709498016379e-06, 2.846575263734758e-07, 2.0215584670370862e-08, 3.542885385105854e-09]"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Calculate the reciprocal of the absolute value exponent</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> / (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">exp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">))</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Calculate the exponents of the integer and decimal parts separately, then multiply</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> e</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">polynomial</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x_decimal</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> decimal_poly</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="floating-point-power-function-pow">Floating-Point Power Function pow</h2>
<p>With the above functions, we can finally calculate floating-point powers using
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x^n = \exp (n * \ln x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>. The only thing to note is various special cases:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  pow</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Check if the exponent is an integer</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      is_int_times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">abs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) &#x3C; </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">epsilon</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> is_int_times</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # If it's an integer, use the existing integer power calculation function, which is faster and can handle the case when x &#x3C; 0</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      _pow_int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> == </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Base is 0, any power is 0</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      0</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Base is negative, cannot calculate floating-point power because we don't support imaginary numbers</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">      throw</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "Calculating power of negative base and decimal exponential is not supported"</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # Calculate the result using the above formula</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      exp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="summary">Summary</h2>
<p>All these logarithmetic functions (and some extra math functions) can be
obtained from my GitHub: <a href="https://github.com/xddxdd/nix-math" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-math</a></p>
<p>If you're using Nix Flake, you can use the function as follows:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    nix-math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"github:xddxdd/nix-math"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  outputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">nix-math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">  in</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">sin</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">deg2rad</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 45</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>]]></content>
        <published>2025-05-19T23:02:28.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[从零开始实现 Nix 对数函数库]]></title>
        <id>https://lantian.pub/article/modify-computer/nix-logarithmetic-math-library-from-zero.lantian/</id>
        <link href="https://lantian.pub/article/modify-computer/nix-logarithmetic-math-library-from-zero.lantian/"/>
        <link rel="enclosure" href="https://lantian.pub/usr/uploads/202505/logarithm.png" type="image/png"/>
        <updated>2025-05-19T23:02:28.000Z</updated>
        <content type="html"><![CDATA[<p>（题图来自：<a href="https://zh.wikipedia.org/zh-cn/%E5%AF%B9%E6%95%B0" rel="noopener noreferrer" target="_blank">维基百科 - 对数</a>）</p>
<h2 id="起因">起因</h2>
<p>由于一个有点离谱的原因（计算 VPS 间的物理距离来估算网络延迟），我<a href="https://lantian.pub/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/">用 Nix 实现了一个有点离谱的三角函数库</a>。我把三角函数库<a href="https://github.com/xddxdd/nix-math" rel="noopener noreferrer" target="_blank">发布到 GitHub 上</a>后，发现居然有人用！看来我的需求也不算太离谱。</p>
<p>在仓库的 Issues 里，<a href="https://github.com/xddxdd/nix-math/issues/1" rel="noopener noreferrer" target="_blank">有用户建议我给这个数学库添加一些指数/对数函数支持</a>，例如 <code>exp</code>，<code>ln</code>，<code>pow</code> 和 <code>log</code>。</p>
<p>因为从零开始实现这些基础函数也挺有趣的，所以我就抽空研究了一下。这四个函数中，有些难度的是 <code>exp</code> 和 <code>ln</code>。<code>pow</code> 和 <code>log</code> 都可以用另外两个函数转化出来：</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>n</mi></msub><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi></mrow><mrow><mi>ln</mi><mo>⁡</mo><mi>n</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>p</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mi>n</mi></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\log_n x &#x26;= \frac{\ln x}{\ln n} \\
pow(x, n) = x^n &#x26;= \exp (n * \ln x)
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.8574em;vertical-align:-1.6787em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1787em;"><span style="top:-4.1787em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0573em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-2.3527em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6787em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1787em;"><span style="top:-4.1787em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3527em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6787em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<h2 id="对数函数-ln">对数函数 ln</h2>
<p>学习过小学二年级的我们都知道，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&#x3C;</mo><mi>x</mi><mo>≤</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">0 &#x3C; x \le 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 时，以自然底数 <code>e</code> 为底的对数函数
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\ln x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span></span> 可以用如下的泰勒级数求得：</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>n</mi></msup></mrow><mi>n</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></mfrac><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>3</mn></msup></mrow><mn>3</mn></mfrac><mo>−</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\ln x &#x26;= \sum_{n=1}^\infty (-1)^{n+1} \frac{(x-1)^n}{n} \\
&#x26;= \frac{x-1}{1} - \frac{(x-1)^2}{2} + \frac{(x-1)^3}{3} - ...
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.6956em;vertical-align:-2.5978em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>上次实现三角函数时，我就写过了基于泰勒级数求 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mop">sin</span></span></span></span>
函数结果的代码。因此我们只需要将代码抄过来，改掉计算数列中某一项的公式即可。</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 精度限制，泰勒展开项小于该值时停止计算</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  epsilon</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pow</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">10</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 绝对值函数 abs 以及别名 fabs</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  abs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    then</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  fabs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">abs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 辅助函数，对数列中的所有项求乘积</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  multiply</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">foldl'</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mul</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 整数次幂的计算函数，就是前一篇文章中的 `pow` 函数，为了防止和浮点次幂函数冲突改了名字</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  _pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> == </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      1</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> / (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">))</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      multiply</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">replicate</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 自然对数函数，目前只处理了 0 &#x3C; x &#x3C;= 2</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 计算数列中的第 i 项，其中 i 从 1 开始</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      step</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)) * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) / </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 与 `sin` 函数相同，计算泰勒级数直到下一项小于 epsilon（1e-10）</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # tmp 用于累加，i 是泰勒展开项的编号计数</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">        tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">step</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        in</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 如果当前项的绝对值小于 epsilon 就停止计算，否则继续算下一步</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fabs</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) &#x3C; </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">epsilon</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> tmp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> else</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      helper</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 0</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>（公式来自：<a href="https://en.wikipedia.org/wiki/Logarithm#Taylor_series" rel="noopener noreferrer" target="_blank">维基百科</a>）</p>
<p>虽然这个泰勒级数可以处理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&#x3C;</mo><mi>x</mi><mo>≤</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">0 &#x3C; x \le 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 的范围，但经过测试，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>
接近范围两端时，需要计算的项数会变得过多，导致 Nix 报栈溢出错误：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">error:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> stack</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> overflow</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">max-call-depth</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> exceeded</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">at</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /nix/store/qhnbm9x3zs2y55nyx1gxqf801gmjdjfc-source/default.nix:163:61:</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">   162</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">|     </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">let</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">   163</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">|       </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">step</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> =</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> i:</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (_pow_int (0 </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">-</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">i</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)) * (</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (1.0 </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">*</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> x</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1.0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) i) / i;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      |                                                             </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">^</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">   164</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">|       </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">helper</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> =</span></span></code></pre>
<p>经过测试，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>1.9</mn></mrow><annotation encoding="application/x-tex">0.1 \le x \le 1.9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0.1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.9</span></span></span></span>
时计算项数可以接受，因此我只在这个区间内使用泰勒级数进行计算。</p>
<p>对于超过这个范围的输入，就需要转化到这个区间内再进行计算：</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>≤</mo><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mtext>无效值</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>&#x3C;</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mfrac><mn>1</mn><mi>x</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>></mo><mn>1.9</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mo>∗</mo><mi>ln</mi><mo>⁡</mo><msqrt><mi>x</mi></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
x \le 0,&#x26; \ln x = 无效值 \\
x &#x3C; 1,&#x26; \ln x = -\ln \frac{1}{x} \\
x > 1.9,&#x26; \ln (x) = 2 * \ln \sqrt x \\
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.3166em;vertical-align:-2.4083em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9083em;"><span style="top:-5.3897em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-3.4083em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-1.5731em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1.9</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4083em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9083em;"><span style="top:-5.3897em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord cjk_fallback">无效值</span></span></span><span style="top:-3.4083em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5731em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8492em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="padding-left:0.833em;">x</span></span><span style="top:-2.8092em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1908em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4083em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mfrac><mn>1</mn><mi>x</mi></mfrac></mrow><annotation encoding="application/x-tex">\ln x = -\ln \frac{1}{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 时的计算方法适用于整个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&#x3C;</mo><mi>x</mi><mo>&#x3C;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 &#x3C; x &#x3C; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>
区间，因此为了保持计算方法一致，我就对这个区间的输入全部使用这个方法了。</p>
<p>接下来只需要实现根据输入范围使用不同算法的逻辑就可以了：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      step</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)) * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) / </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">        tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">step</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fabs</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) &#x3C; </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">epsilon</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> tmp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> else</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> helper</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">tmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">i</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> + </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;= </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">      throw</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "ln(x&#x3C;=0) returns invalid value"</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      -</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> / </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> > </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">9</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">sqrt</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">))</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      helper</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 0</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>有了自然对数函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\ln</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span></span></span></span> 后，我们自然就可以实现以任意数为底的对数函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\log_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0573em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span></span></span></span>：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  log</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">base</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) / (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> base</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  log2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">log</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  log10</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">log</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 10</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="自然指数函数-exp">自然指数函数 exp</h2>
<p>有了对数函数，我们还需要另一块拼图：自然指数函数
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">\exp x = e^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span>。自然指数函数的泰勒展开式是：</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><msup><mi>x</mi><mi>n</mi></msup><mrow><mi>n</mi><mo stretchy="false">!</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mrow><mn>3</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\exp x &#x26;= \sum_{n=0}^\infty \frac{x^n}{n!} \\
&#x26;= 1 + x + \frac{x^2}{2!} + \frac{x^3}{3!} + ...
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.6956em;vertical-align:-2.5978em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0978em;"><span style="top:-5.0978em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.0396em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5978em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>显然这个泰勒展开式永不收敛，因此我们不能一项项地计算结果然后求和。所以我们可以使用和上一篇文章中计算
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>arctan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\arctan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">arctan</span></span></span></span> 时相同的方法，用多项式回归来拟合自然指数函数的曲线。</p>
<p>那么我们要拟合哪一段呢？当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≤</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x \le 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时，我们可以直接计算绝对值指数的倒数
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7027em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。而因为我们已经有了计算整数次幂的函数 <code>_pow_int</code>，因此当
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x \ge 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，我们可以将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 分拆为整数和小数两个部分，分别计算：</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>≤</mo><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>exp</mi><mo>⁡</mo><mo>−</mo><mi>x</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo>></mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>exp</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mo fence="true">⌊</mo><mi>x</mi><mo fence="true">⌋</mo></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>x</mi><mo>−</mo><mrow><mo fence="true">⌊</mo><mi>x</mi><mo fence="true">⌋</mo></mrow></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
x \le 0,&#x26; \exp x = \frac{1}{\exp -x} \\
x > 1,&#x26; \exp x = (e^{\left \lfloor{x}\right \rfloor}) (e^{x - \left \lfloor{x}\right \rfloor}) \\
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.0999em;vertical-align:-1.7999em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2999em;"><span style="top:-4.2999em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-2.1815em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7999em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2999em;"><span style="top:-4.2999em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.1815em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">⌊</span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">⌋</span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">⌊</span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">⌋</span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7999em;"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>因此，我们只需要在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 上拟合自然指数函数就可以了。</p>
<p>由于我们不知道多项式回归使用几项时获得最佳结果，我用 Python 和 Numpy 写了一个简单的脚本，从 1 项到 100 项都试一次，然后选取误差最小的拟合结果：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> json</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">from</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> typing </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> Callable, Iterable, List, Optional, Tuple</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> numpy </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">as</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> np</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">from</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> numpy.polynomial.polynomial </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">import</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> Polynomial</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EPSILON = </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1e-10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">class</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99"> Approximate</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> __init__</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fn</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: Callable[[Iterable[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]], Iterable[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]], </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">linspace</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: Tuple[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">], </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">max_poly_degrees</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: Optional[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">] = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">None</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">):</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.fn = fn</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 多项式回归的范围，使用 np.linspace 的格式</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace = linspace</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input = np.linspace(*linspace)</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 使用标准函数 fn 计算标准结果</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected = fn(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input)</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 最大搜索几项</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">        self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.max_poly_degrees = max_poly_degrees</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> _fit</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">deg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) -> Tuple[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, Polynomial]:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 用 Numpy 的 Polynomial 多项式回归类进行回归</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        fit: Polynomial = Polynomial.fit(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input, </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected, deg, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">domain</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">], </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]), </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">window</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">], </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.linspace[</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]))</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 使用回归出来的多项式函数计算结果</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        result = fit(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.input)</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 计算误差</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        error_percent = np.fabs((result - </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected) / </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.expected)</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        max_error_percent = np.max(error_percent[error_percent &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1e308</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">] * </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">100</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        return</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> max_error_percent, fit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> run</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) -> Tuple[</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">float</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, Polynomial]:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 从 1 到 max_poly_degrees 项，搜索误差最小的拟合结果</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        error, poly = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">._fit(</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        for</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> deg </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">in</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> range</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">2</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.max_poly_degrees+</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">):</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">            _error, _poly = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">._fit(deg)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">            if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> _error &#x3C; error:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">                error = _error</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">                poly = _poly</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        return</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> error, poly</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    def</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26"> explain</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) -> Polynomial:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">        # 输出结果，其中 Coefficients 输出的回归结果 JSON 可以直接复制进 Nix 代码</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        error, poly = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">self</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.run()</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">        print</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">f</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Degree: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">{</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">poly.degree()</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">        print</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">f</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Error %: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">{</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">error</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">        print</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">f</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Coefficients: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">{</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">json.dumps(json.dumps(</span><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99">list</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">(poly.coef)))</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB">        return</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> poly</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">Approximate(np.exp, (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">10000</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">), </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">max_poly_degrees</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">100</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">).explain()</span></span></code></pre>
<p>对照同样基于多项式回归的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>arctan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\arctan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">arctan</span></span></span></span> 函数，就可以实现 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>exp</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\exp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mop">exp</span></span></span></span> 函数：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 取整函数</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> -</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">floor</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  exp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 提取输入的整数部分</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      x_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 提取输入的小数部分</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      x_decimal</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 使用 Python 和 Numpy 计算出的多项式系数</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      decimal_poly</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fromJSON</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "[0.9999999999999997, 0.9999999999999494, 0.5000000000013429, 0.16666666664916754, 0.04166666680065545, 0.008333332669176907, 0.001388891142716621, 0.00019840730702746657, 2.481076351588151e-05, 2.744709498016379e-06, 2.846575263734758e-07, 2.0215584670370862e-08, 3.542885385105854e-09]"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 计算绝对值指数的倒数</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> / (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">exp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">))</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 分开计算整数部分和小数部分的指数，然后相乘</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">_pow_int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> e</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x_int</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) * (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">polynomial</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x_decimal</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> decimal_poly</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="浮点次幂指数函数-pow">浮点次幂指数函数 pow</h2>
<p>有了以上函数，我们就可以用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><mi>ln</mi><mo>⁡</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x^n = \exp (n * \ln x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>
计算浮点次幂了。唯一要注意的就是各种特殊情况：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  pow</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 判断指数是否为整数</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      is_int_times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">abs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> - </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">) &#x3C; </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">epsilon</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    in</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> is_int_times</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 是整数时使用已有的整数幂运算函数，速度更快，并且可以处理 x &#x3C; 0 时的情况</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      _pow_int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">int</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> == </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 底数为 0，任意次幂都是 0</span></span>
<span class="line"><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">      0</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> if</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C; </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">0</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> then</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 底数为负，无法计算浮点次幂，因为我们不支持虚数功能</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">      throw</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "Calculating power of negative base and decimal exponential is not supported"</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">    else</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">      # 使用上述公式计算结果</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">      exp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">times</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> * </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> x</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">);</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="总结">总结</h2>
<p>以上对数和指数函数（和一些额外的数学函数）可以在我的 GitHub 获取：<a href="https://github.com/xddxdd/nix-math" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-math</a></p>
<p>如果你使用 Nix Flake，可以用以下方式使用这些函数：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    nix-math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"github:xddxdd/nix-math"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  outputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">nix-math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">  in</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    value</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">math</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">ln</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 123</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>]]></content>
        <published>2025-05-19T23:02:28.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[Legal LTE Network at Home for $100]]></title>
        <id>https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/</id>
        <link href="https://lantian.pub/en/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/"/>
        <updated>2025-04-06T02:56:34.000Z</updated>
        <content type="html"><![CDATA[<p>Yes, you read that right. Without the need for Faraday cages or signal-blocking measures, you can build a legal LTE network at home (in the US) for around $100, capable of transmitting continuously 24/7.</p>
<blockquote>
<p>Regarding "legal": I am not a lawyer or a wireless expert. Based on my research into the relevant policies and regulations, my entire setup should be legal. However, I take no responsibility if you encounter any legal issues after following the instructions in this post.</p>
</blockquote>
<h1 id="cbrs-band-unlicensed-lte5g-band-in-the-us">CBRS Band: Unlicensed LTE/5G Band in the US</h1>
<p>The challenge in building your own LTE network lies not in the technology but in legally acquiring radio spectrum resources. On the software side, as early as 2014, solutions like <a href="https://www.srslte.com/" rel="noopener noreferrer" target="_blank">srsRAN</a> based on SDR (Software Defined Radio) for LTE transmission were available, along with open-source core network software like <a href="https://magmacore.org/" rel="noopener noreferrer" target="_blank">Magma</a> and <a href="https://open5gs.org/" rel="noopener noreferrer" target="_blank">Open5GS</a>.</p>
<p>However, when it comes to radio spectrum, the frequencies used by LTE and 5G mobile networks fall within licensed bands. To use them legally, you must apply to the local radio regulatory authority and pay expensive spectrum usage fees (usually based on coverage area and local population). Unless you live in a sparsely populated area, most enthusiasts will be stopped at this step. If you transmit without authorization, you will interfere with operators using the same frequency, and the affected operators have a strong incentive to collaborate with enforcement agencies to locate the source of interference and heavily fine you.</p>
<p>In 2017, however, the Federal Communications Commission (FCC) opened the 3550-3700 MHz band to the public, known as the CBRS (Citizens Broadband Radio Service) band. Anyone who meets simple restrictions can transmit on this band without prior authorization. Since this band corresponds to LTE band 48 and 5G band n48, you can transmit LTE or 5G signals on this band, allowing phones that support band 48 to connect, thereby legally establishing your own LTE/5G network.</p>
<p>If many devices transmit on the same band without coordination, severe signal interference will occur, rendering the band unusable for everyone. To address this, CBRS introduced the SAS system (Spectrum Access System) to manage all radio devices transmitting on the CBRS band. SAS categorizes CBRS users into three levels:</p>
<ul>
<li>Incumbent Access: Users who were authorized to use this band before 2017 have the highest priority. These are typically satellite control stations and US Navy radars. If these users transmit on the CBRS band, all other users must yield.</li>
<li>Priority Access: Users who have obtained priority usage rights for portions of the CBRS band through auctions have a lower priority than incumbent users but higher than all other users.</li>
<li>General Authorized Access: All other users without prior authorization have the lowest priority and must yield to all other users.</li>
</ul>
<p>All CBRS band users, except the US Navy, must obtain authorization from SAS before starting transmission, allowing SAS to dynamically adjust frequency allocations in different areas to prevent mutual interference. For interference from US Navy radars, SAS uses signal receivers installed along the US coast to determine if the US Navy is using the band.</p>
<p>Therefore, with a LTE/5G base station that supports the CBRS band and can connect to SAS to obtain frequency allocations, you can legally transmit signals and build your own mobile network.</p>
<p>But where can you buy such a device?</p>
<h2 id="buying-a-used-base-station-on-ebay">Buying a Used Base Station on eBay</h2>
<p>After the CBRS band was opened, it attracted the interest of many companies. <a href="https://ongoalliance.org/members/" rel="noopener noreferrer" target="_blank">As of today, 95 companies have joined the CBRS Alliance</a>, including the big three US operators AT&#x26;T, T-Mobile, and Verizon, SAS system operators Google and Federated Wireless, and base station equipment manufacturers Baicells and Sercomm, among others.</p>
<p>Another company called Nova Labs was also interested in CBRS. Nova Labs operates a virtual network operator (MVNO) called Helium Mobile, providing services through T-Mobile's mobile network. To achieve lower costs and lower plan prices than other virtual operators, they:</p>
<ul>
<li>Sold Wi-Fi hotspots and CBRS base stations dedicated to the Helium Mobile network, allowing users to share their existing broadband connection.</li>
<li>Prioritized Helium Mobile users to use these Wi-Fi hotspots and CBRS base stations, bypassing T-Mobile to reduce data traffic costs.</li>
<li>Issued a digital currency called HNT, and used HNT to pay for traffic cost on Wi-Fi hotspots and CBRS base stations.</li>
</ul>
<p>However, Nova Labs could never solve the stability issues of roaming to CBRS base stations and eventually abandoned the CBRS network entirely in March 2025, fully transitioning to using Wi-Fi hotspots. The CBRS base stations, originally costing thousands of dollars, were replaced and now listed on eBay for around $60 each. After flashing back to the original firmware and unlocking the management interface, these base stations can connect to core networks built with Magma, Open5GS, etc., and transmit for your own LTE network.</p>
<p><a href="https://www.ebay.com/sch/i.html?_nkw=cbrs&#x26;_sacat=0&#x26;_sop=15" rel="noopener noreferrer" target="_blank">Search for "CBRS" on eBay</a> to find many CBRS base stations from the Helium Mobile network.</p>
<p>Note that Helium Mobile sells two types of CBRS base stations:</p>
<ul>
<li>Indoor base stations produced by Sercomm, branded by FreedomFi or MosoLabs, model <code>SCE4255W</code>, characterized by the FreedomFi or MosoLabs logo on the casing.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/cbrs-indoor-radio.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/cbrs-indoor-radio.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/cbrs-indoor-radio.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/cbrs-indoor-radio.jpg" alt="FreedomFi/Sercomm Indoor Base Station Appearance"></picture></p>
<p>(Image source: Amazon)</p>
<ul>
<li>Outdoor base stations produced by Baicells, model <code>Nova 430h</code>, characterized by the orange Baicells logo on the casing.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/cbrs-outdoor-radio.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/cbrs-outdoor-radio.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/cbrs-outdoor-radio.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/cbrs-outdoor-radio.jpg" alt="Baicells Outdoor Base Station Appearance"></picture></p>
<p>(Image source: Amazon)</p>
<p>If you are deploying at home, <strong>you must buy an indoor base station</strong>, not an outdoor one. The differences between the two are:</p>
<ul>
<li>Indoor base stations can only be used indoors. They can easily connect to SAS without additional steps.</li>
<li>Outdoor base stations can only be used outdoors. They have higher SAS authorization fees, and require a CBRS Alliance-authorized installer to check the installation before transmission can begin. If you want to install an outdoor base station but can't find an authorized installer, <a href="https://www.coursera.org/learn/google-cbrs-cpi-training" rel="noopener noreferrer" target="_blank">you can also spend $600 to get certified as an authorized installer</a>, valid for 3 years, and then you can approve your own base stations and install as many base stations as you want.</li>
</ul>
<p>I didn't want to spend $600 on a certification that has little other use, so I bought an indoor base station directly.</p>
<h2 id="unlocking-the-management-interface-of-the-indoor-base-station">Unlocking the Management Interface of the Indoor Base Station</h2>
<p>When you buy a FreedomFi/Sercomm SCE4255W indoor base station from eBay, plug it in and turn it on, you'll find you can't connect to the base station's web management interface to change its configuration. This was done to prevent base station owners from messing with the settings, which could affect network stability, but it also prevents us from using the base station elsewhere.</p>
<p>However, these base stations connect to a central server to get configurations via the HTTP-based TR-069 protocol, a term you might be familiar with if you've ever modified your model or router provided by ISP. We can hijack the default control server address to our own control server, allowing us to freely modify the base station's configuration.</p>
<p>If you plan to use Magma to build your core network, you can skip this step. Magma comes with a TR-069 server that can send configurations to the base station, and engineers from Helium Mobile and FreedomFi have already added support for this base station to Magma, so we can later hijack the base station's control server <code>acs.freedomfi.com</code> to Magma via DNS.</p>
<p>If you plan to use Open5GS or other software that doesn't support TR-069 to build your core network, you can use my script to simulate a TR-069 server and send the command to enable the web management interface to the base station:</p>
<ol>
<li>Download the <code>tr069.py</code> script from <a href="https://github.com/xddxdd/freedomfi-cbrs-enable-webui" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/freedomfi-cbrs-enable-webui</a>.</li>
<li>Install Python 3, then run <code>python3 tr069.py</code>.</li>
<li>Modify your router's DNS settings to hijack the IP of <code>acs.freedomfi.com</code> to the IP of the computer running the <code>tr069.py</code> script. My router uses OpenWRT, so I can add a rule in the Dnsmasq configuration page: <code>/acs.freedomfi.com/192.168.4.2</code>.</li>
<li>Unbox the base station, connect it with an Ethernet cable, and plug in the power.</li>
<li>Wait a moment, and you should see a large amount of XML output in the window running the <code>tr069.py</code> script, which are the commands sent by the base station to the server. If you aren't receiving any requests, check if the DNS configuration is correct and if there's a firewall on your computer blocking port 8443.</li>
<li>When you see output containing <code>cwmp:SetParameterValuesResponse</code>, it means the web management interface has been successfully enabled. The complete output should look like this:</li>
</ol>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Envelope</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:soap-env</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://schemas.xmlsoap.org/soap/envelope/"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:soap-enc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://schemas.xmlsoap.org/soap/encoding/"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:xsd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://www.w3.org/2001/XMLSchema"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:xsi</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://www.w3.org/2001/XMLSchema-instance"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:cwmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"urn:dslforum-org:cwmp-1-0"</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Header</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">    &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:ID</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> soap-env:mustUnderstand</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"1"</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">null</span><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:ID</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Header</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Body</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">    &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:SetParameterValuesResponse</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">      &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">Status</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xsi:type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"xsd:int"</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">0</span><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">Status</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">    &#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:SetParameterValuesResponse</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Body</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Envelope</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span></code></pre>
<p>After enabling the management interface, you can access the base station's management interface via HTTPS, like <code>https://192.168.1.123/</code>.</p>
<p><picture><source srcset="/usr/uploads/202504/sercomm-login.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/sercomm-login.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/sercomm-login.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/sercomm-login.png" alt="Indoor Base Station Login Interface"></picture></p>
<p>The default username and password are <code>sc_femto</code> and <code>tsFid2wz</code> (from Helium Mobile's Discord: <a href="https://discord.com/channels/404106811252408320/836735476659912754/1355330850232995861" rel="noopener noreferrer" target="_blank">link</a>).</p>
<p><picture><source srcset="/usr/uploads/202504/sercomm-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/sercomm-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/sercomm-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/sercomm-status.png" alt="Indoor Base Station Management Interface"></picture></p>
<h2 id="purchasing-programmable-sim-cards">Purchasing Programmable SIM Cards</h2>
<p>After building your LTE network, you'll need some SIM cards with your network's configuration programmed on them to allow phones to connect to your network. Since the information on regular SIM cards is hardcoded during production, you can't just buy any SIM card; you must use programmable SIM cards.</p>
<p>Search for <code>Programmable SIM</code> on shopping websites like Amazon and Aliexpress to find these cards, for example: <a href="https://www.amazon.com/s?k=Programmable+SIM" rel="noopener noreferrer" target="_blank">https://www.amazon.com/s?k=Programmable+SIM</a>.</p>
<p><picture><source srcset="/usr/uploads/202504/programmable-sim-card.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/programmable-sim-card.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/programmable-sim-card.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/programmable-sim-card.jpg" alt="Programmable SIM Card Appearance"></picture></p>
<p>(Image source: Amazon)</p>
<p>I bought a set of SIM cards on Amazon for $38.99, which included 5 programmable SIM cards, a card programmer, a USB drive with Windows card-programming software, and an adapter from Micro SIM/Nano SIM to full-size SIM.</p>
<h1 id="building-a-magma-core-network">Building a Magma Core Network</h1>
<p>To build your own LTE network, you first need a core network. The LTE core network mainly manages user device (e.g., phone) authentication information and controls billing, traffic throttling, and other functions.</p>
<p>Magma is an open-source 4G/5G core network developed by Meta (Facebook), running on Docker/Kubernetes. It can quickly scale horizontally to support large amounts of mobile network traffic and can run on low-spec devices like Raspberry Pi to provide simple network services.</p>
<p>Since I don't need the complex container orchestration features of Kubernetes, I chose to build Magma's components using Docker.</p>
<blockquote>
<p>I referenced the following materials during the configuration process:</p>
<ul>
<li>Core network (Orchestrator and NMS) part: <a href="https://hackmd.io/@RaffieWinata/rJ5oHgk3a#1-Install-Orchestrator-and-NMS" rel="noopener noreferrer" target="_blank">[Study Note] How To Install Magma Core (Orchestrator)</a></li>
<li>Core network (Orchestrator and NMS) part: <a href="https://learn.rakwireless.com/hc/en-us/articles/26476385758615-How-To-Configure-Magma-Orchestrator-NMS" rel="noopener noreferrer" target="_blank">How To Configure Magma Orchestrator &#x26; NMS - RakWireless</a></li>
<li>Access Gateway part: <a href="https://magma.github.io/magma/docs/lte/deploy_install_docker" rel="noopener noreferrer" target="_blank">Install Docker-based Access Gateway on Ubuntu - Magma</a></li>
</ul>
</blockquote>
<h2 id="building-the-magma-core-network-orchestrator-and-nms">Building the Magma Core Network (Orchestrator and NMS)</h2>
<p>First, prepare a system to run the core network. I chose to create a virtual machine on Proxmox VE. After installation, the system services and Magma together use about 4GB of memory, so a virtual machine with about 8GB of memory should be sufficient.</p>
<p>I installed Ubuntu 24.04, but other systems should theoretically work as well.</p>
<p>Then, install Docker and Docker-compose.</p>
<p>Then, execute the following operations:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># All commands below assume you are staring from the HOME directory</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Download Magma v1.8.0 source code; you can replace the version number if there's an update</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">git</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> clone</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://github.com/magma/magma.git</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magma</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">git</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> checkout</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> v1.8.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Generate SSL certificates for the core network</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/secrets/certs</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/secrets/certs</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Here, magma.test can be replaced with your own domain or subdomain,</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># but since we're generating self-signed certificates, the domain cannot have HSTS enabled</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/orc8r/cloud/deploy/scripts/self_sign_certs.sh</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magma.test</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/orc8r/cloud/deploy/scripts/create_application_certs.sh</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magma.test</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Copy the SSL certificates to the configuration needed by the Magma Docker containers</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/.cache/test_certs/</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -r</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> *</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/.cache/test_certs/</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">chmod</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -R</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> +r</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/.cache/test_certs/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Build the Docker containers for the Orchestrator component</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/orc8r/cloud/docker</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">python3</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build.py</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --all</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Wait for the Docker image build to complete, which takes about 30 minutes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Modify the configuration in docker-compose.yml</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> docker-compose.yml</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Items to modify:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># - If you used a different domain when generating SSL certificates, search for magma.test and replace it with your own domain</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># - Add `restart: always` to the `kibana` and `fluentd` containers for auto-start on boot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Start the Orchestrator</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">python3</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> run.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Confirm all containers have started successfully</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ps</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># All containers except orc8r-test should be in the Up state</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If any container fails to start, use `docker logs [container name]` to view logs and resolve issues accordingly</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Modify the DNS server configuration to point magma.test (or your own domain) and all subdomains to this machine's IP</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># For example, my Dnsmasq rule is: /magma.test/192.168.0.7</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Prepare to build the Web management interface (NMS)</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/nms</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Modify the configuration in docker-compose.yml</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> docker-compose.yml</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Items to modify:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># - Add `restart: always` to all containers for auto-start on boot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Modify a configuration in docker/docker_ssl_proxy/proxy_ssl.conf that is no longer supported by the new version of nginx</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> docker/docker_ssl_proxy/proxy_ssl.conf</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Delete the lines `listen 443;` and `ssl on;`, replace with `listen 443 ssl;`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Start the Docker containers for the Web management interface</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker-compose</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> up</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -d</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Wait for the Docker image build to complete, which takes about 20 minutes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Confirm all containers have started successfully</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ps</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># All containers starting with nms should be in Up state</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If any container fails to start, use `docker logs [container name]` to view logs and resolve issues accordingly</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Create the default administrator</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> scripts/dev_setup.sh</span></span></code></pre>
<p>Then, in your local browser, visit <a href="https://magma-test.magma.test" rel="noopener noreferrer" target="_blank">https://magma-test.magma.test</a> (or <code>magma-test.[your own domain]</code>), and you should see the login interface. If you see an address not found error, confirm that the domain is resolving correctly.</p>
<p><picture><source srcset="/usr/uploads/202504/magma-login.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-login.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-login.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-login.png" alt="Magma Login Interface"></picture></p>
<p>Log in with the default username <code>admin@magma.test</code> and password <code>password1234</code>.</p>
<p>In the left <code>Network</code> tab, add a network and fill in the following:</p>
<ul>
<li>In the <code>Config</code> tab, <code>Network ID</code> and <code>Network Name</code> can be filled in arbitrarily.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-network.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-network.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-network.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-network.png" alt="Magma Add Network Interface"></picture></p>
<ul>
<li>In the <code>Epc</code> tab, change MCC to <code>315</code>, MNC to <code>010</code>, and TAC to <code>1</code>. MCC/MNC are the codes for mobile operators, for example, AT&#x26;T's MCC/MNC is <code>310/410</code>, and T-Mobile's is <code>310/260</code>. <code>315/010</code> is the code specifically allocated for CBRS networks, and all mobile networks on the CBRS band can use it.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-network-epc.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-network-epc.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-network-epc.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-network-epc.png" alt="Magma Add Network Interface Epc Tab"></picture></p>
<ul>
<li>In the <code>Ran</code> tab, change <code>Bandwidth</code> to 20 MHz for the fastest speed. Select <code>Band Type</code> as <code>TDD</code> because the LTE 48/5G n48 band uses TDD time-division multiplexing.</li>
<li>Fill in EARFCNDL with <code>55540</code>, which represents the 3580 MHz frequency point within the CBRS band, but the CBRS base station will actually use the frequency allocated by SAS, not the one specified here.</li>
<li>Keep all other configurations at their defaults.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-network-ran.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-network-ran.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-network-ran.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-network-ran.png" alt="Magma Add Network Interface Ran Tab"></picture></p>
<p>After completing the above configuration, you now have an LTE core network. However, your base station cannot directly connect to the core network; it needs another component: the Access Gateway (AGW).</p>
<h2 id="building-the-magma-access-gateway-agw">Building the Magma Access Gateway (AGW)</h2>
<p>Magma's Access Gateway manages the base station and forwards the base station's data traffic to the internet. Note that Magma's core network only manages user information and does not handle data traffic, and the traffic from the Access Gateway does not pass through the core network.</p>
<p>First, prepare a system to run the Access Gateway. This system needs to be configured with two network interfaces, where <code>eth0</code> is used for remote management and connecting to the core network, and <code>eth1</code> is used for connecting to the base station. If you're using a separate computer, you'll need to plug the base station's Ethernet cable into the <code>eth1</code> interface later, and Magma will automatically configure DHCP to allow the base station to connect to the Access Gateway. However, since I'm using a virtual machine on Proxmox VE, I chose to place the additional <code>eth1</code> interface in a VLAN and set up the corresponding VLAN and IP on the main router. This way, I can ping the <code>eth1</code> IP from any machine on my local network, meaning the base station can be plugged into any port on my main switch.</p>
<p>This system must be installed with Ubuntu 20.04 because the Magma Access Gateway installation modifies many system configurations, and these modifications are only supported on Ubuntu 20.04.</p>
<p>After installation, the system services and Magma together use about 1GB of memory, so a virtual machine with about 2-4GB of memory should be sufficient.</p>
<p>Then, install Docker and Docker-compose.</p>
<p>Then, execute the following operations:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Copy the rootCA.pem from the core network to the Access Gateway</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># On the access gateway machine, run:</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /var/opt/magma/certs</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># On your local computer, run:</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">scp</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> root@[core</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> network</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> machine]:~/magma/.cache/test_certs/rootCA.pem</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> .</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">scp</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> rootCA.pem</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> root@[Access</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> Gateway</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> machine]:/var/opt/magma/certs/rootCA.pem</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Create the configuration file for connecting to the core network, on the access gateway machine:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If your core network domain is not magma.test, replace accordingly</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cat</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;&#x3C; </span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /var/opt/magma/configs/control_proxy.yml</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">cloud_address: controller.magma.test</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">cloud_port: 7443</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">bootstrap_address: bootstrapper-controller.magma.test</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">bootstrap_port: 7444</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">fluentd_address: fluentd.magma.test</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">fluentd_port: 24224</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">rootca_cert: /var/opt/magma/certs/rootCA.pem</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Run the one-click installation script, on the access gateway machine:</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">wget</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://github.com/magma/magma/raw/v1.8/lte/gateway/deploy/agw_install_docker.sh</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> agw_install_docker.sh</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># The first installation attempt will likely fail, due to the expiration of Magma's official GPG certificate. Below is how to resolve this issue.</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Solution from https://github.com/magma/magma/issues/15572</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Disable apt-get GPG verification</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "Acquire::AllowInsecureRepositories true;"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> > </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/etc/apt/apt.conf.d/99AllowInsecureRepositories</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "APT::Get::AllowUnauthenticated true;"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/etc/apt/apt.conf.d/99AllowInsecureRepositories</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Remove the problematic steps</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /opt/magma/lte/gateway/deploy/roles/magma_deploy/tasks/main.yml</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Delete the steps `Add unvalidated Apt signing key.` and `Add validated Apt signing key.`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Modify the installation script to skip already executed parts</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> agw_install_docker.sh</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Change `RERUN=0` to `RERUN=1` to skip already executed parts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Rerun the installation script</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> agw_install_docker.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If successful, the installation should complete. Reboot the machine</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">reboot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Modify the IP address configuration for the eth1 interface as needed</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cat</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;&#x3C; </span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/netplan/70-secondary-itf.yaml</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">network:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ethernets:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    eth1:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      addresses:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      - 192.168.4.2/24</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      routes:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      - to: 0.0.0.0/0</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        via: 192.168.4.1</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        metric: 1000</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      nameservers:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        addresses:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        - 192.168.4.1</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        search: []</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  version: 2</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">netplan</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apply</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Confirm all containers have started successfully</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ps</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># All containers except liagentd should be in Up state</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If any container fails to start, use `docker logs [container name]` to view logs and resolve issues accordingly</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Get the Access Gateway's key, which will be needed later to connect to the core network</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> exec</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magmad</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> show_gateway_info.py</span></span></code></pre>
<p>Return to the core network management interface at <a href="https://magma-test.magma.test" rel="noopener noreferrer" target="_blank">https://magma-test.magma.test</a> (or <code>magma-test.[your own domain]</code>), go to the left <code>Equipment</code> tab, and ensure the network you created earlier is selected in the top right corner.</p>
<p>Click the <code>Add New</code> button in the top right to add the Access Gateway, and fill in the following:</p>
<ul>
<li>In the <code>Config</code> tab, <code>Gateway Name</code> and <code>Gateway ID</code> can be filled in arbitrarily.</li>
<li>In the <code>Config</code> tab, fill in <code>Hardware UUID</code> with the <code>Hardware ID</code> you obtained from the Access Gateway.</li>
<li>In the <code>Config</code> tab, fill in <code>Challenge Key</code> with the <code>Challenge key</code> you obtained from the Access Gateway.</li>
<li>Keep all other configurations at their defaults.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-agw.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-agw.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-agw.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-agw.png" alt="Magma Add Access Gateway Interface"></picture></p>
<p>After saving, wait a moment, and the management interface should show the status of this Access Gateway as <code>Health</code> being <code>Good</code>. If the status remains <code>Bad</code>, try rebooting the Access Gateway or check the DNS on the Access Gateway to ensure <code>magma.test</code> (or your domain) points to the core network.</p>
<p><picture><source srcset="/usr/uploads/202504/magma-agw-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-agw-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-agw-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-agw-status.png" alt="Magma Access Gateway Status Interface"></picture></p>
<h2 id="connecting-the-base-station-to-the-magma-access-gateway">Connecting the Base Station to the Magma Access Gateway</h2>
<p>Pick up your CBRS base station and look at the label on the back, which should have a serial number like <code>2112CW5012345</code>.</p>
<p>In the core network management interface, go to the left <code>Equipment</code> tab, then to the <code>eNodeB</code> tab. Click the <code>Add New</code> button in the top right to add the base station, and fill in the following:</p>
<ul>
<li>In the <code>Config</code> tab, <code>Name</code> can be filled in arbitrarily.</li>
<li>In the <code>Config</code> tab, fill in <code>Serial number</code> with the serial number from the base station's label.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-enodeb.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-enodeb.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-enodeb.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-enodeb.png" alt="Magma Add Base Station Interface"></picture></p>
<ul>
<li>In the <code>Ran</code> tab, <strong>do not select</strong> <code>eNodeB Managed Externally</code> (disallow Magma from managing the base station).</li>
<li>In the <code>Ran</code> tab, select <code>Device Class</code> as <code>FreedomFi One</code> (for FreedomFi/Sercomm's indoor base station).</li>
<li>In the <code>Ran</code> tab, fill in <code>Cell ID</code> with <code>0</code> (increment by one for each additional base station).</li>
<li>In the <code>Ran</code> tab, select <code>Bandwidth</code> as 20 MHz for the fastest speed.</li>
<li>In the <code>Ran</code> tab, fill in <code>PCI</code> with <code>100</code> (increment by one for each additional base station).</li>
<li>In the <code>Ran</code> tab, fill in <code>TAC</code> with <code>1</code>.</li>
<li>In the <code>Ran</code> tab, select <code>Transmit</code> as <code>Enabled</code> (enable transmission).</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-1.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-1.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-1.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-enodeb-ran-1.png" alt="Magma Add Base Station Interface Ran Tab 1"></picture></p>
<p><picture><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-2.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-2.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-2.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-enodeb-ran-2.png" alt="Magma Add Base Station Interface Ran Tab 2"></picture></p>
<p>Although we've added the base station to Magma, since the base station device defaults to connecting to Helium Mobile's server for configuration, it still can't connect to our Access Gateway properly. Therefore, we need to hijack the base station's control server <code>acs.freedomfi.com</code> to the <code>eth1</code> IP address of Magma access gateway via DNS. Modify your router's DNS settings to hijack the IP of <code>acs.freedomfi.com</code> to the <code>eth1</code> IP of the machine running the Access Gateway. My router uses OpenWRT, so I can add a rule in the Dnsmasq configuration page: <code>/acs.freedomfi.com/192.168.4.2</code>.</p>
<p>Additionally, because the port number of the TR-069 server on the Magma Access Gateway is different from Helium Mobile's, we need to modify the port number and some other configurations on the Access Gateway.</p>
<p>On the Access Gateway, edit <code>nano /etc/magma/enodebd.yml</code> and make the following changes:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Change the port under tr069 to 8443 to match Helium Mobile's control server port number</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">tr069</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  port</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">8443</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Modify the configuration for the base station to connect to the SAS server; this configuration corresponds to connecting to Google SAS</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">sas</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Let the base station connect to the SAS server directly, not through Magma proxy. Magma proxy SAS connection requires installing additional components, which is too complicated</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  dp_mode</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">False</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # SAS server address, here for Google SAS</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_server_url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://sas.goog/v1.2/"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Your Google Cloud Project ID can be seen on the console homepage: https://console.cloud.google.com</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_uid</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"[replace with your own Google Cloud Project ID]"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # A represents indoor, B represents outdoor</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_category</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"A"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # GAA represents the lowest priority General Authorized Access</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_channel_type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"GAA"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # indoor for indoor, outdoor for outdoor</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_location</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"indoor"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Use this value for FreedomFi/Sercomm indoor base stations; it may be different for other brands</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_cert_subject</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"/C=TW/O=Sercomm/OU=WInnForum CBSD Certificate/CN=P27-SCE4255W:%s"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Keep the following two items unchanged</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_icg_group_id</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">""</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_height_type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"AMSL"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Change the LTE synchronization source to FREE_RUNNING; otherwise, the indoor base station may not transmit signals if the GPS signal is too weak</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">prim_src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"FREE_RUNNING"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Add your base station's serial number here to enable the web management interface</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">web_ui_enable_list</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: [</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"2112CW5012345"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Keep all other configurations unchanged</span></span></code></pre>
<p>After saving the configuration file, reboot the entire Access Gateway system. I found during testing that restarting individual Docker containers on the Access Gateway can cause strange issues, such as the base station not being able to connect to the Access Gateway. A full reboot can resolve most strange issues.</p>
<p>Wait a moment, and the core network management interface should show the status of this base station as <code>Health</code> being <code>Good</code>. If the status remains <code>Bad</code>, try rebooting the Access Gateway.</p>
<p><picture><source srcset="/usr/uploads/202504/magma-enodeb-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-enodeb-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-enodeb-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-enodeb-status.png" alt="Magma Base Station Status Interface"></picture></p>
<p>If you added the indoor base station's serial number to <code>web_ui_enable_list</code> to enable the management interface, you can now access the base station's management interface via HTTPS, like <code>https://192.168.1.123/</code>. The default username and password are <code>sc_femto</code> and <code>tsFid2wz</code> (from Helium Mobile's Discord: <a href="https://discord.com/channels/404106811252408320/836735476659912754/1355330850232995861" rel="noopener noreferrer" target="_blank">link</a>).</p>
<h2 id="connecting-the-base-station-to-sas">Connecting the Base Station to SAS</h2>
<p>At this point, the base station is connected to your core network, but since it hasn't connected to the CBRS SAS system (Spectrum Access System) and obtained frequency authorization, it still won't transmit LTE signals.</p>
<p>We need to register an account with a SAS system and register our base station to obtain frequency authorization.</p>
<p>I used <a href="https://cloud.google.com/products/spectrum-access-system" rel="noopener noreferrer" target="_blank">Google SAS</a>, a SAS system run by Google Cloud. Google SAS is currently the easiest SAS system to register with; other vendors' SAS systems usually require contacting sales and signing enterprise-level service contracts to use. Moreover, Google SAS is extremely affordable; at the time of writing, <a href="https://cloud.google.com/products/spectrum-access-system#pricing" rel="noopener noreferrer" target="_blank">the price for indoor base stations is $2.64 per month per unit, and for outdoor base stations, it's $13.15 per month per unit</a>.</p>
<p>You need to register a Google Cloud account first, then visit the <a href="https://console.cloud.google.com/spectrum-access" rel="noopener noreferrer" target="_blank">SAS configuration page in the console</a> and follow these steps to configure:</p>
<ol>
<li>Determine your latitude and longitude. If you use an Android phone, you can download the <a href="https://play.google.com/store/apps/details?id=com.eclipsim.gpsstatus2" rel="noopener noreferrer" target="_blank">GPS Status &#x26; Toolbox</a> app from Google Play to view your latitude and longitude. If you use an iPhone, you can view your latitude and longitude from the built-in Compass app.</li>
<li>In the console, select the "Add Site" button at the top (the one with a plus sign), and click anywhere on the map. A sidebar will pop up on the right, asking you to enter information about your base station.</li>
</ol>
<p><picture><source srcset="/usr/uploads/202504/google-sas-add-button.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-add-button.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-add-button.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-add-button.png" alt="Google SAS Add Site Button"></picture></p>
<ol start="3">
<li>First, switch to the first tab on the right sidebar (Location) and enter your correct latitude and longitude. It doesn't need to be very precise; the base station itself will upload its GPS location.</li>
</ol>
<p><picture><source srcset="/usr/uploads/202504/google-sas-enter-location.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-enter-location.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-enter-location.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-enter-location.png" alt="Google SAS Enter Latitude and Longitude Interface"></picture></p>
<ol start="4">
<li>Then, switch to the second tab (Base Station Information) and fill in the following:
<ul>
<li><code>CBSD category</code> should be <code>A</code> for indoor base stations and <code>B</code> for outdoor base stations, based on your actual situation.</li>
<li><code>FCC ID</code> should be the FCC ID on the base station's label.</li>
<li><code>Serial number</code> should be the serial number on the base station's label.</li>
<li><code>Device type</code> should be <code>Indoor</code> (indoor) or <code>Outdoor</code> (outdoor), based on your actual situation.</li>
<li>Under <code>Air Interface</code>, select <code>E_UTRA</code> (corresponding to LTE) for <code>Radio technology</code>.</li>
<li>Under <code>Antenna</code>, fill in <code>Height</code> with your GPS altitude.</li>
<li>Under <code>Antenna</code>, select <code>Height type</code> as <code>AMSL</code> (height referenced to sea level).</li>
<li>Under <code>Antenna</code>, fill in <code>Azimuth</code> with the compass direction the base station faces.
<ul>
<li>For FreedomFi/Sercomm indoor base stations, since the antenna transmits in 360 degrees, the direction doesn't matter, so you can directly enter <code>0</code>.</li>
</ul>
</li>
<li>Under <code>Antenna</code>, fill in <code>Mech downtilt</code> with the degree of downward tilt of the base station; if there's no tilt, you can directly enter <code>0</code>.</li>
<li>Under <code>Antenna</code>, fill in <code>Horiz accuracy</code> with <code>10</code>.</li>
<li>Under <code>Antenna</code>, fill in <code>Vert accuracy</code> with <code>3</code>.</li>
</ul>
</li>
<li>You also need to fill in the following based on the base station's data sheet. If you're using a FreedomFi/Sercomm indoor base station, you can directly copy my configuration:
<ul>
<li><code>Max EIRP</code> should be <code>29</code> for FreedomFi/Sercomm indoor base stations.</li>
<li>Under <code>Antenna</code>, <code>Max gain</code> should be <code>5</code> for FreedomFi/Sercomm indoor base stations.</li>
<li>Under <code>Antenna</code>, <code>Beamwidth</code> should be <code>360</code> for FreedomFi/Sercomm indoor base stations.</li>
<li>Under <code>Antenna</code>, <code>Azimuth</code> should be <code>360</code> for FreedomFi/Sercomm indoor base stations.</li>
<li>Under <code>Measurement capability</code>, for FreedomFi/Sercomm indoor base stations, do not check <code>RX w/ grant</code>, but check <code>RX w/o grant</code>.</li>
<li>Under <code>Air Interface</code>, <code>Supported spec</code> should be <code>FFS</code> for FreedomFi/Sercomm indoor base stations.</li>
</ul>
</li>
<li>You can leave the rest of the configurations blank; click <code>Ready for CPI</code>.</li>
<li>At this point, the page will display "The new configuration must be signed by a CPI before the CBSD registers with the SAS." If you're installing an indoor base station, you can ignore this. But if you're installing an outdoor base station, you'll need to find a Certified Professional Installer to approve the configuration, or <a href="https://www.coursera.org/learn/google-cbrs-cpi-training" rel="noopener noreferrer" target="_blank">spend $600 to get certified as a CPI</a>.</li>
</ol>
<p><picture><source srcset="/usr/uploads/202504/google-sas-radio-info-1.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-radio-info-1.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-radio-info-1.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-radio-info-1.png" alt="Google SAS Base Station Information Interface 1"></picture></p>
<p><picture><source srcset="/usr/uploads/202504/google-sas-radio-info-2.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-radio-info-2.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-radio-info-2.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-radio-info-2.png" alt="Google SAS Base Station Information Interface 2"></picture></p>
<p>Reboot the base station: unplug the power from your base station, wait a few seconds, then plug it back in. After a few minutes, once the base station has started up and completed GPS positioning, the Google SAS configuration page should show some yellow-highlighted <code>Active config value</code>, indicating that these configurations differ from what you entered. You can ignore them.</p>
<p>Switch to the <code>Status</code> tab to view the device status; you should see the base station status as <code>Authorized</code> and the corresponding frequency allocation.</p>
<p>At this point, check the base station's indicator lights; the leftmost LTE status indicator light should be a steady blue, indicating that it's now transmitting LTE signals. This completes the base station configuration.</p>
<p>Take out your phone, select any SIM card, turn off the "Automatic Network Selection" option, and the phone will automatically search for nearby mobile networks. If your phone supports LTE band 48, you should see a network named 315010, which is the signal transmitted by your base station.</p>
<h1 id="programming-sim-cards">Programming SIM Cards</h1>
<p>With the LTE network in place, the next step is to program your network's authentication information onto the SIM cards, allowing phones to connect to your network.</p>
<p>When I bought the programmable SIM cards, the seller provided Windows card-programming software compatible with these SIM cards. I tried using pySim to program the cards on Linux, but the resulting SIM cards couldn't connect to the network for authentication, so I used Windows for this step.</p>
<p>Insert the SIM card programmer into your computer and insert a programmable SIM card into the programmer.</p>
<p>Open the card-programming software, first click the <code>Read Card</code> button in the top right to attempt to read the card's information, ensuring the programmer is connected properly.</p>
<p>Then, in the <code>LTE/WCDMA Parameter</code> section on the right, enter the following information:</p>
<ul>
<li>Select <code>IMSI15</code> and enter <code>3150109999XXXXX</code>, where the first ten digits are fixed, and the last five can be numbered arbitrarily.
<ul>
<li>The first six digits <code>315010</code> are the MCC/MNC for CBRS networks.</li>
<li>The next four digits <code>9999</code> are the IBN (IMSI Block Number) within the CBRS network; <code>9999</code> is the test number reserved for CBRS. The complete IBN allocation table can be found on the <a href="https://imsiadmin.com/assignments/cbrs/" rel="noopener noreferrer" target="_blank">CBRS Assignments</a> webpage.</li>
<li>The last five digits can be any number you choose.</li>
</ul>
</li>
<li>Ensure the <code>AD</code> field value is <code>00000003</code>. If it's different, click the edit button on the right and ensure the MNC length is set to 3.</li>
<li>In the <code>KI</code> and <code>OPC</code> fields, enter a random 32-character hexadecimal string for each. These strings are the authentication keys for the SIM card and cannot be read back once written to the SIM card.
<ul>
<li>Keep a backup of the <code>KI</code> and <code>OPC</code> values; you'll need to enter them into the Magma core network management page later.</li>
</ul>
</li>
<li>Click the <code>Auto</code> button next to <code>PLMNwAct</code>, and the four input fields on the left should automatically fill with the values shown in the image.</li>
<li>Change the <code>SPN</code> to the operator name you want to display on your phone, for example, <code>Lan Tian Mobile</code>.</li>
</ul>
<p>Finally, click the <code>Write Card</code> button in the top right to program the card.</p>
<p>If you want to program multiple SIM cards, follow the same process, but ensure that the <code>IMSI15</code>, <code>KI</code>, and <code>OPC</code> values are different for each card.</p>
<p><picture><source srcset="/usr/uploads/202504/write-sim-card.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/write-sim-card.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/write-sim-card.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/write-sim-card.jpg" alt="SIM card programming software interface"></picture></p>
<h2 id="creating-a-data-plan">Creating a Data Plan</h2>
<p>Return to the core network management interface at <a href="https://magma-test.magma.test" rel="noopener noreferrer" target="_blank">https://magma-test.magma.test</a> (or <code>magma-test.[your own domain]</code>), go to the left <code>Traffic</code> tab, then to the top <code>APNs</code> tab, and click <code>Create New APN</code> to create an APN.</p>
<ul>
<li>Enter <code>internet</code> for <code>APN ID</code>.</li>
<li>For <code>Max Required Bandwidth</code>, enter <code>1000000000</code> (1 Gbps, far exceeding the speed LTE can provide) for both upload and download.</li>
<li>Select <code>IPV4V6</code> for <code>PDN Type</code>.</li>
<li>Keep all other configurations at their defaults.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-apn.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-apn.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-apn.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-apn.png" alt="Magma Add APN Interface"></picture></p>
<p>Then, click the top <code>Data Plans</code> tab and click <code>Create New Data Plan</code>.</p>
<ul>
<li>You can enter any value for <code>Data Plan ID</code>.</li>
<li>Keep both <code>Download</code> and <code>Upload</code> set to <code>Unlimited</code>.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-data-plan.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-data-plan.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-data-plan.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-data-plan.png" alt="Magma Add Data Plan Interface"></picture></p>
<p>At this point, the data plan is created, and you can start registering SIM cards.</p>
<h2 id="registering-sim-cards">Registering SIM Cards</h2>
<p>Go to the left <code>Subscriber</code> tab in the management interface, then click <code>Manage Subscribers</code> - <code>Add Subscribers</code>.</p>
<p>For each SIM card you want to add, click the <code>Add New Row</code> button in the top right and enter the SIM card's information:</p>
<ul>
<li>In the <code>IMSI</code> field, first enter <code>IMSI</code>, then the <code>IMSI15</code> you used when programming the card. For example: <code>IMSI315010999925470</code>.</li>
<li>You can enter any value for <code>Subscriber Name</code>.</li>
<li>Enter the <code>KI</code> you used when programming the card in the <code>Auth Key</code> field.</li>
<li>Enter the <code>OPC</code> you used when programming the card in the <code>Auth OPC</code> field.</li>
<li>Select <code>ACTIVE</code> for <code>Service</code> to enable the SIM card.</li>
<li>Select the data plan you created earlier for <code>Data Plan</code>.</li>
<li>Select the APN you created earlier for <code>Active APNs</code>.</li>
<li>Click the checkmark on the right to save.</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-sim.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-sim.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-sim.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-sim.png" alt="Magma Add SIM Card Interface"></picture></p>
<p>At this point, your SIM card is successfully registered with the Magma core network, and after a brief data synchronization, it will be ready for use.</p>
<h1 id="connecting-a-phone-to-the-network">Connecting a Phone to the Network</h1>
<p>Insert the SIM card into your phone. I used an iPhone SE 2022 for testing.</p>
<p>After inserting the SIM card and waiting a moment, the iPhone connected to my base station, showing full signal strength in the top left corner, with the network displayed as <code>315 010</code>, which is the MCC/MNC for CBRS:</p>
<p><picture><source srcset="/usr/uploads/202504/iphone-non-public-network-en.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/iphone-non-public-network-en.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/iphone-non-public-network-en.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/iphone-non-public-network-en.jpg" alt="iPhone Network Status"></picture></p>
<p>Using Speedtest to measure the speed, I achieved a download speed of 100 Mbps and an upload speed of 10 Mbps:</p>
<p><picture><source srcset="/usr/uploads/202504/iphone-speedtest.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/iphone-speedtest.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/iphone-speedtest.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/iphone-speedtest.jpg" alt="iPhone Speedtest"></picture></p>
<p>I also tried an Android phone, a Motorola Edge+ 2023. Although this phone could see my LTE network, it couldn't connect to it properly, even with the same SIM card that worked on the iPhone. Further investigation is needed.</p>
<h1 id="conclusion">Conclusion</h1>
<p>The total cost of all the equipment and services I used to build this LTE network (excluding sales tax) is as follows:</p>
<ul>
<li>Proxmox VE host for running virtual machines, my existing equipment: $0</li>
<li>FreedomFi/Sercomm indoor base station: $49 + shipping $12.3 = $61.3</li>
<li>Programmable SIM cards and card programmer: $38.99</li>
<li>Google SAS: $2.64/month, calculated for one month</li>
<li>Total cost: $102.93</li>
</ul>
<p>This price is not expensive for a Homelabber, far below the traditional belief that building an LTE network costs hundreds or thousands of dollars, and all the equipment and services can be easily purchased.</p>]]></content>
        <published>2025-04-06T02:56:34.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[$100，DIY 搭建合法的 LTE 网络]]></title>
        <id>https://lantian.pub/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/</id>
        <link href="https://lantian.pub/article/modify-computer/legal-lte-network-at-home-for-100-bucks.lantian/"/>
        <updated>2025-04-06T02:56:34.000Z</updated>
        <content type="html"><![CDATA[<p>是的，你没看错，不需要法拉第笼等信号屏蔽措施，只需要大概 100 美元，你就可以在（美国的）家里搭建一个合法的 LTE 网络，可以 24 小时连续发射。</p>
<blockquote>
<p>关于「合法」：我不是律师或者无线电专家。根据我对相关政策法规的研究，我的整套配置应当是合法的。但如果你按照本文操作后遇到了法律问题，我不负任何责任。</p>
</blockquote>
<h1 id="cbrs-频段美国的免授权-lte5g-频段">CBRS 频段：美国的免授权 LTE/5G 频段</h1>
<p>自建 LTE 网络的难点不在技术部分，而是在于合法地获取无线电频谱资源。软件方面，早在 2014 年就有了 <a href="https://www.srslte.com/" rel="noopener noreferrer" target="_blank">srsRAN</a> 等基于 SDR（软件定义无线电）的 LTE 发射方案，也有 <a href="https://magmacore.org/" rel="noopener noreferrer" target="_blank">Magma</a>、<a href="https://open5gs.org/" rel="noopener noreferrer" target="_blank">Open5GS</a> 等开源的核心网软件。</p>
<p>但是在无线电频谱方面，LTE、5G 等移动网络使用的无线电频率都处在授权频段，需要向当地政府的无线电管理机构提出申请，并缴纳昂贵的频段使用费（一般根据覆盖范围和当地人口数）才能合法使用。除非你所在的地方人烟稀少，否则绝大部分爱好者都会被挡在这一步。如果你未经授权就占用频段强行发射，就会对使用同一频段的运营商造成干扰，而业务受损的运营商有很强的动力联合无线电执法部门搜查干扰源并且对你高额罚款。</p>
<p>不过 2017 年，美国联邦通信委员会（FCC）向公众开放了 3550-3700 MHz 这段无线电频谱，称为 CBRS（Citizens Broadband Radio Service，公民宽带无线电服务）频段。任何人只要满足简单的限制条件，都可以在这个频段上进行发射，不需要提前申请频段授权。由于这段频段正好是 LTE 的 48 频段和 5G 的 n48 频段，你可以在这段频段上发射 LTE 或者 5G 信号，让支持 48 频段的手机连接，从而合法地建立自己的 LTE/5G 网络。</p>
<p>如果大量设备未经协调就在同一个频段上发射信号，就会造成严重的信号干扰，导致大家都无法正常使用这个频段。为了解决这个问题，CBRS 引入了 SAS 系统（Spectrum Access System，频谱访问系统）管理所有在 CBRS 频段上发射的无线电设备。SAS 将 CBRS 的用户分成了三个级别：</p>
<ul>
<li>Incumbent Access（现有用户）：在 2017 年前就已经获得授权使用这段频段的用户，优先级最高。一般是卫星控制站，以及美国海军的雷达。如果这些用户在 CBRS 频段上发射，其它所有用户都要避让。</li>
<li>Priority Access（优先用户）：通过竞拍获得 CBRS 频段内部分频段优先使用权的用户，优先级低于现有用户，但高于其它所有用户。</li>
<li>General Authorized Access（通用授权用户）：其它未经事先授权的用户，优先级最低，需要避让其它所有用户。</li>
</ul>
<p>除了美国海军以外的所有 CBRS 频段用户开始发射时都需要向 SAS 申请授权许可，因此 SAS 可以动态调整各地的频段分配，保证频段上不出现互相干扰。对于美国海军的雷达干扰，SAS 则是通过在美国海岸安装信号接收器，来判断美国海军是否在使用频段。</p>
<p>因此，只要有一台支持 CBRS 频段，并且能连接到 SAS 获取频段分配的 LTE/5G 基站，就可以合法发射信号，自建移动网了。</p>
<p>但是，这样的设备在哪里可以买到呢？</p>
<h2 id="从-ebay-上购买二手基站">从 eBay 上购买二手基站</h2>
<p>CBRS 频段开放后，吸引了许多公司的兴趣。<a href="https://ongoalliance.org/members/" rel="noopener noreferrer" target="_blank">截至今天，已有 95 家公司加入了 CBRS 联盟</a>，其中包括美国御三家运营商 AT&#x26;T、T-Mobile、Verizon，运营 SAS 系统的 Google 和 Federated Wireless，基站设备制造商 Baicells 和 Sercomm 等。</p>
<p>美国一家名为 Nova Labs 的公司也对 CBRS 感兴趣。Nova Labs 运营一家名为 Helium Mobile 的虚拟运营商（MVNO），通过 T-Mobile 的移动网络提供服务。为了追求比其它虚拟运营商更低的成本和更低的套餐价格，他们：</p>
<ul>
<li>出售 Helium Mobile 网络专用的 Wi-Fi 热点和 CBRS 基站，让用户共享自己已有的宽带。</li>
<li>让 Helium Mobile 用户优先使用这些 Wi-Fi 热点和 CBRS 基站，从而绕开 T-Mobile 降低数据流量成本。</li>
<li>发行数字货币 HNT，使用 HNT 支付 Wi-Fi 热点和 CBRS 基站的流量费。</li>
</ul>
<p>但是，Nova Labs 始终无法解决漫游到 CBRS 基站的稳定性问题，并最终在 2025 年 3 月完全放弃了 CBRS 网络，全面转向使用 Wi-Fi 热点。原本上千刀的 CBRS 基站就被换了下来，挂在 eBay 上以 $60 左右一台的价格出售。而这些基站在刷回原版固件、解锁管理界面后，就可以连接我们用 Magma、Open5GS 等自建的核心网，发射自己的 LTE 网络。</p>
<p><a href="https://www.ebay.com/sch/i.html?_nkw=cbrs&#x26;_sacat=0&#x26;_sop=15" rel="noopener noreferrer" target="_blank">在 eBay 上搜索「CBRS」</a>，就可以找到很多 Helium Mobile 网络的 CBRS 基站。</p>
<p>要注意的是，Helium Mobile 出售两种 CBRS 基站：</p>
<ul>
<li>Sercomm 公司生产，FreedomFi 或者 MosoLabs 公司贴牌的室内基站，型号为 <code>SCE4255W</code>，其特征是外壳上只有 FreedomFi 或 MosoLabs 公司字样的 Logo。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/cbrs-indoor-radio.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/cbrs-indoor-radio.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/cbrs-indoor-radio.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/cbrs-indoor-radio.jpg" alt="FreedomFi/Sercomm 室内基站外观"></picture></p>
<p>（图源：Amazon）</p>
<ul>
<li>Baicells 公司生产的 <code>Nova 430h</code> 室外基站，特征是外壳上有橙色的 Baicells 公司 Logo。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/cbrs-outdoor-radio.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/cbrs-outdoor-radio.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/cbrs-outdoor-radio.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/cbrs-outdoor-radio.jpg" alt="Baicells 室外基站外观"></picture></p>
<p>（图源：Amazon）</p>
<p>如果你是在家部署，<strong>一定要购买室内基站</strong>，不能买室外基站。两种基站的区别在于：</p>
<ul>
<li>室内基站只能在室内使用，只需连接 SAS，无需额外步骤。</li>
<li>室外基站只能在室外使用，连接 SAS 的授权费更贵，而且安装时还需要 CBRS 联盟的授权安装人员检查安装情况，审批通过后才能开始发射。如果你想在室外装基站，却找不到授权安装人员，<a href="https://www.coursera.org/learn/google-cbrs-cpi-training" rel="noopener noreferrer" target="_blank">你也可以自己花 $600 考一个授权安装人员的证</a>，有效期 3 年，然后就可以审批自己的基站，想装多少基站就装多少了。</li>
</ul>
<p>我不想花 $600 考一个基本没别的用处的证，就直接买了室内基站。</p>
<h2 id="解锁室内基站的管理界面">解锁室内基站的管理界面</h2>
<p>你从 eBay 上买到 FreedomFi/Sercomm 的 SCE4255W 室内基站，插电开机后，会发现连不上基站的 Web 管理界面，无法修改配置。这是为了防止用户架设基站时乱改设置，影响网络稳定性，但是也防止了我们把基站用在别的地方。</p>
<p>不过，这些基站会通过基于 HTTP 的 TR-069 协议连接中央服务器获取配置，如果你自己破解过运营商的光猫或路由器应该会很熟悉这个名词。我们可以把默认控制服务器的地址劫持到我们自己的控制服务器上，就可以随意修改基站的配置了。</p>
<p>如果你准备使用 Magma 搭建核心网，可以先跳过这一步。Magma 自带一个 TR-069 服务器，可以给基站下发配置，而且 Helium Mobile 和 FreedomFi 的工程师已经给 Magma 添加了这款基站的支持，所以我们稍后把基站的控制服务器 <code>acs.freedomfi.com</code> 通过 DNS 劫持到 Magma 上就可以了。</p>
<p>如果你准备使用 Open5GS 或者其它不支持 TR-069 的软件搭建核心网，可以使用我的脚本模拟一个 TR-069 服务器，给基站下发开启 Web 管理界面的指令：</p>
<ol>
<li>从 <a href="https://github.com/xddxdd/freedomfi-cbrs-enable-webui" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/freedomfi-cbrs-enable-webui</a> 下载 <code>tr069.py</code> 脚本。</li>
<li>安装 Python 3，然后运行 <code>python3 tr069.py</code></li>
<li>修改你的路由器的 DNS 设置，把 <code>acs.freedomfi.com</code> 的 IP 劫持到运行 <code>tr069.py</code> 脚本的电脑 IP 上。我的路由器用的是 OpenWRT，可以在 Dnsmasq 配置页面中添加一条规则：<code>/acs.freedomfi.com/192.168.4.2</code></li>
<li>拿出基站，接上网线，插电开机。</li>
<li>稍等片刻，运行 <code>tr069.py</code> 脚本的窗口中会出现一大片 XML 输出，这些都是基站给服务器发送的指令。如果一直没收到请求，请检查 DNS 配置是否正确，以及电脑上有没有防火墙，是否开放了 8443 端口。</li>
<li>看到带有 <code>cwmp:SetParameterValuesResponse</code> 的输出，就代表 Web 管理界面开启成功了。完整输出应该类似：</li>
</ol>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Envelope</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:soap-env</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://schemas.xmlsoap.org/soap/envelope/"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:soap-enc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://schemas.xmlsoap.org/soap/encoding/"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:xsd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://www.w3.org/2001/XMLSchema"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:xsi</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"http://www.w3.org/2001/XMLSchema-instance"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xmlns:cwmp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"urn:dslforum-org:cwmp-1-0"</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Header</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">    &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:ID</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> soap-env:mustUnderstand</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"1"</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">null</span><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:ID</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Header</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Body</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">    &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:SetParameterValuesResponse</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">      &#x3C;</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">Status</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> xsi:type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#CE9178;--shiki-light:#0000FF">"xsd:int"</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">0</span><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">Status</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">    &#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">cwmp:SetParameterValuesResponse</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">  &#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Body</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span>
<span class="line"><span style="--shiki-dark:#808080;--shiki-light:#800000">&#x3C;/</span><span style="--shiki-dark:#569CD6;--shiki-light:#800000">soap-env:Envelope</span><span style="--shiki-dark:#808080;--shiki-light:#800000">></span></span></code></pre>
<p>开启管理界面后，就可以通过 HTTPS 访问基站的管理界面了，类似 <code>https://192.168.1.123/</code>。</p>
<p><picture><source srcset="/usr/uploads/202504/sercomm-login.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/sercomm-login.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/sercomm-login.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/sercomm-login.png" alt="室内基站登录界面"></picture></p>
<p>默认用户名密码是 <code>sc_femto</code> 和 <code>tsFid2wz</code>（<a href="https://discord.com/channels/404106811252408320/836735476659912754/1355330850232995861" rel="noopener noreferrer" target="_blank">来自 Helium Mobile 的 Discord</a>）</p>
<p><picture><source srcset="/usr/uploads/202504/sercomm-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/sercomm-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/sercomm-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/sercomm-status.png" alt="室内基站管理界面"></picture></p>
<h2 id="购买可编程-sim-卡">购买可编程 SIM 卡</h2>
<p>LTE 网络建成后，你还需要一批 SIM 卡，写入自己网络的配置，才可以让手机连上自己的网络。由于普通 SIM 卡的信息都在生产时直接写死了，你不能随便买 SIM 卡来用，必须用可编程的专用 SIM 卡。</p>
<p>在 Amazon、Aliexpress 等购物网站上搜索 <code>Programmable SIM</code> 可以找到这种卡，例如：<a href="https://www.amazon.com/s?k=Programmable+SIM" rel="noopener noreferrer" target="_blank">https://www.amazon.com/s?k=Programmable+SIM</a></p>
<p><picture><source srcset="/usr/uploads/202504/programmable-sim-card.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/programmable-sim-card.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/programmable-sim-card.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/programmable-sim-card.jpg" alt="可编程 SIM 卡外观"></picture></p>
<p>（图源：Amazon）</p>
<p>我在 Amazon 上花 $38.99 买了一套 SIM 卡，包括 5 张可编程 SIM 卡，一个写卡器，一个装了 Windows 写卡软件的 U 盘，和一个 Micro SIM/Nano SIM 转完整 SIM 卡大小的转换器。</p>
<h1 id="搭建-magma-核心网">搭建 Magma 核心网</h1>
<p>要搭建自己的 LTE 网络，我们首先需要一套核心网。LTE 核心网主要管理用户设备（例如手机）的认证信息，控制计费、流量限速等功能。</p>
<p>Magma 是 Meta（Facebook）公司开发的开源 4G/5G 核心网，在 Docker/Kubernetes 上运行，上可以快速横向扩展以支持大量移动网络流量，下可以跑在树莓派等低配设备上提供简单的网络服务。</p>
<p>由于我不需要 Kubernetes 复杂的容器调度功能，我选择简单的用 Docker 搭建 Magma 的各个组件。</p>
<blockquote>
<p>配置过程参考了以下资料：</p>
<ul>
<li>核心网（Orchestrator 和 NMS）部分：<a href="https://hackmd.io/@RaffieWinata/rJ5oHgk3a#1-Install-Orchestrator-and-NMS" rel="noopener noreferrer" target="_blank">[Study Note] How To Install Magma Core (Orchestrator)</a></li>
<li>核心网（Orchestrator 和 NMS）部分：<a href="https://learn.rakwireless.com/hc/en-us/articles/26476385758615-How-To-Configure-Magma-Orchestrator-NMS" rel="noopener noreferrer" target="_blank">How To Configure Magma Orchestrator &#x26; NMS - RakWireless</a></li>
<li>访问网关（Access Gateway）部分：<a href="https://magma.github.io/magma/docs/lte/deploy_install_docker" rel="noopener noreferrer" target="_blank">Install Docker-based Access Gateway on Ubuntu - Magma</a></li>
</ul>
</blockquote>
<h2 id="搭建-magma-核心网orchestrator-和-nms">搭建 Magma 核心网（Orchestrator 和 NMS）</h2>
<p>首先准备一个运行核心网的系统。我选择在 Proxmox VE 上开了个虚拟机。安装完成后系统服务和 Magma 总计占用 4GB 左右内存，所以虚拟机开 8GB 左右内存应该足够。</p>
<p>我安装的是 Ubuntu 24.04 系统，但是其它系统理论上也可以。</p>
<p>然后，安装 Docker 和 Docker-compose。</p>
<p>然后，执行以下操作：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 以下命令都假设你在 HOME 目录下操作</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 下载 Magma v1.8.0 源码，如果有更新版本可以自行替换版本号</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">git</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> clone</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://github.com/magma/magma.git</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magma</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">git</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> checkout</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> v1.8.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 生成核心网的 SSL 证书</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/secrets/certs</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/secrets/certs</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 此处 magma.test 可以替换成你自己的域名或者子域名，但因为我们生成的是自签名证书，域名不能开启 HSTS</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/orc8r/cloud/deploy/scripts/self_sign_certs.sh</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magma.test</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/orc8r/cloud/deploy/scripts/create_application_certs.sh</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magma.test</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 把 SSL 证书复制到 Magma Docker 容器需要的配置</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/.cache/test_certs/</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -r</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> *</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/.cache/test_certs/</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">chmod</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -R</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> +r</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/.cache/test_certs/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 构建调度器（Orchestrator）组件的 Docker 容器</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/orc8r/cloud/docker</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">python3</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> build.py</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --all</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 等待 Docker 镜像构建完成，大约需要 30 分钟</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 修改 docker-compose.yml 中的配置</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> docker-compose.yml</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 需要修改的项目：</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># - 如果你生成 SSL 证书时用的域名不是 magma.test，搜索 magma.test，替换成你自己的域名</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># - 给 `kibana` 和 `fluentd` 容器加上 `restart: always`，开机自启</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 启动调度器（Orchestrator）</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">python3</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> run.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 确认所有容器都已启动成功</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ps</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 除了 orc8r-test 容器以外，其它容器都应该在 Up 状态</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果有容器启动失败，用 `docker logs [容器名]` 查看日志并相应解决问题</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 修改 DNS 服务器的配置，将 magma.test（或者你自己的域名）以及所有子域名指向这台机器的 IP</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 例如我的 Dnsmasq 规则是：/magma.test/192.168.0.7</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 准备搭建 Web 管理界面（NMS）</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cd</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ~/magma/nms</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 修改 docker-compose.yml 中的配置</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> docker-compose.yml</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 需要修改的项目：</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># - 给所有容器加上 `restart: always`，开机自启</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 修改 docker/docker_ssl_proxy/proxy_ssl.conf 中一处新版 nginx 不再支持的配置</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> docker/docker_ssl_proxy/proxy_ssl.conf</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 删除 `listen 443;` 和 `ssl on;` 两行，替换成 `listen 443 ssl;`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 启动 Web 管理界面的 Docker 容器</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker-compose</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> up</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -d</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 等待 Docker 镜像构建完成，大约需要 20 分钟</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 确认所有容器都已启动成功</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ps</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 所有 nms 开头的容器都应该在 Up 状态</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果有容器启动失败，用 `docker logs [容器名]` 查看日志并相应解决问题</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 创建默认管理员</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> scripts/dev_setup.sh</span></span></code></pre>
<p>然后，在你本地的浏览器上访问 <a href="https://magma-test.magma.test" rel="noopener noreferrer" target="_blank">https://magma-test.magma.test</a> （或者 <code>magma-test.[你自己的域名]</code>），应该可以看到登录界面。如果显示地址未找到等错误，请确认域名是否正确解析。</p>
<p><picture><source srcset="/usr/uploads/202504/magma-login.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-login.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-login.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-login.png" alt="Magma 登录界面"></picture></p>
<p>输入默认用户名 <code>admin@magma.test</code> 和密码 <code>password1234</code> 登录系统。</p>
<p>在左侧 <code>Network</code> 标签页，添加一个网络，并填写以下内容：</p>
<ul>
<li>在 <code>Config</code> 标签页，<code>Network ID</code> 和 <code>Network Name</code> 可以随意填写。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-network.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-network.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-network.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-network.png" alt="Magma 添加网络界面"></picture></p>
<ul>
<li>在 <code>Epc</code> 标签页，将 MCC 修改成 <code>315</code>，MNC 修改成 <code>010</code>，TAC 修改成 <code>1</code>。MCC/MNC 是移动运营商的编号，例如 AT&#x26;T 的 MCC/MNC 是 <code>310/410</code>，T-Mobile 的 MCC/MNC 是 <code>310/260</code>。<code>315/010</code> 这一组 MCC/MNC 则是专门分配给 CBRS 网络用的编号，所有使用 CBRS 频段的移动网络都可以使用。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-network-epc.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-network-epc.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-network-epc.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-network-epc.png" alt="Magma 添加网络界面 Epc 标签页"></picture></p>
<ul>
<li>在 <code>Ran</code> 标签页，将 <code>Bandwidth</code> 修改成 20 MHz 以获得最快的网速。<code>Band Type</code> 选择 <code>TDD</code>，因为 LTE 48/5G n48 频段的模式都是 TDD 时分复用。</li>
<li>EARFCNDL 填写 <code>55540</code>，这代表 CBRS 频段内的 3580 MHz 频点，但实际上 CBRS 基站会使用从 SAS 分配到的频段，而不是这里的频率。</li>
<li>其它配置均保持默认即可。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-network-ran.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-network-ran.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-network-ran.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-network-ran.png" alt="Magma 添加网络界面 Ran 标签页"></picture></p>
<p>完成以上配置后，你就有了一个 LTE 核心网。但是你的基站不能直接连接到核心网上，而是需要另一个组件：访问网关（Access Gateway）。</p>
<h2 id="搭建-magma-访问网关access-gateway">搭建 Magma 访问网关（Access Gateway）</h2>
<p>Magma 的访问网关负责管理基站，并将基站的数据流量转发到互联网。注意 Magma 的核心网只管理用户信息，不处理数据流量，访问网关的流量也不会经过核心网。</p>
<p>首先准备一个运行访问网关的系统。这个系统需要配置两张网卡，其中 <code>eth0</code> 用于远程管理和连接核心网，<code>eth1</code> 用于连接基站。如果你用的是一台单独的电脑，后续就要把基站的网线插到 <code>eth1</code> 网卡上，Magma 会自动配置好 DHCP，让基站连上访问网关。但因为我是在 Proxmox VE 上开虚拟机，所以我选择把额外添加的 <code>eth1</code> 网卡放在一个 VLAN 中，然后在主路由器上也添加对应的 VLAN 和 IP。这样我在局域网中的任何机器上都可以 ping 通 <code>eth1</code> 的 IP，也就是基站可以插到我的主交换机的任何一个接口上。</p>
<p>这个系统必须安装 Ubuntu 20.04 系统，因为 Magma 访问网关安装时会修改很多系统配置，而这些修改步骤只支持 Ubuntu 20.04。</p>
<p>安装完成后系统服务和 Magma 总计占用 1GB 左右内存，所以虚拟机开 2-4GB 左右内存应该足够。</p>
<p>然后，安装 Docker 和 Docker-compose。</p>
<p>然后，执行以下操作：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 把核心网的 rootCA.pem 复制到访问网关上</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 在访问网关机器上运行：</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">mkdir</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -p</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /var/opt/magma/certs</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 在你的本地电脑上运行：</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">scp</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> root@[核心网机器]:~/magma/.cache/test_certs/rootCA.pem</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> .</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">scp</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> rootCA.pem</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> root@[访问网关机器]:/var/opt/magma/certs/rootCA.pem</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 创建连接核心网的配置文件，在访问网关机器上运行：</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果你的核心网域名不是 magma.test，对应替换</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cat</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;&#x3C; </span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /var/opt/magma/configs/control_proxy.yml</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">cloud_address: controller.magma.test</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">cloud_port: 7443</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">bootstrap_address: bootstrapper-controller.magma.test</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">bootstrap_port: 7444</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">fluentd_address: fluentd.magma.test</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">fluentd_port: 24224</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">rootca_cert: /var/opt/magma/certs/rootCA.pem</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 运行一键安装脚本，在访问网关机器上运行：</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">wget</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> https://github.com/magma/magma/raw/v1.8/lte/gateway/deploy/agw_install_docker.sh</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> agw_install_docker.sh</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 由于 Magma 官方的 GPG 证书过期，不出意外的话，第一次安装会失败。下面我们解决这个问题</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 解决方法来自 https://github.com/magma/magma/issues/15572</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 关闭 apt-get 的 GPG 校验</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "Acquire::AllowInsecureRepositories true;"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> > </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/etc/apt/apt.conf.d/99AllowInsecureRepositories</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "APT::Get::AllowUnauthenticated true;"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/etc/apt/apt.conf.d/99AllowInsecureRepositories</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">apt</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 删除有问题的步骤</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /opt/magma/lte/gateway/deploy/roles/magma_deploy/tasks/main.yml</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 删除 `Add unvalidated Apt signing key.` 和 `Add validated Apt signing key.` 两个步骤</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 修改安装脚本，跳过已经运行过的部分</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">nano</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> agw_install_docker.sh</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 把 `RERUN=0` 改成 `RERUN=1`，跳过已经运行过的部分</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 重新运行安装脚本</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">bash</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> agw_install_docker.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 不出意外，安装应该成功。重启机器</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">reboot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 按需修改 eth1 接口的 IP 地址配置</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cat</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> &#x3C;&#x3C; </span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> | </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">sudo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> tee</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /etc/netplan/70-secondary-itf.yaml</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">network:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ethernets:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    eth1:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      addresses:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      - 192.168.4.2/24</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      routes:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      - to: 0.0.0.0/0</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        via: 192.168.4.1</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        metric: 1000</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">      nameservers:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        addresses:</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        - 192.168.4.1</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">        search: []</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  version: 2</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">EOF</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">netplan</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> apply</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 确认所有容器都已启动成功</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ps</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> -a</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 除了 liagentd 容器以外，其它容器都应该在 Up 状态</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果有容器启动失败，用 `docker logs [容器名]` 查看日志并相应解决问题</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 获取访问网关的密钥，稍后连接核心网需要用到</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">docker</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> exec</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> magmad</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> show_gateway_info.py</span></span></code></pre>
<p>回到核心网的管理界面 <a href="https://magma-test.magma.test" rel="noopener noreferrer" target="_blank">https://magma-test.magma.test</a> （或者 <code>magma-test.[你自己的域名]</code>），进入左侧 <code>Equipment</code> 标签页，确认右上角选择了你之前创建的网络。</p>
<p>点击右上角的 <code>Add New</code> 按钮添加访问网关，并填写以下内容：</p>
<ul>
<li>在 <code>Config</code> 标签页，<code>Gateway Name</code> 和 <code>Gateway ID</code> 可以随意填写。</li>
<li>在 <code>Config</code> 标签页，<code>Hardware UUID</code> 填写你从访问网关上获取的 <code>Hardware ID</code>。</li>
<li>在 <code>Config</code> 标签页，<code>Challenge Key</code> 填写你从访问网关上获取的 <code>Challenge key</code>。</li>
<li>其它配置均保持默认即可。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-agw.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-agw.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-agw.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-agw.png" alt="Magma 添加访问网关界面"></picture></p>
<p>保存后稍等片刻，管理界面上应该会显示这个访问网关的状态 <code>Health</code> 为 <code>Good</code>。如果状态一直为 <code>Bad</code>，可以尝试重启访问网关，或者在访问网关上查询 DNS，确定 <code>magma.test</code>（或者你的域名）是否指向核心网。</p>
<p><picture><source srcset="/usr/uploads/202504/magma-agw-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-agw-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-agw-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-agw-status.png" alt="Magma 访问网关状态界面"></picture></p>
<h2 id="基站连接-magma-访问网关">基站连接 Magma 访问网关</h2>
<p>拿起你的 CBRS 基站，看一眼背面的标签，上面应该写着一个序列号，类似 <code>2112CW5012345</code>。</p>
<p>在核心网的管理界面，进入左侧 <code>Equipment</code> 标签，然后进入 <code>eNodeB</code> 标签。点击右上角的 <code>Add New</code> 按钮添加基站，并填写以下内容：</p>
<ul>
<li>在 <code>Config</code> 标签页，<code>Name</code> 可以随意填写。</li>
<li>在 <code>Config</code> 标签页，<code>Serial number</code> 填写基站标签上的序列号。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-enodeb.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-enodeb.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-enodeb.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-enodeb.png" alt="Magma 添加基站界面"></picture></p>
<ul>
<li>在 <code>Ran</code> 标签页，<strong>不要选择</strong><code>eNodeB Managed Externally</code>（禁止 Magma 管理基站）</li>
<li>在 <code>Ran</code> 标签页，<code>Device Class</code> 选择 <code>FreedomFi One</code>（对应 FreedomFi/Sercomm 的室内基站）</li>
<li>在 <code>Ran</code> 标签页，<code>Cell ID</code> 填写 <code>0</code>（如果你有多台基站，依次加一）</li>
<li>在 <code>Ran</code> 标签页，<code>Bandwidth</code> 选择 20 MHz 以获得最快的网速。</li>
<li>在 <code>Ran</code> 标签页，<code>PCI</code> 填写 <code>100</code>（如果你有多台基站，依次加一）</li>
<li>在 <code>Ran</code> 标签页，<code>TAC</code> 填写 <code>1</code></li>
<li>在 <code>Ran</code> 标签页，<code>Transmit</code> 选择 <code>Enabled</code>（启用）</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-1.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-1.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-1.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-enodeb-ran-1.png" alt="Magma 添加基站界面 Ran 标签页"></picture></p>
<p><picture><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-2.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-2.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-enodeb-ran-2.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-enodeb-ran-2.png" alt="Magma 添加基站界面 Ran 标签页"></picture></p>
<p>虽然我们在 Magma 上添加了基站，但因为基站设备默认连接 Helium Mobile 的服务器获取配置，它还是无法正常连上我们的访问网关。因此我们还需要把基站的控制服务器 <code>acs.freedomfi.com</code> 通过 DNS 劫持到 Magma 访问网关的 <code>eth1</code> IP 上。修改你的路由器的 DNS 设置，把 <code>acs.freedomfi.com</code> 的 IP 劫持到运行访问网关的机器 <code>eth1</code> IP 上。我的路由器用的是 OpenWRT，可以在 Dnsmasq 配置页面中添加一条规则：<code>/acs.freedomfi.com/192.168.4.2</code></p>
<p>然后，因为 Magma 访问网关的 TR-069 服务器端口号和 Helium Mobile 的不同，我们还需要在访问网关上修改端口号，和一些其它的配置。</p>
<p>在访问网关上 <code>nano /etc/magma/enodebd.yml</code>，做如下修改：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 把 tr069 下的 port 修改成 8443，以匹配 Helium Mobile 的控制服务器端口号</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">tr069</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  port</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658">8443</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 修改基站连接 SAS 服务器的配置，这里的配置对应连接到 Google SAS 的配置</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">sas</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 让基站自己连接 SAS 服务器，不经过 Magma 代理。Magma 代理 SAS 连接需要安装额外的组件，过于复杂</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  dp_mode</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">False</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # SAS 服务器地址，此处为 Google SAS</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_server_url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://sas.goog/v1.2/"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 你的 Google Cloud Project ID 可以在控制台主页看到：https://console.cloud.google.com</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_uid</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"[改成你自己的 Google Cloud Project ID]"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # A 代表室内，B 代表室外</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_category</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"A"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # GAA 代表最低优先级的 General Authorized Access（通用授权用户）</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_channel_type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"GAA"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # indoor 为室内，outdoor 为室外</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_location</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"indoor"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # FreedomFi/Sercomm 的室内基站用这个值，如果你的基站是其它品牌可能不同</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_cert_subject</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"/C=TW/O=Sercomm/OU=WInnForum CBSD Certificate/CN=P27-SCE4255W:%s"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 以下两项保持不变</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_icg_group_id</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">""</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">  sas_height_type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"AMSL"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 把 LTE 同步来源改成 FREE_RUNNING，否则 GPS 信号太差时，室内基站迟迟不发射信号</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">prim_src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"FREE_RUNNING"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 把你的基站序列号加到这里，可以开启基站的 Web 管理界面</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#800000">web_ui_enable_list</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">: [</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"2112CW5012345"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 其余配置保持不变即可</span></span></code></pre>
<p>保存配置文件后，重启整个访问网关系统。我测试时发现单独重启访问网关的单个 Docker 容器可能会造成奇怪的问题，例如基站死活连不上访问网关。直接重启可以解决大部分奇怪的问题。</p>
<p>稍等片刻，核心网管理界面上应该会显示这个基站的状态 <code>Health</code> 为 <code>Good</code>。如果状态一直为 <code>Bad</code>，可以尝试重启访问网关。</p>
<p><picture><source srcset="/usr/uploads/202504/magma-enodeb-status.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-enodeb-status.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-enodeb-status.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-enodeb-status.png" alt="Magma 基站状态界面"></picture></p>
<p>如果你把室内基站的序列号加入 <code>web_ui_enable_list</code> 开启了管理界面，此时就可以通过 HTTPS 访问基站的管理界面了，类似 <code>https://192.168.1.123/</code>。默认用户名密码是 <code>sc_femto</code> 和 <code>tsFid2wz</code>（<a href="https://discord.com/channels/404106811252408320/836735476659912754/1355330850232995861" rel="noopener noreferrer" target="_blank">来自 Helium Mobile 的 Discord</a>）</p>
<h2 id="基站连接-sas">基站连接 SAS</h2>
<p>此时基站已经连上了你的核心网，但由于它还没有连上 CBRS 的 SAS 系统（Spectrum Access System，频谱访问系统），没有获得频段授权，所以仍然不会发射 LTE 信号。</p>
<p>我们还需要注册一个 SAS 系统的账号，把自己的基站注册上去，才能让基站获得频段授权。</p>
<p>我用的是 <a href="https://cloud.google.com/products/spectrum-access-system" rel="noopener noreferrer" target="_blank">Google SAS</a>，由 Google Cloud 运行的 SAS 系统。Google SAS 是目前你能找到的注册最简单的 SAS 系统，其它厂商的 SAS 系统大都需要联系销售，签订企业级服务合同，才能使用。而且 Google SAS 的价格极其便宜，本文写作时，<a href="https://cloud.google.com/products/spectrum-access-system#pricing" rel="noopener noreferrer" target="_blank">室内基站的价格是每台每月 $2.64，室外基站的价格是每台每月 $13.15</a>。</p>
<p>你需要先注册一个 Google Cloud 账号，然后访问<a href="https://console.cloud.google.com/spectrum-access" rel="noopener noreferrer" target="_blank">控制台的 SAS 配置页面</a>按照如下步骤进行配置。</p>
<ol>
<li>确定你的经纬度。如果你用的是 Android 手机，可以从 Google Play 下载 <a href="https://play.google.com/store/apps/details?id=com.eclipsim.gpsstatus2" rel="noopener noreferrer" target="_blank">GPS Status &#x26; Toolbox</a> 软件查看你的经纬度。如果你用的是 iPhone，可以从自带的指南针查看经纬度。</li>
<li>在控制台上选择顶上的添加站点按钮（带有加号的按钮），在地图上随便点一个点。屏幕右侧会弹出一个侧边栏，让你输入基站的相关信息。</li>
</ol>
<p><picture><source srcset="/usr/uploads/202504/google-sas-add-button.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-add-button.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-add-button.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-add-button.png" alt="Google SAS 添加站点按钮"></picture></p>
<ol start="3">
<li>首先在右侧栏切换到第一个标签页（位置），输入你的正确的经纬度。不需要非常精准，基站本身也会上传自己的 GPS 位置。</li>
</ol>
<p><picture><source srcset="/usr/uploads/202504/google-sas-enter-location.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-enter-location.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-enter-location.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-enter-location.png" alt="Google SAS 输入经纬度界面"></picture></p>
<ol start="4">
<li>然后切换到第二个标签页（基站信息），填写以下内容：
<ul>
<li><code>CBSD category</code> 根据实际情况，室内基站选择 <code>A</code>，室外基站选择 <code>B</code>。</li>
<li><code>FCC ID</code> 填写基站机身标签上的 FCC ID。</li>
<li><code>Serial number</code> 填写基站机身标签上的序列号。</li>
<li><code>Device type</code> 根据实际情况选择 <code>Indoor</code>（室内）或者 <code>Outdoor</code>（室外）。</li>
<li><code>Air Interface</code> 下的 <code>Radio technology</code> 选择 <code>E_UTRA</code>（对应 LTE）。</li>
<li><code>Antenna</code> 下的 <code>Height</code> 一项，填写你的 GPS 海拔高度。</li>
<li><code>Antenna</code> 下的 <code>Height type</code> 一项，选择 <code>AMSL</code>（高度以海平面为参考）。</li>
<li><code>Antenna</code> 下的 <code>Azimuth</code> 一项，输入基站面向的指南针朝向。
<ul>
<li>如果是 FreedomFi/Sercomm 室内基站，由于这款基站的天线是 360 度发射的，方向无关紧要，则可以直接填写 <code>0</code>。</li>
</ul>
</li>
<li><code>Antenna</code> 下的 <code>Mech downtilt</code> 一项，输入基站向下倾斜的度数，如果没有倾斜可以直接填写 <code>0</code>。</li>
<li><code>Antenna</code> 下的 <code>Horiz accuracy</code> 一项，输入 <code>10</code>。</li>
<li><code>Antenna</code> 下的 <code>Vert accuracy</code> 一项，输入 <code>3</code>。</li>
</ul>
</li>
<li>你还需要根据基站的数据手册填写以下内容。如果你用的是 FreedomFi/Sercomm 室内基站，可以直接抄我的配置：
<ul>
<li><code>Max EIRP</code> 一项，FreedomFi/Sercomm 室内基站此处填写 <code>29</code>。</li>
<li><code>Antenna</code> 下的 <code>Max gain</code> 一项，FreedomFi/Sercomm 室内基站此处填写 <code>5</code>。</li>
<li><code>Antenna</code> 下的 <code>Beamwidth</code> 一项，FreedomFi/Sercomm 室内基站此处填写 <code>360</code>。</li>
<li><code>Antenna</code> 下的 <code>Azimuth</code> 一项，FreedomFi/Sercomm 室内基站此处填写 <code>360</code>。</li>
<li><code>Measurement capability</code> 下，对于 FreedomFi/Sercomm 室内基站，<code>RX w/ grant</code> 不要打勾，<code>RX w/o grant</code> 需要打勾。</li>
<li><code>Air Interface</code> 下的 <code>Supported spec</code>，FreedomFi/Sercomm 室内基站此处填写 <code>FFS</code>。</li>
</ul>
</li>
<li>其余配置都可以空着不写，点击 <code>Ready for CPI</code>。</li>
<li>此时页面上会显示「The new configuration must be signed by a CPI before the CBSD registers with the SAS.」（基站再次注册到 SAS 之前，需要认证安装人员 CPI 审批配置）。如果你装的是室内基站，不用管它。但如果你装的是室外基站，就要找一个认证安装人员来审批配置了，或者<a href="https://www.coursera.org/learn/google-cbrs-cpi-training" rel="noopener noreferrer" target="_blank">自己花 $600 考一个授权安装人员的证</a>。</li>
</ol>
<p><picture><source srcset="/usr/uploads/202504/google-sas-radio-info-1.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-radio-info-1.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-radio-info-1.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-radio-info-1.png" alt="Google SAS 基站信息界面 1"></picture></p>
<p><picture><source srcset="/usr/uploads/202504/google-sas-radio-info-2.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/google-sas-radio-info-2.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/google-sas-radio-info-2.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/google-sas-radio-info-2.png" alt="Google SAS 基站信息界面 2"></picture></p>
<p>重启以下基站：把你的基站电源拔掉，等几秒再插上。等几分钟后基站启动完成、GPS 定位完成后，Google SAS 配置页面上应该会出现一些标黄的 <code>Active config value</code>，代表这些配置和你输入的有偏差，不用管它们。</p>
<p>切换到 <code>Status</code> 标签页查看设备状态，应该可以看到基站状态 <code>Authorized</code>，以及对应频段分配了。</p>
<p>此时看一下基站的指示灯，最左侧的 LTE 状态指示灯应该是蓝灯常亮，代表此时已经在发射 LTE 信号。到这里，基站的配置就全部完成了。</p>
<p>拿出你的手机，随便选择一张 SIM 卡，关闭「自动选择网络」选项，手机就会自动搜索附近的移动网络。如果你的手机支持 LTE 48 频段，你应该就能看到一个名为 315010 的网络，这就是你的基站发射的信号。</p>
<h1 id="写-sim-卡">写 SIM 卡</h1>
<p>有了 LTE 网络，下一步就是向 SIM 卡中写入自己网络的认证信息，从而让手机可以连上自己的网络。</p>
<p>我购买可编程 SIM 卡时，商家提供了我这款 SIM 卡适用的 Windows 写卡软件。我试过在 Linux 下使用 pySim 写卡，但是写出来的 SIM 卡无法正常连接网络认证，因此这一步我还是使用 Windows 进行写卡。</p>
<p>把 SIM 卡写卡器插到电脑上，并取出一张可编程 SIM 卡插到写卡器上。</p>
<p>打开写卡软件，先点击右上角的 <code>Read Card</code> 尝试读取卡中的信息，以确保写卡器连接正常。</p>
<p>随后，在右侧 <code>LTE/WCDMA Paramater</code> 中输入如下信息：</p>
<ul>
<li>选择 <code>IMSI15</code>，输入 <code>3150109999XXXXX</code>，其中前十位固定，后五位可以自行编号。
<ul>
<li>前六位 <code>315010</code> 是 CBRS 网络的 MCC/MNC。</li>
<li>接下来的四位 <code>9999</code> 是 CBRS 网络中的 IBN（IMSI 区块编号），<code>9999</code> 是 CBRS 预留的测试编号。完整的 IBN 分配表可以在 <a href="https://imsiadmin.com/assignments/cbrs/" rel="noopener noreferrer" target="_blank">CBRS Assignments</a> 网页上查到。</li>
<li>最后五位可以是任意数字编号。</li>
</ul>
</li>
<li>确保 <code>AD</code> 输入框的值是 <code>00000003</code>。如果这个值不同，点击右侧的编辑按钮，确保 MNC 长度设置为 3。</li>
<li>在 <code>KI</code> 和 <code>OPC</code> 框中各输入一个随机的 32 字符长的 16 进制字符串。这两个字符串是 SIM 卡的认证密钥，一旦写入 SIM 卡中就无法再被读出来。
<ul>
<li>备份好 <code>KI</code> 和 <code>OPC</code>，稍后我们需要把它们输入到 Magma 核心网管理页面上。</li>
</ul>
</li>
<li>点击 <code>PLMNwAct</code> 右侧的 <code>Auto</code> 按钮，左侧的四个输入框应该会自动填入如图所示的值。</li>
<li>把 <code>SPN</code> 修改成你想要在手机上显示的运营商名，例如 <code>Lan Tian Mobile</code>.</li>
</ul>
<p>最后，点击右上角 <code>Write Card</code> 写卡。</p>
<p>如果你想多写几张 SIM 卡，可以如法炮制，但是必须保证所有卡的 <code>IMSI15</code>，<code>KI</code>，<code>OPC</code> 这三个值不同。</p>
<p><picture><source srcset="/usr/uploads/202504/write-sim-card.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/write-sim-card.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/write-sim-card.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/write-sim-card.jpg" alt="写卡软件界面"></picture></p>
<h2 id="创建网络套餐">创建网络套餐</h2>
<p>回到核心网的管理界面 <a href="https://magma-test.magma.test" rel="noopener noreferrer" target="_blank">https://magma-test.magma.test</a> （或者 <code>magma-test.[你自己的域名]</code>），进入左侧 <code>Traffic</code> 标签页，再进入顶部 <code>APNs</code> 标签页，点击 <code>Create New APN</code> 创建一个 APN。</p>
<ul>
<li><code>APN ID</code> 输入 <code>internet</code>。</li>
<li><code>Max Required Bandwidth</code>，上传下载各输入 <code>1000000000</code>（1 Gbps，远超 LTE 能提供的速度）。</li>
<li><code>PDN Type</code> 选择 <code>IPV4V6</code>。</li>
<li>其它配置均保持默认即可。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-apn.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-apn.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-apn.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-apn.png" alt="Magma 添加 APN 界面"></picture></p>
<p>然后点击顶部的 <code>Data Plans</code> 标签页，点击 <code>Create New Data Plan</code>。</p>
<ul>
<li><code>Data Plan ID</code> 可以随意填写。</li>
<li><code>Download</code> 和 <code>Upload</code> 都保持 Unlimited 即可。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-data-plan.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-data-plan.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-data-plan.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-data-plan.png" alt="Magma 添加网络套餐界面"></picture></p>
<p>此时，网络套餐已经创建完成，可以开始注册 SIM 卡了。</p>
<h2 id="注册-sim-卡">注册 SIM 卡</h2>
<p>进入管理界面左侧 <code>Subscriber</code> 标签页，点击 <code>Manage Subscribers</code> - <code>Add Subscribers</code>。</p>
<p>对于你要添加的每张 SIM 卡，点击右上角的 <code>Add New Row</code>，然后输入 SIM 卡的信息：</p>
<ul>
<li><code>IMSI</code> 一栏先输入 <code>IMSI</code> 四个字母，再输入写卡时的 <code>IMSI15</code>。例如：<code>IMSI315010999925470</code></li>
<li><code>Subscriber Name</code> 可以随意填写。</li>
<li><code>Auth Key</code> 填写写卡时的 <code>KI</code>。</li>
<li><code>Auth OPC</code> 填写写卡时的 <code>OPC</code>。</li>
<li><code>Service</code> 选择 <code>ACTIVE</code>，启用 SIM 卡。</li>
<li><code>Data Plan</code> 选择你刚才创建的套餐。</li>
<li><code>Active APNs</code> 选择你刚才创建的 APN。</li>
<li>点击右侧对勾保存。</li>
</ul>
<p><picture><source srcset="/usr/uploads/202504/magma-add-sim.png.webp" type="image/webp"><source srcset="/usr/uploads/202504/magma-add-sim.png.avif" type="image/avif"><source srcset="/usr/uploads/202504/magma-add-sim.png.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/magma-add-sim.png" alt="Magma 添加 SIM 卡界面"></picture></p>
<p>此时，你的 SIM 卡就成功注册到 Magma 核心网上了，稍等片刻数据同步后就可使用。</p>
<h1 id="插手机联网">插手机联网</h1>
<p>把 SIM 卡插到你的手机上。我的测试机是 iPhone SE 2022。</p>
<p>插入 SIM 卡后稍等片刻，iPhone 就连上了我的基站，左上角信号满格，网络显示为 <code>315 010</code>，即 CBRS 的 MCC/MNC：</p>
<p><picture><source srcset="/usr/uploads/202504/iphone-non-public-network-zh.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/iphone-non-public-network-zh.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/iphone-non-public-network-zh.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/iphone-non-public-network-zh.jpg" alt="iPhone 网络状态"></picture></p>
<p>使用 Speedtest 进行测速，可以跑到下行 100 Mbps，上行 10 Mbps：</p>
<p><picture><source srcset="/usr/uploads/202504/iphone-speedtest.jpg.webp" type="image/webp"><source srcset="/usr/uploads/202504/iphone-speedtest.jpg.avif" type="image/avif"><source srcset="/usr/uploads/202504/iphone-speedtest.jpg.jxl" type="image/jxl"><img src="https://lantian.pub/usr/uploads/202504/iphone-speedtest.jpg" alt="iPhone 测速"></picture></p>
<p>我还试了一个 Android 手机，设备是 Motorola Edge+ 2023。虽然这个手机能搜索到我的 LTE 网络，但无法正常连接，即使是用 iPhone 上试过的 SIM 卡也不行，还需要继续研究。</p>
<h1 id="总结">总结</h1>
<p>我搭建这套 LTE 网络的所有设备及总花费（不计消费税）如下：</p>
<ul>
<li>用来开虚拟机的 Proxmox VE 主机，是我的现有设备 $0</li>
<li>FreedomFi/Sercomm 室内基站设备，设备 $49 + 运费 $12.3 = $61.3</li>
<li>可编程 SIM 卡及写卡器，$38.99</li>
<li>Google SAS $2.64/月，计一个月</li>
<li>总价 $102.93</li>
</ul>
<p>这个价格对于 Homelabber 来说根本不算贵，远低于传统上认为的搭建 LTE 网络需要几百上千刀的花销，并且所有设备和服务都可以简单的买到。</p>]]></content>
        <published>2025-04-06T02:56:34.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building Custom Android Kernel with Nix]]></title>
        <id>https://lantian.pub/en/article/modify-computer/build-custom-android-kernel-with-nix.lantian/</id>
        <link href="https://lantian.pub/en/article/modify-computer/build-custom-android-kernel-with-nix.lantian/"/>
        <updated>2025-02-10T00:44:06.000Z</updated>
        <content type="html"><![CDATA[<h1 id="preface">Preface</h1>
<p>The mobile phone I'm using today is Motorola Edge+ 2023, an Android phone. To
better customize my phone's functionalities, I unlocked its bootloader, and
obtained root privileges, in order to install LSPosed and various LSPosed based
plugins.</p>
<p>The root mechanism I'm using is <a href="https://kernelsu.org/" rel="noopener noreferrer" target="_blank">KernelSU</a>, which works
by modifying the Linux kernel to grant and only grant root permissions to
certain apps. Although KernelSU provides official GKI kernel images that work on
most phones, I also flashed LineageOS onto my phone, which is not compatible
with GKI images. Therefore, I have to compile my own kernel.</p>
<p>Since modifying the kernel's binary image is difficult, we usually obtain the
kernel source code under the GPLv2 license from the phone manufacturer, modify
it according to
<a href="https://kernelsu.org/guide/how-to-integrate-for-non-gki.html" rel="noopener noreferrer" target="_blank">KernelSU's official guide</a>,
and compile it into a full kernel.</p>
<blockquote>
<p>Note: There is a new root mechanism <a href="https://apatch.dev/" rel="noopener noreferrer" target="_blank">APatch</a> that works
by modifying kernel binary image directly, and achieves similar effects to
KernelSU. I never use APatch, but it's worth a try if you don't want to
compile your own kernel.</p>
</blockquote>
<p>Since KernelSU is widely used, some developers created GitHub Actions Workflows,
such as <a href="https://github.com/xiaoleGun/KernelSU_Action" rel="noopener noreferrer" target="_blank">https://github.com/xiaoleGun/KernelSU_Action</a>. They can automatically
patch the kernel source code and compile the kernel. However, as I tried some of
these workflows, I found a few problems:</p>
<ul>
<li>These workflows will install multiple compilers alongside each other,
including the GCC that comes with GitHub Actions, Android-specific
<a href="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/" rel="noopener noreferrer" target="_blank">ARM32 GCC</a>
and
<a href="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9" rel="noopener noreferrer" target="_blank">ARM64 GCC</a>
provided by Google, and
<a href="https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/" rel="noopener noreferrer" target="_blank">Clang</a>.
If the compilation parameters are not set correctly, different parts of the
kernel may be compiled with different compilers, creating a kernel that is
unstable or wouldn't boot at all.</li>
<li>These workflows only run on GitHub Actions and are difficult to debug locally.</li>
<li>These workflows usually run on schedule or are manually triggered by users. If
they run on schedule, they recompile kernels even if there are no source code
changes, wasting compute resources. If they are manually triggered, users may
not get the latest kernel updates in time.</li>
</ul>
<p>Since I have been using NixOS recently, I naturally thought of using the Nix
package manager to solve these problems:</p>
<ul>
<li>Nix creates an isolated environment when building packages, with only the
compilers I specified. This prevents issues caused by mixing compilers.</li>
<li>Nix package manager can run either locally on Linux, or on GitHub Actions.
Since it creates the same isolated environment anywhere, I can test the flow
locally first, and then upload it to GitHub, and confidently have Actions
automatically compile updated kernels.</li>
<li>Nix also records all source code versions (actually source code SHA256s) and
the compilation commands when building packages. If neither the source code
nor the compilation command changes, Nix can reuse the last compilation
results without repeating the work.</li>
</ul>
<p>Therefore, I created a set of Nix-based scripts (actually Nix Derivations), to
compile the kernel for my phone.</p>
<h1 id="usage">Usage</h1>
<p>I uploaded the script to GitHub:
<a href="https://github.com/xddxdd/nix-kernelsu-builder" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder</a></p>
<p>This script can automatically apply KernelSU and SusFS patches to your kernel
source code, compile it, and generate an AnyKernel-based package you can flash
in Recovery.</p>
<p>After installing the Nix package manager, you can fork the repository, modify
<code>kernel.nix</code> to contain kernel of your phone, and build the kernel with
<code>nix build .#[Kernel name]</code>. The configuration details are listed in the README
of the repo.</p>
<p>If you're using <a href="https://flake.parts/" rel="noopener noreferrer" target="_blank">Flake.parts</a>, you can also use my repo as
a Flake.parts module:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    flake-parts</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"github:hercules-ci/flake-parts"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    nix-kernelsu-builder</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"github:xddxdd/nix-kernelsu-builder"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  outputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    { </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">flake-parts</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, ... }@</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    flake-parts</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkFlake</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">inherit</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; } {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      imports</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">        inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">nix-kernelsu-builder</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">flakeModules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">default</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      systems</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"x86_64-linux"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      perSystem</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        { </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, ... }:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          kernelsu</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">            # Add your own kernel definition here</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">            example-kernel</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              anyKernelVariant</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"kernelsu"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              clangVersion</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"latest"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">variant</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"next"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">                enable</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">true</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">                src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">path/to/sufs/source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">                kernelsuPatch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./patches/susfs-for-kernelsu-next.patch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">              };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelDefconfigs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "gki_defconfig"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/kalama_GKI.config"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/ext_config/moto-kalama.config"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/ext_config/moto-kalama-gki.config"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/ext_config/moto-kalama-rtwo.config"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">              ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelImageName</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Image"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelMakeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "KCFLAGS=</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">-w</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "KCPPFLAGS=</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">-w</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">              ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelSrc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">path/to/kernel/source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">            };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">          };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h1 id="key-details">Key Details</h1>
<p>Next, I wll explain some key parts of the compilation scripts.</p>
<h2 id="preparing-a-compiler">Preparing a Compiler</h2>
<p>The first thing to prepare for compiling kernel is to get a compiler. The usual
compiler for Android kernels is Clang, but the kernel for some older devices
might be too old for Clang, and GCC must be used in this case.</p>
<p>Clang compiler is easy to get. Nixpkgs already has Clang packaged in it, and you
can run <code>nix run nixpkgs#clang -- --version</code> to see the latest Clang version:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># nix run nixpkgs#clang -- --version</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">clang</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> version</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 19.1.6</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">Target:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> x86_64-unknown-linux-gnu</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">Thread</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> model:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> posix</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">InstalledDir:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /nix/store/2d1r5kvz7plg24bwb316972knqmiyf2p-clang-19.1.6/bin</span></span></code></pre>
<p>Clang itself supports cross compilation, and can produce ARM32 and ARM64
binaries directly on x86_64 devices, without additional toolchains. Therefore,
the Clang compiler in Nixpkgs can be used directly.</p>
<p>Things get more complicated with GCC for older kernels. Nixpkgs already removed
older GCCs, and as of now (Feb 2025) the oldest GCC in Nixpkgs is 9.5.0. In
addition, GCC by default only supports compiling programs to the same platform.
A special GCC and toolchains is needed for cross compiling ARM32/ARM64 kernels.</p>
<p>Here I decided to take a short cut: I directly packaged Google's GCC compiler
into Nix packages, so that they can be provided to the compilation environment.
Although Google has deleted the older GCC compilers from their servers, there
are backups available on GitHub</p>
<p>Here is the package for ARM32 GCC:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> rec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  pname</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"gcc-arm-linux-androideabi"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  version</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"3ecb542702c2ca0e502533c3f6d02f0f06f584f1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    owner</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"KudProject"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    repo</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"arm-linux-androideabi-4.9"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    rev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"3ecb542702c2ca0e502533c3f6d02f0f06f584f1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    fetchSubmodules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    sha256</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"sha256-5aF2Pl+h6J8/5TfQf2ojp3FCnoKakWH6KBCkWdy5ho8="</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  buildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  installPhase</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    mkdir -p $out</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r * $out/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  meta</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">xddxdd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    license</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">licenses</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">gpl3Plus</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ARM32 GCC for building Android kernels"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    platforms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"x86_64-linux"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>And here is the package for ARM64 GCC:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> rec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  pname</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"gcc-aarch64-linux-android"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  version</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5797d7f622321e734558bd3372a9ab5ad6e6a48e"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    owner</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"kindle4jerry"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    repo</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"aarch64-linux-android-4.9-bakup"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    rev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5797d7f622321e734558bd3372a9ab5ad6e6a48e"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    fetchSubmodules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    sha256</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"sha256-ZrQmFyiDOKg+qcgdpZqtz+LgDDaao2W27kdZZ2As8XU="</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  buildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  installPhase</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    mkdir -p $out</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r * $out/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  meta</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">xddxdd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    license</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">licenses</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">gpl3Plus</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ARM64 GCC for building Android kernels"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    platforms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"x86_64-linux"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="obtain-kernel-and-kernelsu-sources">Obtain Kernel and KernelSU Sources</h2>
<p>With the compiler ready, the next step is to obtain source code for both the
kernel and KernelSU. Since I'm using LineageOS, I can directly download kernel
source code from LineageOS's GitHub repository:
<a href="https://github.com/LineageOS/android_kernel_motorola_sm8550" rel="noopener noreferrer" target="_blank">https://github.com/LineageOS/android_kernel_motorola_sm8550</a></p>
<blockquote>
<p>You can also look for kernel source code from the manufacturer's website.
Since the Linux kernel is licensed under GPLv2, all phone manufacturers must
open source their modified kernel source code.</p>
</blockquote>
<p>In the Nix package manager, you can use <code>fetchFromGitHub</code> to download kernel
source code from GitHub:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  owner</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"LineageOS"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  repo</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"android_kernel_motorola_sm8550"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  rev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"1bdeb4f5c8d2b98ef5f2bedaa5d704032dffd676"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  fetchSubmodules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  sha256</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"sha256-ZK/DH5N5LdkLe48cANESjw1x74aXoZLFoMAwEDvzEk4="</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span><span style="--shiki-dark:#F44747;--shiki-light:#CD3131">;</span></span></code></pre>
<p>But this gives you the kernel source code at the commit specified by <code>rev</code>
argument, with no automatic updates. To fix this, we can use
<a href="https://github.com/berberman/nvfetcher" rel="noopener noreferrer" target="_blank">Nvfetcher</a> to automatically get the
latest commit. First create a <code>nvfetcher.toml</code> file:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[linux-moto-rtwo-lineageos-22_1]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/LineageOS/android_kernel_motorola_sm8550.git"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.branch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"lineage-22.1"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"LineageOS/android_kernel_motorola_sm8550"</span></span></code></pre>
<p>And then run Nvfetcher: <code>nix run github:berberman/nvfetcher</code></p>
<p>Nvfetcher will download the latest commit based on your configuration, and write
it to <code>_sources/generated.nix</code>. Now you can use the kernel source code from this
file:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  sources</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">callPackage</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ../_sources/generated.nix</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { };</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  sources</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">linux-moto-rtwo-lineageos-22_1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span></span></code></pre>
<p>We can use the same approach for KernelSU, but since KernelSU only supports GKI
kernels starting from 1.0, we can only use the last version 0.9.5 still has
support for other kernels:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># nvfetcher.toml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-stable]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.manual</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"v0.9.5"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/tiann/KernelSU.git"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># We also need to get the revision code (commit count). For 0.9.5 just hardcode it</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-stable-revision-code]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.manual</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"11872"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Download URL doesn't matter, we only need the version code</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://example.com"</span></span></code></pre>
<p>But now there is a KernelSU Fork
<a href="https://github.com/rifsxd/KernelSU-Next" rel="noopener noreferrer" target="_blank">KernelSU-Next</a> that supports both GKI
and non-GKI kernels, so we can use it for the latest features:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># nvfetcher.toml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-next]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"rifsxd/KernelSU-Next"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/rifsxd/KernelSU-Next.git"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Extract commit count from the manager APK filename released by KernelSU-Next</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-next-revision-code]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.webpage</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://api.github.com/repos/rifsxd/KernelSU-Next/releases?per_page=1"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.regex</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"download</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/v[0-9</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">._]+</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/KernelSU[^</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">]*_([0-9]+)-release</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.apk"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Download URL doesn't matter, we only need the version code</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://example.com"</span></span></code></pre>
<h2 id="patch-kernel-source-code">Patch Kernel Source Code</h2>
<p>With kernel source code and KernelSU ready, the next step is to follow
<a href="https://kernelsu.org/guide/how-to-integrate-for-non-gki.html" rel="noopener noreferrer" target="_blank">KernelSU's official guide</a>
to modify the kernel. What I did is just converting the steps into Bash scripts
and put them in the Nix files.</p>
<p>The only thing worth mentioning is that KernelSU will try to obtain the commit
count with Git, which is the version number you see in KernelSU manager. But
because of a limitation by Nix package manager, there is no Git-related
information in the downloaded source code. Therefore, we need to modify
KernelSU's scripts to use the commit count we obtained earlier:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Create a fake git command to prevent "command not found" errors</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  fakeGit</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">writeShellScriptBin</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "git"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    exit 0</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    fakeGit</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  postPatch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    export HOME=$(pwd)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Copy KernelSU to the kernel source folder</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    chmod -R +w </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Override KernelSU version and prevent it from getting version from Git</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/ version:/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/KSU_GIT_VERSION not defined/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "s|ccflags-y += -DKSU_VERSION=|ccflags-y += -DKSU_VERSION=\"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">revision</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">\"\n#|g" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Replace shebangs like #!/bin/sh in compilation scripts to paths in isolated environment</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patchShebangs .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Call KernelSU's script to apply patches</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    bash </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/setup.sh</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>The full source code can be found at
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix</a>.</p>
<h2 id="optional-susfs-patches">(Optional) SusFS Patches</h2>
<p><a href="https://gitlab.com/simonpunk/susfs4ksu" rel="noopener noreferrer" target="_blank">SusFS</a> is an additional set of kernel
patches. It hides certain system file changes after obtaining root permission,
and make them only visible to apps with root permission and the system itself,
making it difficult for apps to detect root existence and refuse to start.</p>
<p>Again, following <a href="https://gitlab.com/simonpunk/susfs4ksu" rel="noopener noreferrer" target="_blank">SusFS's README</a> is
enough:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  postPatch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    export HOME=$(pwd)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Copy KernelSU to the kernel source folder</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    chmod -R +w </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Override KernelSU version and prevent it from getting version from Git</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/ version:/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/KSU_GIT_VERSION not defined/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "s|ccflags-y += -DKSU_VERSION=|ccflags-y += -DKSU_VERSION=\"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">revision</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">\"\n#|g" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Copy SusFS to the kernel source folder</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel_patches/fs/* fs/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel_patches/include/linux/* include/linux/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    chmod -R +w fs include/linux</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Apply SusFS patches to the kernel</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patch -p1 &#x3C; </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelPatch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Apply SusFS patches to KernelSU</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    pushd </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patch -p1 &#x3C; </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelsuPatch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    popd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Replace shebangs like #!/bin/sh in compilation scripts to paths in isolated environment</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patchShebangs .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # Call KernelSU's script to apply patches</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    bash </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/setup.sh</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>The full source code can be found at
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix</a>.</p>
<h2 id="enable-kernelsu-related-options">Enable KernelSU Related Options</h2>
<p>After adding KernelSU patches, we als need to enable the relevant options in
<code>defconfig</code>, so that we make sure KernelSU functionalities are actually added to
the compiled kernel:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Specify path to defconfig file</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">export</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> CFG_PATH</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">/${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}/</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">configs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">/${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">defconfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If KernelSU is enabled</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_MODULES=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KPROBES=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_HAVE_KPROBES=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KPROBE_EVENTS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_OVERLAY_FS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># If SusFS is enabled</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_PATH=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_KSTAT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_TRY_UMOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SPOOF_UNAME=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_ENABLE_LOG=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_SU=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_TMPFS_XATTR=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span></code></pre>
<p>The full command can be found at
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/kernel-config-cmd.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/kernel-config-cmd.nix</a>.</p>
<h2 id="compiling-the-kernel">Compiling the Kernel</h2>
<p>Next step is to compile the kernel image based on the patched source code.</p>
<p>If you're using GCC as the compiler, you will need to add the Google-provided
compilers to the compilation environment, and specify the compiler prefix in the
flags:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  gcc-aarch64-linux-android</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">callPackage</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ../pkgs/gcc-aarch64-linux-android.nix</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  gcc-arm-linux-androideabi</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">callPackage</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ../pkgs/gcc-arm-linux-androideabi.nix</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Passed to make command later</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  finalMakeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "ARCH=</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CROSS_COMPILE=aarch64-linux-android-"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CROSS_COMPILE_ARM32=arm-linux-androideabi-"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "O=$out"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    gcc-aarch64-linux-android</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    gcc-arm-linux-androideabi</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>The full command can be found at
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-gcc.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-gcc.nix</a>.</p>
<p>If you're using Clang as the compiler, you can directly use the Clang <code>stdenv</code>
in Nixpkgs, and specify using LLVM and <code>lld</code> in compilation flags:</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Passed to make command later</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  finalMakeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "ARCH=</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CC=clang"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "O=$out"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "LD=ld.lld"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "LLVM=1"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "LLVM_IAS=1"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CLANG_TRIPLE=aarch64-linux-gnu-"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ] ++ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">makeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # Use user-specified Clang/LLVM version</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  usedLLVMPackages</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"llvmPackages_</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">toString</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> clangVersion</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Use Clang/LLVM stdenv which comes with Clang/LLVM toolchains</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">usedLLVMPackages</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # Add ld.lld command</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    usedLLVMPackages</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">bintools</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>The full command can be found at
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-clang.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-clang.nix</a>.</p>
<h2 id="generating-anykernel-flashable-package">Generating AnyKernel Flashable Package</h2>
<p><a href="https://github.com/osm0sis/AnyKernel3" rel="noopener noreferrer" target="_blank">AnyKernel</a> is an Android flashable
package template that can flash the given kernel image into the phone. One
advantage of AnyKernel is that it only modifies the kernel image, while leaving
other startup commands in Initramfs intact, including startup commands of the
Android system itself and Magisk (if installed).</p>
<p>Using AnyKernel itself is very simple: Just modify the parameters in
<code>anykernel.sh</code> based on your phone's situation, and package the kernel files
along with AnyKernel files into a <code>zip</code> compressed archive.</p>
<p>The only thing to note is that the original AnyKernel only supports non-GKI
devices, and will fail on GKI devices. The KernelSU team provides a
<a href="https://github.com/Kernel-SU/AnyKernel3" rel="noopener noreferrer" target="_blank">modified AnyKernel</a> that is the exact
opposite: It only supports GKI devices, and will fail on non-GKI devices. Use
the one according to your need.</p>
<p>I added both AnyKernel variants to <code>nvfetcher.toml</code> to be used later"</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[anykernel-kernelsu]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/Kernel-SU/AnyKernel3.git"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Kernel-SU/AnyKernel3"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[anykernel-osm0sis]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/osm0sis/AnyKernel3.git"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"osm0sis/AnyKernel3"</span></span></code></pre>
<p>The full packaging code can be found at
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-anykernel-zip.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-anykernel-zip.nix</a>.</p>
<h2 id="optional-generating-bootimg">(Optional) Generating boot.img</h2>
<p>If you can't or don't want to use AnyKernel, such as if your device doesn't have
a third party recovery, you can find a <code>boot.img</code> for your device, replace the
kernel in it, and leave the other parts intact. This can achieve the same effect
as if you used AnyKernel.</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Record parameters of the original boot.img</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">IMG_FORMAT</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=$(</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">unpack_bootimg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --boot_img</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">bootImg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">} </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">--format</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> mkbootimg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "Image format: </span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$IMG_FORMAT</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Unpack boot.img</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">unpack_bootimg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --boot_img</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">bootImg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Replace the kernel with the new one we compiled</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernel</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/arch/</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/boot/</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelImageName</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">} </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">out/kernel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># Repackage boot.img with the original parameters and the new kernel</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">eval</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "mkbootimg </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$IMG_FORMAT</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -o </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$out</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/boot.img"</span></span></code></pre>
<p>The full packaging code can be found at
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-boot-img.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-boot-img.nix</a>.</p>]]></content>
        <published>2025-02-10T00:44:06.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 Nix 编译自定义 Android 内核]]></title>
        <id>https://lantian.pub/article/modify-computer/build-custom-android-kernel-with-nix.lantian/</id>
        <link href="https://lantian.pub/article/modify-computer/build-custom-android-kernel-with-nix.lantian/"/>
        <updated>2025-02-10T00:44:06.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>我现在使用的手机是 Motorola Edge+
2023，一台 Android 手机。为了更好的自定义手机的功能，我解锁了手机的 Bootloader，并且获取了 Root 权限，以便安装 LSPosed 以及基于 LSPosed 的各种插件。</p>
<p>我使用的 Root 方案是
<a href="https://kernelsu.org/" rel="noopener noreferrer" target="_blank">KernelSU</a>，通过修改 Linux 内核，从而允许且只允许指定程序获取 Root 权限。虽然 KernelSU 官方提供了适配大部分手机的
<a href="https://source.android.com/docs/core/architecture/kernel/generic-kernel-image" rel="noopener noreferrer" target="_blank">GKI</a>
内核镜像，但我给手机刷了不兼容 GKI 的 LineageOS，所以只能自己编译内核。</p>
<p>由于直接修改内核镜像的难度较大，我们一般是从手机厂商获取以 GPLv2 协议开源的内核源码，按照
<a href="https://kernelsu.org/zh_CN/guide/how-to-integrate-for-non-gki.html" rel="noopener noreferrer" target="_blank">KernelSU 的官方教程</a>进行修改后，再编译成完整的内核。</p>
<blockquote>
<p>注：现在有一种新的 Root 方案
<a href="https://apatch.dev/" rel="noopener noreferrer" target="_blank">APatch</a>，通过直接修改内核镜像来实现类似 KernelSU 的功能。我没试过 APatch，但如果你不想自己编译内核，可以尝试一下。</p>
</blockquote>
<p>由于 KernelSU 使用广泛，有一些开发者编写了 GitHub Actions 的 Workflow，例如
<a href="https://github.com/xiaoleGun/KernelSU_Action" rel="noopener noreferrer" target="_blank">https://github.com/xiaoleGun/KernelSU_Action</a>，可以自动给内核源码打补丁并进行编译。但我在尝试这些 Workflow 时发现了一些问题：</p>
<ul>
<li>这些 Workflow 会同时安装多种编译器，包括 GitHub
Actions 环境自带的 GCC，Google 专门为 Android 提供的
<a href="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/" rel="noopener noreferrer" target="_blank">ARM32 GCC</a>
和
<a href="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9" rel="noopener noreferrer" target="_blank">ARM64 GCC</a>，以及
<a href="https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/" rel="noopener noreferrer" target="_blank">Clang</a>。如果编译参数设置错误，编译 Android 内核时会混用多种编译器进行编译，导致最终生成的内核运行不稳定，甚至无法启动。</li>
<li>这些 Workflow 都只能在 GitHub Actions 上运行，难以在本地进行调试。</li>
<li>这些 Workflow 一般都是定时运行，或者由用户手动触发。如果采用定时运行，即使内核源码和 KernelSU 源码都没有更新，Workflow 也会反复重新编译内核，浪费计算资源。如果由用户手动触发，可能无法及时获取到最新的内核更新。</li>
</ul>
<p>因为我最近一直在用 NixOS 作为操作系统，我自然想到了用 Nix 包管理器解决上面的问题：</p>
<ul>
<li>Nix 在构建软件包时会创建一个隔离环境，其中只含有我指定的编译器。这就避免了混用编译器导致的问题。</li>
<li>Nix 包管理器既可以在本地的 Linux 系统上运行，也可以在 GitHub
Actions 上运行，并且创建的隔离环境都是一样的。因此我可以在本地调试完流程，然后放心地上传到 GitHub 上让 Actions 去自动编译更新后的内核。</li>
<li>Nix 在构建软件包时同样会记录所有源代码的版本（实际上是记录源码的 SHA256）和编译命令。如果源代码版本和编译命令都和之前的相同，Nix 可以直接调出上次的编译结果，不用重复编译。</li>
</ul>
<p>于是，我就写了一套 Nix 的编译脚本（Nix Derivation），用来给我的手机编译内核。</p>
<h1 id="使用">使用</h1>
<p>我把这套编译脚本上传到了 GitHub：<a href="https://github.com/xddxdd/nix-kernelsu-builder" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder</a></p>
<p>这套脚本可以自动给你的内核源码打上 KernelSU 和 SusFS 补丁，然后编译内核并生成基于 AnyKernel 的刷机包，供在 Recovery 中刷入。</p>
<p>在安装 Nix 包管理器后，你可以 Fork 仓库，修改 <code>kernels.nix</code>
加入你的手机的内核信息，然后通过 <code>nix build .#[内核名称]</code>
来编译内核。具体的配置参数已经列出在仓库的 README 中。</p>
<p>如果你使用
<a href="https://flake.parts/" rel="noopener noreferrer" target="_blank">Flake.parts</a>，你也可以把我的仓库当成 Flake.parts 的模块使用：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    flake-parts</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"github:hercules-ci/flake-parts"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    nix-kernelsu-builder</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"github:xddxdd/nix-kernelsu-builder"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  outputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    { </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">flake-parts</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, ... }@</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">:</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    flake-parts</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkFlake</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">inherit</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000"> inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; } {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      imports</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">        inputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">nix-kernelsu-builder</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">flakeModules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">default</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">      ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      systems</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"x86_64-linux"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">      perSystem</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> =</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        { </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">, ... }:</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">          kernelsu</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">            # 在此处添加你的内核配置</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">            example-kernel</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              anyKernelVariant</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"kernelsu"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              clangVersion</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"latest"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">variant</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"next"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">                enable</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">true</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">                src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">path/to/sufs/source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">                kernelsuPatch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">./patches/susfs-for-kernelsu-next.patch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">              };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelDefconfigs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "gki_defconfig"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/kalama_GKI.config"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/ext_config/moto-kalama.config"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/ext_config/moto-kalama-gki.config"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "vendor/ext_config/moto-kalama-rtwo.config"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">              ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelImageName</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Image"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelMakeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "KCFLAGS=</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">-w</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">                "KCPPFLAGS=</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">-w</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">              ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">              kernelSrc</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">path/to/kernel/source</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">            };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">          };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">        };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">    };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h1 id="关键部分">关键部分</h1>
<p>下文将介绍这套脚本中的一些关键部分。</p>
<h2 id="准备编译器">准备编译器</h2>
<p>要编译内核，首先要准备好的就是编译器。编译 Android 内核时常用的编译器是 Clang，但一些老旧设备的内核可能太老，不支持 Clang，此时就需要使用 GCC 编译器。</p>
<p>Clang 编译器很好解决，Nixpkgs 里就有 Clang 的软件包，可以用
<code>nix run nixpkgs#clang -- --version</code> 看到最新的 Clang 版本：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># nix run nixpkgs#clang -- --version</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">clang</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> version</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658"> 19.1.6</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">Target:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> x86_64-unknown-linux-gnu</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">Thread</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> model:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> posix</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">InstalledDir:</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> /nix/store/2d1r5kvz7plg24bwb316972knqmiyf2p-clang-19.1.6/bin</span></span></code></pre>
<p>Clang 编译器本身支持交叉编译，可以直接在 x86_64 的电脑上编译 ARM32、ARM64 的程序，不需要额外的工具链，因此 Nixpkgs 里的 Clang 可以直接使用。</p>
<p>老旧内核的 GCC 就有点麻烦了，Nixpkgs 里早已删除了老旧的 GCC 版本，目前（2025 年 2 月）Nixpkgs 里最旧的 GCC 版本是 9.5.0。而且，默认的 GCC 只能编译同平台的程序，要交叉编译 ARM32/ARM64 的内核需要特殊的 GCC 和工具链。</p>
<p>在这里我选择了取巧的方法：我直接把 Google 提供的 GCC 编译器打包成 Nix 的软件包，提供给编译环境。虽然 Google 已经从服务器上删除了较老的 GCC 编译器，但 GitHub 上有人提供了备份。</p>
<p>ARM32 GCC 的打包结果如下：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> rec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  pname</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"gcc-arm-linux-androideabi"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  version</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"3ecb542702c2ca0e502533c3f6d02f0f06f584f1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    owner</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"KudProject"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    repo</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"arm-linux-androideabi-4.9"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    rev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"3ecb542702c2ca0e502533c3f6d02f0f06f584f1"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    fetchSubmodules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    sha256</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"sha256-5aF2Pl+h6J8/5TfQf2ojp3FCnoKakWH6KBCkWdy5ho8="</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  buildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  installPhase</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    mkdir -p $out</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r * $out/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  meta</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">xddxdd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    license</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">licenses</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">gpl3Plus</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ARM32 GCC for building Android kernels"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    platforms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"x86_64-linux"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>而 ARM64 GCC 的打包结果如下：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">,</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}:</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> rec</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  pname</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"gcc-aarch64-linux-android"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  version</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5797d7f622321e734558bd3372a9ab5ad6e6a48e"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  src</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    owner</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"kindle4jerry"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    repo</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"aarch64-linux-android-4.9-bakup"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    rev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"5797d7f622321e734558bd3372a9ab5ad6e6a48e"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    fetchSubmodules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    sha256</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"sha256-ZrQmFyiDOKg+qcgdpZqtz+LgDDaao2W27kdZZ2As8XU="</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">autoPatchelfHook</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  buildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">python3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  installPhase</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    mkdir -p $out</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r * $out/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  meta</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">with</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">maintainers</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">; [ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">xddxdd</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    license</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">lib</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">licenses</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">gpl3Plus</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    description</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"ARM64 GCC for building Android kernels"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">    platforms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [ </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"x86_64-linux"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ];</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  };</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<h2 id="获取内核和-kernelsu-源码">获取内核和 KernelSU 源码</h2>
<p>有了编译器，下一步就是要获取内核和 KernelSU 的源代码。因为我用的是 LineageOS，我可以直接从 LineageOS 的 GitHub 仓库里下载到内核源码：<a href="https://github.com/LineageOS/android_kernel_motorola_sm8550" rel="noopener noreferrer" target="_blank">https://github.com/LineageOS/android_kernel_motorola_sm8550</a></p>
<blockquote>
<p>你也可以去手机厂商的官网上找内核代码。由于 Linux 内核的授权协议是 GPLv2，所有手机厂商都必须把他们修改后的内核代码开源。</p>
</blockquote>
<p>在 Nix 包管理器中，你可以用 <code>fetchFromGitHub</code> 函数从 GitHub 上下载内核源码：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetchFromGitHub</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  owner</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"LineageOS"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  repo</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"android_kernel_motorola_sm8550"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  rev</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"1bdeb4f5c8d2b98ef5f2bedaa5d704032dffd676"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  fetchSubmodules</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">false</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  sha256</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"sha256-ZK/DH5N5LdkLe48cANESjw1x74aXoZLFoMAwEDvzEk4="</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span><span style="--shiki-dark:#F44747;--shiki-light:#CD3131">;</span></span></code></pre>
<p>但这样下载的是 <code>rev</code>
参数指定的 Commit 的内核源码，不会自动更新。要解决这个问题，我们可以用
<a href="https://github.com/berberman/nvfetcher" rel="noopener noreferrer" target="_blank">Nvfetcher</a>
工具，自动获取最新 Commit。首先创建一个 <code>nvfetcher.toml</code> 文件：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[linux-moto-rtwo-lineageos-22_1]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/LineageOS/android_kernel_motorola_sm8550.git"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.branch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"lineage-22.1"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"LineageOS/android_kernel_motorola_sm8550"</span></span></code></pre>
<p>然后运行 Nvfetcher：<code>nix run github:berberman/nvfetcher</code></p>
<p>Nvfetcher 会根据你的配置自动下载最新的 Commit，并写入 <code>_sources/generated.nix</code>
文件中。然后你就可以调用这个文件里配置好的内核源码了：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  sources</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">callPackage</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ../_sources/generated.nix</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { };</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">  sources</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">linux-moto-rtwo-lineageos-22_1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span></span></code></pre>
<p>我们可以用同样的方法获取 KernelSU 的版本，但由于 KernelSU 从 1.0 开始的版本只支持 GKI 内核，我们只能使用最后一个支持其它内核的 0.9.5 版本：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># nvfetcher.toml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-stable]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.manual</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"v0.9.5"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/tiann/KernelSU.git"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 我们还需要获取 KernelSU 的 Revision Code（即 Commit 数量）。对于 0.9.5 版本可以直接写死</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-stable-revision-code]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.manual</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"11872"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 下载地址无所谓，我们只用版本号</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://example.com"</span></span></code></pre>
<p>不过现在有一个 KernelSU 的 Fork
<a href="https://github.com/rifsxd/KernelSU-Next" rel="noopener noreferrer" target="_blank">KernelSU-Next</a>，其最新版本同时支持 GKI 和非 GKI 内核，因此我们可以用它获取最新功能：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># nvfetcher.toml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-next]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"rifsxd/KernelSU-Next"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/rifsxd/KernelSU-Next.git"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 从 KernelSU-Next 官方发布的管理器 APK 文件名提取 Commit 数量</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[kernelsu-next-revision-code]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.webpage</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://api.github.com/repos/rifsxd/KernelSU-Next/releases?per_page=1"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.regex</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"download</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/v[0-9</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">._]+</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/KernelSU[^</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">]*_([0-9]+)-release</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\\</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">.apk"</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 下载地址无所谓，我们只用版本号</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.url</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://example.com"</span></span></code></pre>
<h2 id="给内核源码打补丁">给内核源码打补丁</h2>
<p>有了内核源码和 KernelSU，下一步就是按照
<a href="https://kernelsu.org/zh_CN/guide/how-to-integrate-for-non-gki.html" rel="noopener noreferrer" target="_blank">KernelSU 的官方教程</a>修改内核。这一步我只是将官方教程的步骤转写成 Bash 脚本放入 Nix 编译脚本中。</p>
<p>唯一需要注意的是，KernelSU 会尝试通过 Git 获取 Commit 数量，也就是你在 KernelSU 管理器里看到的版本号。由于 Nix 包管理器的限制，获取的源码中没有 Git 仓库信息，因此我们需要修改 KernelSU 的脚本，使用我们预先获取的 Commit 数量：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 创建一个假的 git 命令，防止找不到命令出错</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  fakeGit</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">writeShellScriptBin</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "git"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    exit 0</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    fakeGit</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  postPatch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    export HOME=$(pwd)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 把 KernelSU 复制到内核源码文件夹下</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    chmod -R +w </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 强制设置 KernelSU 版本，不让它从 Git 获取版本号</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/ version:/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/KSU_GIT_VERSION not defined/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "s|ccflags-y += -DKSU_VERSION=|ccflags-y += -DKSU_VERSION=\"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">revision</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">\"\n#|g" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 将内核编译脚本的 #!/bin/sh 等 Shebang 替换成隔离环境中的路径</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patchShebangs .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 调用 KernelSU 的脚本打补丁</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    bash </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/setup.sh</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>完整的代码可以在
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix</a>
看到。</p>
<h2 id="可选susfs-补丁">（可选）SusFS 补丁</h2>
<p><a href="https://gitlab.com/simonpunk/susfs4ksu" rel="noopener noreferrer" target="_blank">SusFS</a>
是一组额外的内核补丁，它可以隐藏 Root 后对系统的一些文件修改，让他们只对获取了 Root 权限的软件以及系统本身可见，从而防止软件检测 Root 并拒绝启动。</p>
<p>这里也是根据 <a href="https://gitlab.com/simonpunk/susfs4ksu" rel="noopener noreferrer" target="_blank">SusFS 的 README</a>
一步一步走就好：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  postPatch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">''</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    export HOME=$(pwd)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 把 KernelSU 复制到内核源码文件夹下</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    chmod -R +w </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 强制设置 KernelSU 版本，不让它从 Git 获取版本号</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/ version:/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "/KSU_GIT_VERSION not defined/d" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    sed -i "s|ccflags-y += -DKSU_VERSION=|ccflags-y += -DKSU_VERSION=\"</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">revision</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">\"\n#|g" </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/Makefile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 把 SusFS 复制到内核源码文件夹下</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel_patches/fs/* fs/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    cp -r </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel_patches/include/linux/* include/linux/</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    chmod -R +w fs include/linux</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 对内核本身应用 SusFS 的补丁</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patch -p1 &#x3C; </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelPatch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 对 KernelSU 应用 SusFS 的补丁</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    pushd </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patch -p1 &#x3C; </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">susfs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelsuPatch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    popd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 将内核编译脚本的 #!/bin/sh 等 Shebang 替换成隔离环境中的路径</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    patchShebangs .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    # 调用 KernelSU 的脚本打补丁</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    bash </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelSU</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">subdirectory</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/kernel/setup.sh</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">  ''</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>完整的代码可以在
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/patch-kernel-src.nix</a>
看到。</p>
<h2 id="开启-kernelsu-相关编译选项">开启 KernelSU 相关编译选项</h2>
<p>添加 KernelSU 补丁后，还需要在内核的 <code>defconfig</code>
中开启相关的选项，保证 KernelSU 功能被加入到编译出的内核中：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 指定 defconfig 的路径</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">export</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> CFG_PATH</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">/${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}/</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">configs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">/${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">defconfig</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果启用了 KernelSU</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_MODULES=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KPROBES=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_HAVE_KPROBES=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KPROBE_EVENTS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_OVERLAY_FS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 如果启用了 SusFS</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_PATH=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_KSTAT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_TRY_UMOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SPOOF_UNAME=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_ENABLE_LOG=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_KSU_SUSFS_SUS_SU=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "CONFIG_TMPFS_XATTR=y"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> >> </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$CFG_PATH</span></span></code></pre>
<p>完整命令可以在
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/kernel-config-cmd.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/kernel-config-cmd.nix</a>
看到。</p>
<h2 id="编译内核">编译内核</h2>
<p>下一步就是用打过补丁的内核源码编译出内核镜像。</p>
<p>如果使用 GCC 作为编译器，需要将 Google 提供的编译器加入编译环境，并在编译参数中指定编译器命令前缀即可：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  gcc-aarch64-linux-android</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">callPackage</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ../pkgs/gcc-aarch64-linux-android.nix</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { };</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  gcc-arm-linux-androideabi</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">callPackage</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> ../pkgs/gcc-arm-linux-androideabi.nix</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> { };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 稍后传给 make 命令</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  finalMakeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "ARCH=</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CROSS_COMPILE=aarch64-linux-android-"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CROSS_COMPILE_ARM32=arm-linux-androideabi-"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "O=$out"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    gcc-aarch64-linux-android</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    gcc-arm-linux-androideabi</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>完整命令可以在
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-gcc.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-gcc.nix</a>
看到。</p>
<p>如果使用 Clang 作为编译器，可以直接使用 Nixpkgs 提供的 Clang
stdenv，并在编译参数中指定使用 LLVM 和 <code>lld</code>：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">let</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 稍后传给 make 命令</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  finalMakeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "ARCH=</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CC=clang"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "O=$out"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "LD=ld.lld"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "LLVM=1"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "LLVM_IAS=1"</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">    "CLANG_TRIPLE=aarch64-linux-gnu-"</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ] ++ </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">makeFlags</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # 使用用户指定的 Clang/LLVM 版本</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  usedLLVMPackages</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">pkgs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"llvmPackages_</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">${builtins</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">toString</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080"> clangVersion</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">in</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 使用 Clang/LLVM 的 stdenv，自带了 Clang/LLVM 工具链</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">usedLLVMPackages</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">stdenv</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">mkDerivation</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#E50000">  nativeBuildInputs</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = [</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">    # 添加 ld.lld 命令</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">    usedLLVMPackages</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">.</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">bintools</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">  ];</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000">  # ...</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span></code></pre>
<p>完整命令可以在
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-clang.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-kernel-clang.nix</a>
看到。</p>
<h2 id="生成-anykernel-刷机包">生成 AnyKernel 刷机包</h2>
<p><a href="https://github.com/osm0sis/AnyKernel3" rel="noopener noreferrer" target="_blank">AnyKernel</a>
是一个 Android 刷机包模板，可以将给定的内核镜像刷入手机中。AnyKernel 的一大优势是它可以只刷内核镜像，不修改 Initramfs 中的其它启动命令，包括 Android 系统的启动命令和 Magisk 的命令（如果安装了的话）。</p>
<p>AnyKernel 本身的使用非常简单：只需要根据手机的情况修改 <code>anykernel.sh</code>
中的几个参数，然后把内核文件和 AnyKernel 的其它文件放在一起打成 <code>zip</code>
压缩包即可。</p>
<p>唯一需要注意的是，原版的 AnyKernel 只支持非 GKI 的设备，在支持 GKI 的设备上会报错。KernelSU 团队提供了一个<a href="https://github.com/Kernel-SU/AnyKernel3" rel="noopener noreferrer" target="_blank">修改的 AnyKernel</a>，它和原版正相反，只支持 GKI 设备，在非 GKI 设备上会报错。根据你的设备选择即可。</p>
<p>我把两个版本的 AnyKernel 都放入了 <code>nvfetcher.toml</code> 以供调用：</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[anykernel-kernelsu]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/Kernel-SU/AnyKernel3.git"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"Kernel-SU/AnyKernel3"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">[anykernel-osm0sis]</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">src.git</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"https://github.com/osm0sis/AnyKernel3.git"</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">fetch.github</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"osm0sis/AnyKernel3"</span></span></code></pre>
<p>完整的打包代码可以在
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-anykernel-zip.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-anykernel-zip.nix</a>
看到。</p>
<h2 id="可选生成-bootimg-镜像">（可选）生成 boot.img 镜像</h2>
<p>如果你不想/不能使用 AnyKernel，例如你的设备没有第三方 Recovery 可用，你可以找一份你的设备的
<code>boot.img</code>
镜像。只要把镜像中的内核替换掉，并保持其它部分不变，也可以达成和 AnyKernel 一样的效果。</p>
<pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 记录原设备 boot.img 镜像的参数</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">IMG_FORMAT</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">=$(</span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">unpack_bootimg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --boot_img</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">bootImg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">} </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF">--format</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> mkbootimg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">)</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">echo</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "Image format: </span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$IMG_FORMAT</span><span style="--shiki-dark:#D7BA7D;--shiki-light:#EE0000">\"</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 解压 boot.img</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">unpack_bootimg</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF"> --boot_img</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">bootImg</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 用新编译出的内核替换原始内核</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">cp</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000"> ${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernel</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/arch/</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">arch</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">}</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/boot/</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">${</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">kernelImageName</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000">} </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">out/kernel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000"># 用原参数重新打包一份带新内核的 boot.img</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26">eval</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> "mkbootimg </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$IMG_FORMAT</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515"> -o </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080">$out</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515">/boot.img"</span></span></code></pre>
<p>完整的打包代码可以在
<a href="https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-boot-img.nix" rel="noopener noreferrer" target="_blank">https://github.com/xddxdd/nix-kernelsu-builder/blob/main/pipeline/build-boot-img.nix</a>
看到。</p>]]></content>
        <published>2025-02-10T00:44:06.000Z</published>
        <rights>Copyright 2012-2025 Lan Tian @ Blog</rights>
    </entry>
</feed>